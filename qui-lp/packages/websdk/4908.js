"use strict";(this.webpackChunk_stechquick_websdk=this.webpackChunk_stechquick_websdk||[]).push([[4908],{84908:(e,t,r)=>{r.r(t),r.d(t,{QCaptcha:()=>n,QDynamicFields:()=>o,QLegend:()=>i,QQRCode:()=>l});const n={pJson:[{T:"Messaging",P:{ID:{H:"EdtrComp_3",T:"prop"},externalEvents:{H:"[{name='setUrl', params=['url']}, {name='setCodeValue', params=['codeValue']},{name='clickSubmit',params=['']},{name= 'onChangeGetCodeValue',params=['codeValue']}]",T:"prop"},externalProps:{H:"['maxLength']",T:"prop"}},E:{setUrl:{H:"imgCaptcha.src = url ",C:!0,EV:!0},clickSubmit:{H:"parent.events.clickSubmit()",C:!0},setCodeValue:{H:"txtVerCode.internalValue = codeValue ",C:!0,EV:!0}},C:{},_Editor:{eID:"EdtrComp_3"},O:{compDomClasses:"",cType:"child"}},{T:"VRow",P:{ID:{H:"rowCaptcha",T:"prop"},class:{H:"'d-flex flex-row'",T:"class"}},E:{},C:{default:{c:[{T:"VTextField",P:{ID:{H:"txtVerCode",T:"prop"},label:{H:"LR('lblDogrulamaKodu')",T:"prop"},regular:{H:"'true'",T:"prop"},class:{H:"'col-2 mt-1'",T:"class"},solo:{H:"false",T:"prop"},outlined:{H:"true",T:"prop"},dense:{H:"true",T:"prop"},maxlength:{H:"parent.props.maxLength",T:"attr"}},E:{change:{H:"parent.events.onChangeGetCodeValue({codeValue=value})",P:"value"},input:{H:"parent.events.onChangeGetCodeValue({codeValue=value})",P:"value"}},C:{default:{c:[{T:"Ghost",P:{ID:{H:"EdtrComp_10",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_10"},O:{cType:"child",compDomClasses:""}}],cType:"slot"}},_Editor:{eID:"EdtrComp_5"},O:{cType:"slot",compDomClasses:"v-input v-input--dense theme--light v-text-field v-text-field--is-booted v-text-field--enclosed v-text-field--outlined col-2 mt-1"}},{T:"VImg",P:{ID:{H:"imgCaptcha",T:"prop"},src:{H:"'https://www.tsohost.com/assets/uploads/blog/capcha.jpeg'",T:"prop"},height:{H:"'50'",T:"prop"},width:{H:"'50'",T:"prop"},class:{H:"'col-1 ml-2'",T:"class"},maxHeight:{H:"'80px'",T:"prop"},maxWidth:{H:"'100px'",T:"prop"}},E:{},C:{default:{c:[{T:"Ghost",P:{ID:{H:"EdtrComp_11",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_11"},O:{cType:"child",compDomClasses:"editor-ghost-comp"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_6"},O:{cType:"slot",compDomClasses:"v-image v-responsive theme--light col-1 ml-2"}},{T:"VBtn",P:{ID:{H:"btnSubmit",T:"prop"},color:{H:"'primary'",T:"prop"},regular:{H:"true",T:"prop"},icon:{H:"true",T:"prop"},class:{H:"'mt-1 ml-3'",T:"class"}},E:{click:{H:"MM.trigger('clickSubmit')",P:"mouseEvent"}},C:{default:{c:[{T:"VIcon",P:{ID:{H:"EdtrComp_14",T:"prop"},text:{H:"'mdi-refresh'",T:"text"}},E:{},C:{default:{c:[{T:"Ghost",P:{ID:{H:"EdtrComp_13",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_13"},O:{cType:"child",compDomClasses:""}}],cType:"slot"}},_Editor:{eID:"EdtrComp_14"},O:{cType:"slot",compDomClasses:"v-icon notranslate mdi mdi-refresh theme--light"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_12"},O:{cType:"slot",compDomClasses:"v-btn v-btn--flat v-btn--icon v-btn--round theme--light v-size--default primary--text mt-1 ml-3"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_2"},O:{cType:"slot",compDomClasses:"d-flex flex-row"}}],cJson:[{T:"Messaging",P:{ID:{H:"EdtrComp_3",T:"prop"},externalEvents:{H:"╬[]╠{}╠=╣name╩╠'setUrl'╩╩╠=╣params╩╠[]╠'url'╩╩╩╩╠{}╠=╣name╩╠'setCodeValue'╩╩╠=╣params╩╠[]╠'codeValue'╩╩╩╩╠{}╠=╣name╩╠'clickSubmit'╩╩╠=╣params╩╠[]╠''╩╩╩╩╠{}╠=╣name╩╠'onChangeGetCodeValue'╩╩╠=╣params╩╠[]╠'codeValue'╩╩╩╩╩╩",T:"prop"},externalProps:{H:"╬[]╠'maxLength'╩╩╩",T:"prop"}},E:{setUrl:{H:"╬=╣.╣imgCaptcha╩╠src╩╩╠url╩╩╩",C:!0,EV:!0},clickSubmit:{H:"╬()╣.╣.╣parent╩╠events╩╩╠clickSubmit╩╩╩╩",C:!0},setCodeValue:{H:"╬=╣.╣txtVerCode╩╠internalValue╩╩╠codeValue╩╩╩",C:!0,EV:!0}},C:{},_Editor:{eID:"EdtrComp_3"},O:{compDomClasses:"",cType:"child"}},{T:"VRow",P:{ID:{H:"rowCaptcha",T:"prop"},class:{H:"╬'d-flex flex-row'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VTextField",P:{ID:{H:"txtVerCode",T:"prop"},label:{H:"╬()╣LR╩╠'lblDogrulamaKodu'╩╩╩",T:"prop"},regular:{H:"╬'true'╩╩",T:"prop"},class:{H:"╬'col-2 mt-1'╩╩",T:"class"},solo:{H:"╬false╩╩",T:"prop"},outlined:{H:"╬true╩╩",T:"prop"},dense:{H:"╬true╩╩",T:"prop"},maxlength:{H:"╬.╣.╣parent╩╠props╩╩╠maxLength╩╩╩",T:"attr"}},E:{change:{H:"╬()╣.╣.╣parent╩╠events╩╩╠onChangeGetCodeValue╩╩╠{}╠=╣codeValue╩╠value╩╩╩╩╩",P:"value"},input:{H:"╬()╣.╣.╣parent╩╠events╩╩╠onChangeGetCodeValue╩╩╠{}╠=╣codeValue╩╠value╩╩╩╩╩",P:"value"}},C:{default:{c:[{T:"Ghost",P:{ID:{H:"EdtrComp_10",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_10"},O:{cType:"child",compDomClasses:""}}],cType:"slot"}},_Editor:{eID:"EdtrComp_5"},O:{cType:"slot",compDomClasses:"v-input v-input--dense theme--light v-text-field v-text-field--is-booted v-text-field--enclosed v-text-field--outlined col-2 mt-1"}},{T:"VImg",P:{ID:{H:"imgCaptcha",T:"prop"},src:{H:"╬'https://www.tsohost.com/assets/uploads/blog/capcha.jpeg'╩╩",T:"prop"},height:{H:"╬'50'╩╩",T:"prop"},width:{H:"╬'50'╩╩",T:"prop"},class:{H:"╬'col-1 ml-2'╩╩",T:"class"},maxHeight:{H:"╬'80px'╩╩",T:"prop"},maxWidth:{H:"╬'100px'╩╩",T:"prop"}},E:{},C:{default:{c:[{T:"Ghost",P:{ID:{H:"EdtrComp_11",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_11"},O:{cType:"child",compDomClasses:"editor-ghost-comp"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_6"},O:{cType:"slot",compDomClasses:"v-image v-responsive theme--light col-1 ml-2"}},{T:"VBtn",P:{ID:{H:"btnSubmit",T:"prop"},color:{H:"╬'primary'╩╩",T:"prop"},regular:{H:"╬true╩╩",T:"prop"},icon:{H:"╬true╩╩",T:"prop"},class:{H:"╬'mt-1 ml-3'╩╩",T:"class"}},E:{click:{H:"╬()╣.╣MM╩╠trigger╩╩╠'clickSubmit'╩╩╩",P:"mouseEvent"}},C:{default:{c:[{T:"VIcon",P:{ID:{H:"EdtrComp_14",T:"prop"},text:{H:"╬'mdi-refresh'╩╩",T:"text"}},E:{},C:{default:{c:[{T:"Ghost",P:{ID:{H:"EdtrComp_13",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_13"},O:{cType:"child",compDomClasses:""}}],cType:"slot"}},_Editor:{eID:"EdtrComp_14"},O:{cType:"slot",compDomClasses:"v-icon notranslate mdi mdi-refresh theme--light"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_12"},O:{cType:"slot",compDomClasses:"v-btn v-btn--flat v-btn--icon v-btn--round theme--light v-size--default primary--text mt-1 ml-3"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_2"},O:{cType:"slot",compDomClasses:"d-flex flex-row"}}],lrids:{"tr-TR":{lblDogrulamaKodu:"'Doğrulama Kodu'"},"en-US":{lblDogrulamaKodu:"'Verification Code'"}},clrids:{"tr-TR":{lblDogrulamaKodu:"╬'Doğrulama Kodu'╩╩"},"en-US":{lblDogrulamaKodu:"╬'Verification Code'╩╩"}}},o={pJson:[{T:"Messaging",P:{ID:{H:"EdtrComp_8",T:"prop"},externalProps:{H:"['authorizationKey','serviceName', 'serviceFilterKey', 'model', 'data']",T:"prop"}},E:{GetDynamicData:{H:"quick.EM.trace(\"GetDynamicData event triggered\")\r\n\r\nconst dynamicComponentData: any = quick.getFormData(\"DynamicFields\");\r\n\r\nconst serviceData: any = {};\r\nObject.keys(dynamicComponentData).forEach(key => {\r\n    debugger;\r\n    const dataGroup = key.split('_')[1];\r\n    const dataField = key.split('_')[2];\r\n    let dataValue = dynamicComponentData[key];\r\n    dataValue = typeof dataValue === 'object' ? dataValue.value : dataValue ;\r\n\r\n    serviceData[dataGroup] = serviceData[dataGroup] ?? {}\r\n    serviceData[dataGroup][dataField] = dataValue;\r\n});\r\n\r\nquick.EM.trace('DynamicFieldsData result:');\r\nquick.EM.trace(serviceData);\r\n\r\nserviceData;\r\n\r\n",C:!0,EV:!0,HL:"TS"},CreateFields:{H:'quick.EM.trace(\'DS LoadComponent running\')\r\nquick.EM.trace("model")\r\nquick.EM.trace(model)\r\nquick.EM.trace("data")\r\nquick.EM.trace(data)\r\n\r\n\r\ndeclare let model: IDynamicScreenModel;\r\ndeclare let data: any;\r\ndeclare let modelKey: string;\r\ndeclare let modelUrl: string;\r\n\r\nquick.store.set(\'modelKey\',modelKey);\r\nquick.store.set(\'modelUrl\',modelUrl);\r\n\r\n//__INTERFACES__//\r\ninterface IDynFieldSimple {\r\n    name: "text" | "numeric" | "money" | "multiline" | "date"\r\n}\r\n\r\ntype DynLocalizationGuid = string;\r\n\r\ninterface IDynFieldOption {\r\n    label: DynLocalizationGuid | string;\r\n    value: string;\r\n}\r\ninterface IDynFieldOptions {\r\n    name: "combobox" | "multiselect";\r\n    options: Array<IDynFieldOption>\r\n}\r\n\r\ninterface IDynamicField {\r\n    fieldName: string;\r\n    label: DynLocalizationGuid | string;\r\n    format?: string\r\n    type: IDynFieldOptions | IDynFieldSimple;\r\n}\r\ninterface IDynamicGroup {\r\n    groupName: string;\r\n    label?: DynLocalizationGuid | string;\r\n    boxWithCard?: boolean;\r\n    layout?: number;\r\n    fields: Array<IDynamicField>;\r\n}\r\ninterface IDynamicUIFields {\r\n    groups: Array<IDynamicGroup>;\r\n    localization: Record<string, Record<string, string>>;\r\n}\r\n\r\ninterface IDynamicRuleRegex {\r\n    type: "regex";\r\n    regex: string;\r\n}\r\ninterface IDynamicRuleLength {\r\n    type: "minlen" | "maxlen";\r\n    length: number;\r\n}\r\ninterface IDynamicRuleMaxLength extends IDynamicRuleLength {\r\n    type: "maxlen";\r\n    preventKeys?: boolean;\r\n}\r\ninterface IDynamicRuleValue {\r\n    type: "minval" | "maxval";\r\n    value: number | Date;\r\n}\r\ninterface IDynamicRuleSimple {\r\n    type: "required";\r\n}\r\ninterface IDynamicRuleOptions {\r\n    type: "options";\r\n    options: Array<string>;\r\n}\r\n\r\ntype DynamicFieldType = "text" | "numeric" | "money" | "multiline" | "date" | "combobox" | "multiselect";\r\n\r\ninterface IDynamicValFields {\r\n    fieldName: string;\r\n    rules: Array<IDynamicRuleRegex | IDynamicRuleLength | IDynamicRuleMaxLength | IDynamicRuleValue | IDynamicRuleSimple | IDynamicRuleOptions>,\r\n    type: DynamicFieldType\r\n}\r\ninterface IDynamicValGroups {\r\n    groupName: string;\r\n    fields: Array<IDynamicValFields>\r\n}\r\n\r\ninterface IDynamicScreenModel {\r\n    uiFields: IDynamicUIFields;\r\n    serviceFields: Array<IDynamicValGroups>\r\n}\r\n\r\n\r\nLoadFromDataModel();\r\n\r\nfunction LoadFromDataModel() {\r\n    if (model) {\r\n        model.uiFields.groups.forEach(function (group) {\r\n            group.layout = group.layout ?? 1;\r\n\r\n            const containerPlaceQID = CreateContainer(group);\r\n\r\n\r\n            const rowCount = Math.ceil(group.fields.length / group.layout)\r\n            const gridColCount = 12 / group.layout;\r\n            let rowIndex = 0;\r\n\r\n            group.fields.forEach((field, fieldIndex) => {\r\n                if (fieldIndex % group.layout! == 0) {\r\n                    //Create Row\r\n                    rowIndex++;\r\n                    quick.Quick.createComponent({\r\n                        templateCompQID: "VRow",\r\n                        newCompQID: group.groupName + \'_\' + rowIndex,\r\n                        placeQID: containerPlaceQID,\r\n                        place: containerPlaceQID ? <any>"Default" : undefined\r\n                    })\r\n                }\r\n\r\n                let templateComp;\r\n                switch (field.type.name) {\r\n                    case "text":\r\n                    case "numeric":\r\n                    case "money": {\r\n                        templateComp = "VColTextField";\r\n                        break;\r\n                    }\r\n                    case "combobox":\r\n                    case "multiselect": {\r\n                        templateComp = "VColCombo";\r\n                        break;\r\n                    }\r\n                    case "date": {\r\n                        templateComp = "VColDatepicker";\r\n                        break;\r\n                    }\r\n                    case "multiline": {\r\n                        templateComp = "VColTextArea";\r\n                        break;\r\n                    }\r\n                }\r\n                if (templateComp) {\r\n                    const colComp = quick.Quick.createComponent({\r\n                        templateCompQID: templateComp,\r\n                        newCompQID: group.groupName + \'_\' + field.fieldName,\r\n                        placeQID: "VRow_" + group.groupName + \'_\' + rowIndex,\r\n                        place: <any>"Default"\r\n                    })\r\n\r\n                    const fieldComp = colComp.$children[0];\r\n                    fieldComp.label = GetLR(field.label);\r\n                    fieldComp.customCompClass = \'col-\' + gridColCount;\r\n\r\n                    //Formats?? money, number, text (card,Iban,email), phone- QPhone comp??\r\n                    if (field.type.name == "text") {\r\n                        fieldComp.format = field.format;\r\n                    }\r\n\r\n                    if (field.type.name == "combobox" || field.type.name == "multiselect") {\r\n                        const comboItems = <any>[];\r\n                        (<IDynFieldOptions>field.type).options.forEach((item) => {\r\n                            comboItems.push({ text: GetLR(item.label), value: item.value })\r\n                        })\r\n                        fieldComp.items = comboItems\r\n                        fieldComp.multiple = field.type.name == "multiselect"\r\n                    }\r\n                    debugger;\r\n                    AddValidationRules(group, field, fieldComp);\r\n                    LoadData(group, field, fieldComp);\r\n                }\r\n\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction CreateContainer(group: IDynamicGroup): string {\r\n    let containerPlaceQID = <any>undefined;\r\n\r\n    if (group.boxWithCard) {\r\n\r\n        //Create Container\r\n        quick.Quick.createComponent({\r\n            templateCompQID: "VContainerTemp",\r\n            newCompQID: group.groupName + "Box",\r\n            placeQID: "DynamicFields",\r\n            place: <any>"Default"\r\n\r\n        })\r\n\r\n        containerPlaceQID = "VContainer_" + group.groupName + "Box"\r\n\r\n        if (group.groupName !== "defaultGroup") {\r\n            const titleComponent = quick.getComponent("QLabel_" + group.groupName + "Box");\r\n            titleComponent.text = group.label;\r\n        }\r\n\r\n    }\r\n    return containerPlaceQID ?? "DynamicFields";\r\n}\r\n\r\n\r\nfunction GetLR(key: string) {\r\n    const lang = quick.Quick.getLanguage();\r\n    return model.uiFields.localization[lang][key] ?? key;\r\n}\r\n\r\nfunction LoadData(group: IDynamicGroup, field: IDynamicField, fieldComp: any) {\r\n    if (data && data[group.groupName!]) {\r\n        switch (field.type.name) {\r\n            case "text":\r\n            case "numeric":\r\n            case "money":\r\n            case "multiline":\r\n                fieldComp.internalValue = data[group.groupName!][field.fieldName];\r\n                break;\r\n            case "date":\r\n                fieldComp.value = data[group.groupName!][field.fieldName];\r\n                break;\r\n            case "combobox":\r\n                const fieldValue = (<Array<any>>fieldComp.items).filter((item) => item.value == data[group.groupName!][field.fieldName])\r\n                fieldComp.internalValue = fieldValue[0];\r\n                break;\r\n            case "multiselect":\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nfunction AddValidationRules(group: IDynamicGroup, field: IDynamicField, fieldComp: any) {\r\n    let validationRules: Array<Function> = [];\r\n\r\n    const currentGroup = model.serviceFields.filter((groupItem) => groupItem.groupName == group.groupName)[0];\r\n    const currentField = currentGroup?.fields.filter((fieldItem) => fieldItem.fieldName == field.fieldName)[0];\r\n        currentField?.rules.forEach((rule) => {\r\n            switch (rule.type) {\r\n                case \'required\':\r\n                    validationRules.push(quick.Quick.validation.required());\r\n                    break;\r\n                case \'maxlen\':\r\n                    validationRules.push(quick.Quick.validation.maxLength(rule.length));\r\n                    break;\r\n                case \'minlen\':\r\n                    validationRules.push(quick.Quick.validation.minLength(rule.length));\r\n                    break;\r\n                case \'regex\':\r\n                    validationRules.push(quick.Quick.validation.regex(new RegExp(rule.regex)));\r\n                    break;\r\n            }\r\n        })\r\n    fieldComp.rules = validationRules;\r\n}\r\n\r\n\r\n//Validation Error response\r\nvar dynamicErrors = {\r\n    "selfDemographics.name": "required",\r\n    "selfJobInfo.occupation": "combobox",\r\n    "favouriteCurrency": "options",\r\n};\r\n\r\n//UI Validation constants\r\nvar errorConstants = {\r\n    required: "{0} alanına bilgi girişi zorunludur.",\r\n    combobox: "{0} alanına birden fazla veri girilemez.",\r\n    options: "{0} alanına geçerli bir değer girmediniz."\r\n}\r\n\r\n\r\n\r\n',C:!0,EV:!0,HL:"TS"},PreRender:{H:"//requestObject={}\r\n//requestObject.url='http://customer.tkb-int.dev.rally.softtech/getCustomerInfo'\r\n//requestObject.http='get'\r\n//requestObject.responseField='firstResponse'\r\n//requestObject.blockRender=true\r\n//requestObject.onSuccess='onSuccess'\r\n//Request.async(requestObject)\r\n\r\n",I:!0},EndRender:{H:"dynamicFieldEditBtn.visible = false\r\n\r\neditAuthorization = shell.getResource(parent.props.authorizationKey)\r\neditAuthorization = true //Test Code\r\ndynamicFieldEditBtn.visible = editAuthorization\r\n",HL:"QS"}},C:{},_Editor:{eID:"EdtrComp_8"},O:{cType:"child",compDomClasses:""}},{T:"VContainer",P:{ID:{H:"DynamicFields",T:"prop"}},E:{},C:{default:{c:[{T:"VRow",P:{ID:{H:"EdtrComp_1",T:"prop"},class:{H:"'d-flex flex-row'",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_3",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VBtn",P:{ID:{H:"dynamicFieldEditBtn",T:"prop"},color:{H:"'warning'",T:"prop"},class:{H:"''",T:"class"},regular:{H:"false",T:"prop"},icon:{H:"false",T:"prop"},fab:{H:"false",T:"prop"},visible:{H:"true",T:"prop"}},E:{click:{H:"\r\ninterface IDynamicGroup {\r\n    groupName: string;\r\n    label?: any;\r\n    boxWithCard?: boolean;\r\n    layout?: number;\r\n    fields: Array<any>;\r\n}\r\ninterface IDynamicUIFields {\r\n    groups: Array<IDynamicGroup>;\r\n    localization: Record<string, Record<string, string>>;\r\n}\r\n\r\n\r\nconst uiFields: IDynamicUIFields = quick.store.get('dynamicModel')?.uiFields;\r\n\r\nif (uiFields && uiFields.groups && uiFields.groups[0].fields) {\r\n    components.dynamicFieldsDataTable.items = uiFields.groups[0].fields;\r\n    components.cbTableGroupList.items = { text: uiFields.groups[0].groupName, value: uiFields.groups[0].groupName };\r\n}\r\n\r\n(<any>components.dynamicFieldsDialog).value = true",P:"mouseEvent:unknown | undefined",HL:"TS"}},C:{default:{c:[{T:"QLabel",P:{ID:{H:"EdtrComp_9",T:"prop"},text:{H:"'Dynamic Fields'",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_9"},O:{cType:"slot",compDomClasses:"q-label "}},{T:"VIcon",P:{ID:{H:"EdtrComp_7",T:"prop"},text:{H:"'mdi-pencil'",T:"text"}},E:{},C:{},_Editor:{eID:"EdtrComp_7"},O:{cType:"slot",compDomClasses:"v-icon notranslate mdi mdi-pencil theme--light"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_5"},O:{cType:"slot",compDomClasses:"v-btn v-btn--contained theme--light v-size--default warning"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_3"},O:{cType:"slot",compDomClasses:"col col-2 d-flex",layout:{dOpt:{xs:["c:col-2","d:d-flex"]},class:"col-2 d-flex"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_1"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_20"},O:{cType:"slot",compDomClasses:"container"}},{T:"VContainer",P:{ID:{H:"VContainerTemp",T:"prop"}},E:{},C:{default:{c:[{T:"VCard",P:{ID:{H:"VCard",T:"prop"}},E:{},C:{default:{c:[{T:"VContainer",P:{ID:{H:"VContainer",T:"prop"},Render:{H:"false",T:"prop"}},E:{},C:{default:{c:[{T:"QLabel",P:{ID:{H:"QLabel",T:"prop"},class:{H:"'v-card__title'",T:"class"},Render:{H:"false",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_59"},O:{cType:"child",compDomClasses:"q-label v-card__title newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_43"},O:{cType:"slot",compDomClasses:"container newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_52"},O:{cType:"slot",compDomClasses:"v-card v-sheet theme--light"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_50"},O:{cType:"slot",compDomClasses:"container"}},{T:"VCol",P:{ID:{H:"VColTextField",T:"prop"},class:{H:"''",T:"class"},Render:{H:"false",T:"prop"}},E:{},C:{default:{c:[{T:"VTextField",P:{ID:{H:"VTextField",T:"prop"},label:{H:"'Text field label'",T:"prop"},regular:{H:"'true'",T:"prop"},Render:{H:"false",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_11"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted undefined newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_44"},O:{cType:"slot",compDomClasses:"d-flex flex-column newDropBorder",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}},{T:"VCol",P:{ID:{H:"VColTextArea",T:"prop"},class:{H:"''",T:"class"},Render:{H:"false",T:"prop"}},E:{},C:{default:{c:[{T:"VTextarea",P:{ID:{H:"VTextArea",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_16"},O:{cType:"slot",compDomClasses:"v-input v-textarea theme--light v-text-field v-text-field--is-booted undefined newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_14"},O:{cType:"slot",compDomClasses:"d-flex flex-column newDropBorder",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}},{T:"VCol",P:{ID:{H:"VColCombo",T:"prop"},class:{H:"''",T:"class"},Render:{H:"false",T:"prop"}},E:{},C:{default:{c:[{T:"VCombobox",P:{ID:{H:"VCombobox",T:"prop"},attach:{H:"true",T:"prop"},label:{H:"'My Combobox'",T:"prop"},items:{H:"[{text = 'test1', value = 1},\n{ text = 'test2', value = 2}]",T:"prop"},Render:{H:"false",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_12"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_39"},O:{cType:"slot",compDomClasses:"d-flex flex-column newDropBorder",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}},{T:"VCol",P:{ID:{H:"VColDatepicker",T:"prop"},class:{H:"''",T:"class"},Render:{H:"false",T:"prop"}},E:{},C:{default:{c:[{T:"VInlineDatepicker",P:{ID:{H:"VDatepicker",T:"prop"},willAttach:{H:"false",T:"prop"},label:{H:"'Pick a date'",T:"prop"},locale:{H:"'tr'",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_19"},O:{cType:"slot",compDomClasses:"newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_17"},O:{cType:"slot",compDomClasses:"d-flex flex-column newDropBorder",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}},{T:"VRow",P:{ID:{H:"VRow",T:"prop"},class:{H:"'d-flex flex-row'",T:"class"},Render:{H:"false",T:"prop"}},E:{},C:{default:{c:[{T:"Ghost",P:{ID:{H:"EdtrComp_61",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_61"},O:{cType:"slot",compDomClasses:"editor-ghost-comp newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_60"},O:{cType:"slot",compDomClasses:"d-flex flex-row newDropBorder"}},{T:"VRow",P:{ID:{H:"EdtrComp_31",T:"prop"},class:{H:"'d-flex flex-row justify-space-around'",T:"class"}},E:{},C:{default:{c:[{T:"VBtn",P:{ID:{H:"EdtrComp_10",T:"prop"},color:{H:"'primary'",T:"prop"}},E:{click:{H:'let serviceModel = {\r\n    uiFields: {\r\n        groups: [\r\n            {\r\n                groupName: "selfDemographics", label: "Kişisel Bilgiler", layout: 3, boxWithCard: true, fields: [\r\n                    { fieldName: "identityNo", type: { name: "text" }, label: "LR_selfDemographics_tckn" },\r\n                    { fieldName: "name", type: { name: "text" }, label: "LR_selfDemographics_name" },\r\n                    { fieldName: "surname", type: { name: "text" }, label: "LR_selfDemographics_surname" },\r\n                    { fieldName: "dateOfBirth", type: { name: "date" }, label: "LR_selfDemographics_dateOfBirth" },\r\n                    {\r\n                        fieldName: "country", type: {\r\n                            name: "combobox", options: [\r\n                                { label: "Almanya", value: "2" },\r\n                                { label: "Türkiye", value: "1" }\r\n                            ]\r\n                        }, label: "Ülke"\r\n                    },\r\n                    { fieldName: "phone", type: { name: "text" }, label: "Telefon" },\r\n                    { fieldName: "address", type: { name: "multiline" }, label: "Adres" }\r\n                ]\r\n            },\r\n            {\r\n                groupName: "selfJobInfo", label: "Çalışma Bilgileri", layout: 1, boxWithCard: true, fields: [\r\n                    { fieldName: "name", type: { name: "text" }, label: "LR_selfDemographics_occupation" },\r\n                    {\r\n                        fieldName: "occupation", label: "LR_selfDemographics_occupation", type: {\r\n                            name: "combobox", options: [\r\n                                { label: "B6F651E2-A822-4381-868E-4CE55D200605", value: "1" },\r\n                                { label: "B6F651E2-A822-4381-868E-4CE55D200606", value: "2" }\r\n                            ]\r\n                        }\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                groupName: "defaultGroup", label: "Çalışma Bilgileri", layout: 2, boxWithCard: true, fields: [\r\n                    { fieldName: "name", type: { name: "text" }, label: "LR_selfDemographics_occupation" },\r\n                    {\r\n                        fieldName: "occupation", label: "LR_selfDemographics_occupation", type: {\r\n                            name: "combobox", options: [\r\n                                { label: "B6F651E2-A822-4381-868E-4CE55D200605", value: "1" },\r\n                                { label: "B6F651E2-A822-4381-868E-4CE55D200606", value: "2" }\r\n                            ]\r\n                        }\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                groupName: "defaultGroup", layout: 2, fields: [\r\n                    { fieldName: "address", type: { name: "text" }, label: "Adres" },\r\n                    { fieldName: "phone", type: { name: "text" }, label: "Telefon" },\r\n                    {\r\n                        fieldName: "favouriteCurrency", label: "B6F651E2-A822-4381-868E-4CE55D200607", type: {\r\n                            name: "combobox", options: [\r\n                                { label: "TRY", value: "try" }, { label: "EUR", value: "eur" }, { label: "USD", value: "usd" },\r\n                            ]\r\n                        },\r\n                    },\r\n                    { fieldName: "address", type: { name: "text" }, label: "Adres" },\r\n                    { fieldName: "phone", type: { name: "text" }, label: "Telefon" }\r\n                ]\r\n            }\r\n        ],\r\n        localization: {\r\n            "tr-TR": {\r\n                "LR_selfDemographics_tckn": "TCKN",\r\n                "LR_selfDemographics_name": "Ad",\r\n                "LR_selfDemographics_surname": "Soyad",\r\n                "LR_selfDemographics_occupation": "Meslek",\r\n                "LR_selfDemographics_dateOfBirth": "Doğum Tarihi",\r\n                "B6F651E2-A822-4381-868E-4CE55D200605": "Çalışıyor",\r\n                "B6F651E2-A822-4381-868E-4CE55D200606": "Çalışmıyor"\r\n            },\r\n            "en-US": {\r\n                "LR_selfDemographics_tckn": "Identity No",\r\n                "LR_selfDemographics_name": "Name",\r\n                "LR_selfDemographics_surname": "Surname",\r\n                "LR_selfDemographics_occupation": "Occupation",\r\n                "LR_selfDemographics_dateOfBirth": "Date Of Birth"\r\n            }\r\n        }\r\n    },\r\n    serviceFields : [\r\n        {\r\n            groupName: "selfDemographics",\r\n            fields: [\r\n                {\r\n                    fieldName: "name", type: "text", rules: [\r\n                        { type: "required" },\r\n                        { type: "maxlen", length: 30, preventKeys: true },\r\n                        { type: "minlen", length: 2 }   \r\n                    ]\r\n                },\r\n                { fieldName: "surname", type: "text", rules: [{ type: "required" }] }\r\n            ]\r\n        },\r\n        {\r\n            groupName: "selfJobInfo",\r\n            fields: [\r\n                { fieldName: "name", type: "text", rules: [{ type: "required" }] },\r\n                { fieldName: "occupation", type: "combobox", rules: [{ type: "options", options: ["1", "2"] }] }\r\n            ]\r\n        },\r\n        {\r\n\t\t\tgroupName: "defaultGroup",\r\n            fields: [\r\n                {\r\n                    fieldName: "favouriteCurrency", type: "multiselect",\r\n                    rules: [{ type: "required" }, { type: "options", options: ["try", "eur", "usd"] }]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};\r\n\r\nlet serviceData = {"selfDemographics":{"name":"Nilay","surname":"Akdoğan","country":"1","dateOfBirth":"19890104","address":"Reisdere Mah. Çeşme / İzmir"},\r\n"selfJobInfo":{"name":"Software Developer","occupation":"1"},"defaultGroup":{"favouriteCurrency":["eur","try"]}};\r\n\r\nlet serviceModelKey = "customerInfoModelKey";\r\nlet serviceModelUrl = "http://customer.tkb-int.dev.rally.softtech/api/SaveDynamicScreenModel/";\r\n\r\nquick.MM.trigger(\'CreateFields\',[{model:serviceModel,data:serviceData, modelKey: serviceModelKey, modelUrl: serviceModelUrl}])',P:"mouseEvent:unknown | undefined",HL:"TS"}},C:{default:{c:[{T:"QLabel",C:{},E:{},P:{ID:{H:"EdtrComp_13",T:"prop"},text:{H:"'Create Fields'",T:"prop"}},_Editor:{eID:"EdtrComp_13"},O:{cType:"child",compDomClasses:"q-label "}}],cType:"slot"}},_Editor:{eID:"EdtrComp_10"},O:{cType:"slot",compDomClasses:"v-btn v-btn--contained theme--light v-size--default primary"}},{T:"VBtn",P:{ID:{H:"EdtrComp_33",T:"prop"},color:{H:"'primary'",T:"prop"}},E:{click:{H:"const dynamicComponentData: any = quick.getFormData(\"DynamicFields\");\r\n\r\nconst serviceData: any = {};\r\nObject.keys(dynamicComponentData).forEach(key => {\r\n    debugger;\r\n    const dataGroup = key.split('_')[1];\r\n    const dataField = key.split('_')[2];\r\n    let dataValue = dynamicComponentData[key];\r\n    dataValue = typeof dataValue === 'object' ? dataValue.value : dataValue ;\r\n\r\n    serviceData[dataGroup] = serviceData[dataGroup] ?? {}\r\n    serviceData[dataGroup][dataField] = dataValue;\r\n});\r\n\r\nquick.EM.trace('Dynamic Fields Get Data');\r\nquick.EM.trace(serviceData);\r\n\r\nserviceData;\r\n",P:"mouseEvent:unknown | undefined",HL:"TS"}},C:{default:{c:[{T:"QLabel",C:{},E:{},P:{ID:{H:"EdtrComp_34",T:"prop"},text:{H:"'Get Data'",T:"prop"}},_Editor:{eID:"EdtrComp_34"},O:{cType:"child",compDomClasses:"q-label "}}],cType:"slot"}},_Editor:{eID:"EdtrComp_33"},O:{cType:"slot",compDomClasses:"v-btn v-btn--contained theme--light v-size--default primary"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_31"},O:{cType:"slot",compDomClasses:"d-flex flex-row justify-space-around"}},{T:"VDialog",P:{ID:{H:"dynamicFieldsDialog",T:"prop"},width:{H:"1500",T:"prop"},eager:{H:"true",T:"prop"}},E:{"click:outside":{H:"(<any>components.dynamicFieldsDialog).value = false",HL:"TS"}},C:{default:{c:[{T:"VCard",P:{ID:{H:"EdtrComp_24",T:"prop"}},E:{},C:{default:{c:[{T:"VContainer",P:{ID:{H:"EdtrComp_26",T:"prop"}},E:{},C:{default:{c:[{T:"VRow",P:{ID:{H:"EdtrComp_56",T:"prop"},class:{H:"'d-flex flex-row'",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_71",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"QLabel",P:{ID:{H:"EdtrComp_75",T:"prop"},text:{H:"'Dynamic Fields'",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{},_Editor:{eID:"EdtrComp_75"},O:{cType:"slot",compDomClasses:"q-label  text-h4",layout:{dOpt:{xs:["tt:text-h4"]},class:"text-h4"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_71"},O:{cType:"slot",compDomClasses:"col d-flex col-12 flex-row ml-2",layout:{dOpt:{xs:["d:d-flex","c:col-12","fd:flex-row","sp:ml-2"]},class:"d-flex col-12 flex-row ml-2"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_56"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}},{T:"VRow",P:{ID:{H:"EdtrComp_28",T:"prop"},class:{H:"'d-flex flex-row'",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_30",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VExpansionPanels",P:{ID:{H:"expansionPanels",T:"prop"}},E:{},C:{default:{c:[{T:"VExpansionPanel",P:{ID:{H:"EdtrComp_37",T:"prop"}},E:{},C:{default:{c:[{T:"VExpansionPanelHeader",P:{ID:{H:"EdtrComp_40",T:"prop"},expandIcon:{H:"'mdi-plus'",T:"prop"},class:{H:"'warning'",T:"class"}},E:{},C:{default:{c:[{T:"QLabel",P:{ID:{H:"EdtrComp_53",T:"prop"},text:{H:"'Group'",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{},_Editor:{eID:"EdtrComp_53"},O:{cType:"slot",compDomClasses:"q-label  text-h5",layout:{dOpt:{xs:["tt:text-h5"]},class:"text-h5"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_40"},O:{cType:"slot",compDomClasses:"v-expansion-panel-header warning"}},{T:"VExpansionPanelContent",P:{ID:{H:"EdtrComp_42",T:"prop"},eager:{H:"true",T:"prop"}},E:{},C:{default:{c:[{T:"VRow",P:{ID:{H:"groupContainer",T:"prop"},class:{H:"'d-flex flex-row'",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_67",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VCard",P:{ID:{H:"EdtrComp_95",T:"prop"}},E:{},C:{default:{c:[{T:"VContainer",P:{ID:{H:"grpContainer",T:"prop"}},E:{},C:{default:{c:[{T:"VRow",P:{ID:{H:"EdtrComp_101",T:"prop"},class:{H:"'d-flex flex-row'",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_102",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VTextField",P:{ID:{H:"txtGroupName",T:"prop"},label:{H:"'Group Name'",T:"prop"},rules:{H:"camelCaseRegex = regex('[a-z]+((\\d)|([A-Z0-9][a-z0-9]+))*([A-Z])?')\r\n[Quick.validation.required(), Quick.validation.regex(camelCaseRegex, 'GroupName must be a camelCase format')]",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_115"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_102"},O:{cType:"slot",compDomClasses:"col col-6 d-flex flex-column",layout:{dOpt:{xs:["c:col-6","d:d-flex","fd:flex-column"]},class:"col-6 d-flex flex-column"}}},{T:"VCol",P:{ID:{H:"EdtrComp_91",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VCombobox",P:{ID:{H:"cbLayout",T:"prop"},attach:{H:"true",T:"prop"},label:{H:"'Layout'",T:"prop"},items:{H:"[{text = 'Columun 1', value = 1},\n{ text = 'Columun 2', value = 2},\n{ text = 'Columun 3', value = 3},\n{ text = 'Columun 4', value = 4}]",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_96"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_91"},O:{cType:"slot",compDomClasses:"col d-flex flex-column",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}},{T:"VCol",P:{ID:{H:"EdtrComp_129",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VCheckbox",P:{ID:{H:"chkAddCard",T:"prop"},label:{H:"'Add group card'",T:"prop"},color:{H:"'primary'",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_130"},O:{cType:"slot",compDomClasses:"v-input theme--light v-input--selection-controls v-input--checkbox"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_129"},O:{cType:"slot",compDomClasses:"col d-flex flex-column",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_101"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}},{T:"VRow",P:{ID:{H:"EdtrComp_63",T:"prop"},class:{H:"'d-flex flex-row'",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_64",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VTextField",P:{ID:{H:"txtLabelTR",T:"prop"},label:{H:"'Label (tr-TR)'",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_72"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_64"},O:{cType:"slot",compDomClasses:"col col-6 d-flex flex-column",layout:{dOpt:{xs:["c:col-6","d:d-flex","fd:flex-column"]},class:"col-6 d-flex flex-column"}}},{T:"VCol",P:{ID:{H:"EdtrComp_69",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VTextField",P:{ID:{H:"txtLabelEN",T:"prop"},label:{H:"'Label (en-US)'",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_73"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_69"},O:{cType:"slot",compDomClasses:"col col-6 d-flex flex-column",layout:{dOpt:{xs:["c:col-6","d:d-flex","fd:flex-column"]},class:"col-6 d-flex flex-column"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_63"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}},{T:"VRow",P:{ID:{H:"EdtrComp_126",T:"prop"},class:{H:"'d-flex flex-row justify-end'",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_127",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VBtn",P:{ID:{H:"EdtrComp_82",T:"prop"},color:{H:"'primary'",T:"prop"},outlined:{H:"false",T:"prop"}},E:{click:{H:'interface IDynFieldSimple {\r\n    name: "text" | "numeric" | "money" | "multiline" | "date"\r\n}\r\n\r\ntype DynLocalizationGuid = string;\r\ninterface IDynFieldOption {\r\n    label: DynLocalizationGuid | string;\r\n    value: string;\r\n}\r\ninterface IDynFieldOptions {\r\n    name: "combobox" | "multiselect";\r\n    options: Array<IDynFieldOption>\r\n}\r\n\r\ninterface IDynamicField {\r\n    fieldName: string;\r\n    label: DynLocalizationGuid | string;\r\n    format?: string\r\n    type: IDynFieldOptions | IDynFieldSimple;\r\n}\r\ninterface IDynamicGroup {\r\n    groupName: string;\r\n    label?: DynLocalizationGuid | string;\r\n    boxWithCard?: boolean;\r\n    layout?: number;\r\n    fields: Array<IDynamicField>;\r\n}\r\ninterface IDynamicUIFields {\r\n    groups: Array<IDynamicGroup>;\r\n    localization: Record<string, Record<string, string>>;\r\n}\r\n\r\ninterface IDynamicValGroups {\r\n    groupName: string;\r\n    fields: any\r\n}\r\n\r\ninterface IDynamicScreenModel {\r\n    uiFields: IDynamicUIFields;\r\n    serviceFields: Array<IDynamicValGroups>\r\n}\r\n\r\n\r\n\r\nCreateGroup();\r\n\r\nfunction CreateGroup() {\r\n    debugger;\r\n    const LRPrefix = "LR_";\r\n\r\n    const dynamicModel: IDynamicScreenModel = quick.store.get(\'dynamicModel\') ?? {\r\n        uiFields: { groups: [], localization: { "tr-TR": {}, "en-US": {} } },\r\n        serviceFields: []\r\n    };\r\n\r\n    const groupLRID = LRPrefix + (<any>components.txtGroupName).internalValue;\r\n    const groupName = (<any>components.txtGroupName).internalValue ?? "defaultGroup";\r\n\r\n    dynamicModel.uiFields.groups.push({\r\n        "groupName": groupName,\r\n        "label": groupLRID,\r\n        "layout": (<any>components.cbLayout).internalValue?.value,\r\n        "boxWithCard": (<any>components.chkAddCard).internalValue,\r\n        "fields": []\r\n    });\r\n\r\n    dynamicModel.serviceFields.push({\r\n        "groupName": groupName,\r\n        "fields": []\r\n    });\r\n\r\n    //LRID Business - Dil Dynamic Eklenecek mi? Önyüzde validation olacak mı? Hangi dili girerse onu modele setle?\r\n    if ((<any>components.txtLabelTR).internalValue)\r\n        dynamicModel.uiFields.localization["tr-TR"][groupLRID] = (<any>components.txtLabelTR).internalValue;\r\n    if ((<any>components.txtLabelEN).internalValue)\r\n        dynamicModel.uiFields.localization["en-US"][groupLRID] = (<any>components.txtLabelEN).internalValue;\r\n\r\n\r\n    quick.store.set(\'dynamicModel\', dynamicModel);\r\n\r\n    const groupComboItems = dynamicModel.uiFields.groups.map((grp) => { return { "text": grp.groupName, "value": grp.groupName } });\r\n    components.comboGroupName.items = groupComboItems;\r\n    components.cbTableGroupList.items = groupComboItems;\r\n}\r\n\r\n\r\nquick.Quick.reset(\'groupContainer\');',P:"mouseEvent:unknown | undefined",HL:"TS"}},C:{default:{c:[{T:"QLabel",C:{},E:{},P:{ID:{H:"EdtrComp_88",T:"prop"},text:{H:"'Save Group'",T:"prop"}},_Editor:{eID:"EdtrComp_88"},O:{cType:"child",compDomClasses:"q-label "}}],cType:"slot"}},_Editor:{eID:"EdtrComp_82"},O:{cType:"slot",compDomClasses:"v-btn v-btn--contained theme--light v-size--default primary"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_127"},O:{cType:"slot",compDomClasses:"col d-flex col-12 flex-row justify-end",layout:{dOpt:{xs:["d:d-flex","c:col-12","fd:flex-row","j:justify-end"]},class:"d-flex col-12 flex-row justify-end"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_126"},O:{cType:"slot",compDomClasses:"row d-flex flex-row justify-end"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_97"},O:{cType:"slot",compDomClasses:"container"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_95"},O:{cType:"slot",compDomClasses:"v-card v-sheet theme--light"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_67"},O:{cType:"slot",compDomClasses:"col d-flex flex-column",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_58"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_42"},O:{cType:"slot",compDomClasses:"v-expansion-panel-content"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_37"},O:{cType:"slot",compDomClasses:"v-expansion-panel"}},{T:"VExpansionPanel",P:{ID:{H:"EdtrComp_46",T:"prop"}},E:{},C:{default:{c:[{T:"VExpansionPanelHeader",P:{ID:{H:"EdtrComp_47",T:"prop"},expandIcon:{H:"'mdi-plus'",T:"prop"},class:{H:"'warning'",T:"class"}},E:{},C:{default:{c:[{T:"QLabel",P:{ID:{H:"EdtrComp_54",T:"prop"},text:{H:"'Field'",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{},_Editor:{eID:"EdtrComp_54"},O:{cType:"slot",compDomClasses:"q-label  text-h5",layout:{dOpt:{xs:["tt:text-h5"]},class:"text-h5"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_47"},O:{cType:"slot",compDomClasses:"v-expansion-panel-header warning"}},{T:"VExpansionPanelContent",P:{ID:{H:"EdtrComp_49",T:"prop"},eager:{H:"true",T:"prop"}},E:{},C:{default:{c:[{T:"VRow",P:{ID:{H:"fieldContainer",T:"prop"},class:{H:"'d-flex flex-row'",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_99",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VCard",P:{ID:{H:"EdtrComp_100",T:"prop"}},E:{},C:{default:{c:[{T:"VContainer",P:{ID:{H:"EdtrComp_103",T:"prop"}},E:{},C:{default:{c:[{T:"VRow",P:{ID:{H:"EdtrComp_117",T:"prop"},class:{H:"'d-flex flex-row'",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_118",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VCombobox",P:{ID:{H:"comboGroupName",T:"prop"},attach:{H:"true",T:"prop"},label:{H:"'Group Name'",T:"prop"},items:{H:"[]",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_154"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_118"},O:{cType:"slot",compDomClasses:"col col-6 d-flex flex-column",layout:{dOpt:{xs:["c:col-6","d:d-flex","fd:flex-column"]},class:"col-6 d-flex flex-column"}}},{T:"VCol",P:{ID:{H:"EdtrComp_120",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VTextField",P:{ID:{H:"txtFieldName",T:"prop"},label:{H:"'FieldName'",T:"prop"},rules:{H:"camelCaseRegex = regex('[a-z]+((\\d)|([A-Z0-9][a-z0-9]+))*([A-Z])?')\r\n[Quick.validation.required(), Quick.validation.regex(camelCaseRegex, 'FieldName must be a camelCase format')]",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_119"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_120"},O:{cType:"slot",compDomClasses:"col d-flex flex-column",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_117"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}},{T:"VRow",P:{ID:{H:"EdtrComp_124",T:"prop"},class:{H:"'d-flex flex-row'",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_125",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VCombobox",P:{ID:{H:"cbFieldType",T:"prop"},attach:{H:"true",T:"prop"},label:{H:"'Type'",T:"prop"},items:{H:"[{text = 'text', value = 'text'},\n{ text = 'numeric', value = 'numeric'},\n{ text = 'money', value = 'money'},\n{ text = 'multiline', value = 'multiline'},\n{ text = 'combo', value = 'combo'},\n{ text = 'multiselect', value = 'multiselect'},\n{ text = 'date', value = 'date'}]",T:"prop"}},E:{change:{H:'\r\nif((<any>value).value == "text"){\r\n    components.cbFieldFormat.visible = true;\r\n}else{\r\n    components.cbFieldFormat.visible = false;\r\n}',P:"value:object",HL:"TS"}},C:{},_Editor:{eID:"EdtrComp_151"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_125"},O:{cType:"slot",compDomClasses:"col col-6 d-flex flex-column",layout:{dOpt:{xs:["c:col-6","d:d-flex","fd:flex-column"]},class:"col-6 d-flex flex-column"}}},{T:"VCol",P:{ID:{H:"EdtrComp_142",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VCombobox",P:{ID:{H:"cbFieldFormat",T:"prop"},attach:{H:"true",T:"prop"},label:{H:"'Format'",T:"prop"},items:{H:"[{text = 'creditcard', value = 'creditcard'},\n{ text = 'email', value = 'email'},\n{ text = 'iban', value = 'iban'},\n{ text = 'ipaddress', value = 'ipaddress'},\n{ text = 'onlyAlphabetic', value = 'onlyAlphabetic'}]",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_152"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_142"},O:{cType:"slot",compDomClasses:"col col-6 d-flex flex-column",layout:{dOpt:{xs:["c:col-6","d:d-flex","fd:flex-column"]},class:"col-6 d-flex flex-column"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_124"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}},{T:"VRow",P:{ID:{H:"EdtrComp_144",T:"prop"},class:{H:"'d-flex flex-row'",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_145",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VTextField",P:{ID:{H:"txtFieldLabelTR",T:"prop"},label:{H:"'Label (tr-TR)'",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_146"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_145"},O:{cType:"slot",compDomClasses:"col col-6 d-flex flex-column",layout:{dOpt:{xs:["c:col-6","d:d-flex","fd:flex-column"]},class:"col-6 d-flex flex-column"}}},{T:"VCol",P:{ID:{H:"EdtrComp_147",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VTextField",P:{ID:{H:"txtFieldLabelEN",T:"prop"},label:{H:"'Label (en-US)'",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_134"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_147"},O:{cType:"slot",compDomClasses:"col col-6 d-flex flex-column",layout:{dOpt:{xs:["c:col-6","d:d-flex","fd:flex-column"]},class:"col-6 d-flex flex-column"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_144"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}},{T:"VRow",P:{ID:{H:"rowValidationRules",T:"prop"},class:{H:"'d-flex flex-row'",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_79",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VBtn",P:{ID:{H:"EdtrComp_87",T:"prop"},color:{H:"'primary'",T:"prop"},fab:{H:"true",T:"prop"}},E:{click:{H:'let fieldRuleIndex = quick.store.get(\'fieldRuleIndex\') ?? 0;\r\nfieldRuleIndex = fieldRuleIndex + 1\r\n\r\nquick.Quick.createComponent({\r\n    templateCompQID: "ruleInputComponent",\r\n    newCompQID: fieldRuleIndex,\r\n    placeQID: "validationRulesContainer",\r\n    place: <any>"Default"\r\n})\r\n\r\nquick.store.set(\'fieldRuleIndex\', fieldRuleIndex)',P:"mouseEvent:unknown | undefined",HL:"TS"}},C:{default:{c:[{T:"VIcon",P:{ID:{H:"EdtrComp_90",T:"prop"},text:{H:"'mdi-plus'",T:"text"}},E:{},C:{},_Editor:{eID:"EdtrComp_90"},O:{cType:"slot",compDomClasses:"v-icon notranslate mdi mdi-plus theme--light"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_87"},O:{cType:"slot",compDomClasses:"v-btn v-btn--contained v-btn--fab v-btn--round theme--light v-size--default primary"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_79"},O:{cType:"slot",compDomClasses:"col d-flex flex-column col-1",layout:{dOpt:{xs:["d:d-flex","fd:flex-column","c:col-1"]},class:"d-flex flex-column col-1"}}},{T:"VCol",P:{ID:{H:"validationRulesContainer",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"Ghost",P:{ID:{H:"EdtrComp_105",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_105"},O:{cType:"child",compDomClasses:""}}],cType:"slot"}},_Editor:{eID:"EdtrComp_132"},O:{cType:"slot",compDomClasses:"col d-flex flex-column col-5",layout:{dOpt:{xs:["d:d-flex","fd:flex-column","c:col-5"]},class:"d-flex flex-column col-5"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_131"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}},{T:"VRow",P:{ID:{H:"ruleInputComponent",T:"prop"},Render:{H:"false",T:"prop"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_108",T:"prop"}},E:{},C:{default:{c:[{T:"VCombobox",P:{ID:{H:"cbValidationRulesType",T:"prop"},attach:{H:"true",T:"prop"},label:{H:"'Validation Rule'",T:"prop"},items:{H:"[{text = 'required', value = 'required'},\n{ text = 'minLength', value = 'minLength'},\n{ text = 'maxLength', value = 'maxLength'},\n{ text = 'email', value = 'email'},\n{ text = 'iban', value = 'iban'},\n{ text = 'tckn', value = 'tckn'},\n{ text = 'vkn', value = 'vkn'},\n{ text = 'regex', value = 'regex'}]",T:"prop"}},E:{change:{H:'const selectedRule = (<any>value).value;\r\n\r\ndebugger;\r\n//TODO: Buarası artabilir ruleDict tutup kontrol et\r\n//TODO: DynamicCreate Comp hangi component trigger edildi bilinmiyor \r\nif (selectedRule == "minLength" && selectedRule == "maxLength") {\r\n    (<any>components)["txtValidationRuleValue_1"].visible = true;\r\n} else {\r\n    (<any>components)["txtValidationRuleValue_1"].visible = false;\r\n}',P:"value:object",HL:"TS"}},C:{},_Editor:{eID:"EdtrComp_86"},O:{cType:"slot",layout:{dOpt:{xs:["sp:mr-5"]},class:"mr-5"}}},{T:"VTextField",P:{ID:{H:"txtValidationRuleValue",T:"prop"},label:{H:"'Value'",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_85"},O:{cType:"slot"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_108"},O:{cType:"slot",layout:{dOpt:{xs:["d:d-flex","fd:flex-row"]},class:"d-flex flex-row"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_106"},O:{cType:"slot"}},{T:"VRow",P:{ID:{H:"EdtrComp_136",T:"prop"},class:{H:"'d-flex flex-row justify-end'",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_138",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VBtn",P:{ID:{H:"EdtrComp_139",T:"prop"},color:{H:"'primary'",T:"prop"},outlined:{H:"false",T:"prop"}},E:{click:{H:'interface IDynFieldSimple {\r\n    name: "text" | "numeric" | "money" | "multiline" | "date"\r\n}\r\n\r\ntype DynLocalizationGuid = string;\r\n\r\ninterface IDynFieldOption {\r\n    label: DynLocalizationGuid | string;\r\n    value: string;\r\n}\r\ninterface IDynFieldOptions {\r\n    name: "combobox" | "multiselect";\r\n    options: Array<IDynFieldOption>\r\n}\r\n\r\ninterface IDynamicField {\r\n    fieldName: string;\r\n    label: DynLocalizationGuid | string;\r\n    format?: string\r\n    type: IDynFieldOptions | IDynFieldSimple;\r\n}\r\ninterface IDynamicGroup {\r\n    groupName: string;\r\n    label?: DynLocalizationGuid | string;\r\n    boxWithCard?: boolean;\r\n    layout?: number;\r\n    fields: Array<IDynamicField>;\r\n}\r\ninterface IDynamicUIFields {\r\n    groups: Array<IDynamicGroup>;\r\n    localization: Record<string, Record<string, string>>;\r\n}\r\n\r\n// interface IDynamicRuleRegex {\r\n//     type: "regex";\r\n//     regex: string;\r\n// }\r\n// interface IDynamicRuleLength {\r\n//     type: "minlen" | "maxlen";\r\n//     length: number;\r\n// }\r\n// interface IDynamicRuleMaxLength extends IDynamicRuleLength {\r\n//     type: "maxlen";\r\n//     preventKeys?: boolean;\r\n// }\r\n// interface IDynamicRuleValue {\r\n//     type: "minval" | "maxval";\r\n//     value: number | Date;\r\n// }\r\n// interface IDynamicRuleOptions {\r\n//     type: "options";\r\n//     options: Array<string>;\r\n// }\r\n\r\ninterface IDynamicRuleSimple {\r\n    type: string;\r\n    value: number | Date | string | undefined;\r\n}\r\n\r\ntype DynamicFieldType = "text" | "numeric" | "money" | "multiline" | "date" | "combobox" | "multiselect";\r\n\r\ninterface IDynamicValFields {\r\n    fieldName: string;\r\n    rules: Array<IDynamicRuleSimple> | undefined,\r\n    type: DynamicFieldType\r\n}\r\ninterface IDynamicValGroups {\r\n    groupName: string;\r\n    fields: Array<IDynamicValFields>\r\n}\r\n\r\ninterface IDynamicScreenModel {\r\n    uiFields: IDynamicUIFields;\r\n    serviceFields: Array<IDynamicValGroups>\r\n}\r\n\r\n\r\nconst LRPrefix = "LR_"\r\nconst defaultGroupName = "defaultGroup";\r\nconst dynamicModel: IDynamicScreenModel = quick.store.get(\'dynamicModel\') ?? {\r\n    uiFields: { groups: [], localization: { "tr-TR": {}, "en-US": {} } },\r\n    serviceFields: []\r\n};\r\nconst selectedGroupName = (<any>components.comboGroupName).internalValue ? (<any>components.comboGroupName).internalValue.value : defaultGroupName;\r\nconst fieldName = (<any>components.txtFieldName).internalValue;\r\nconst fieldType = (<any>components.cbFieldType).internalValue?.value;\r\n\r\ncreateFields();\r\nresetFieldContainer();\r\n\r\nquick.store.set(\'dynamicModel\', dynamicModel);\r\nquick.EM.trace(quick.store.get(\'dynamicModel\'));\r\n\r\n\r\n\r\n\r\nfunction createFields() {\r\n    if (selectedGroupName == defaultGroupName) {\r\n        addDefaultGroup();\r\n    }\r\n\r\n    //Create UI Fields\r\n    const selectedUIGroup = dynamicModel.uiFields.groups.filter((grp) => grp.groupName == selectedGroupName)[0];\r\n    const fieldLRID = LRPrefix + selectedGroupName + \'_\' + fieldName;\r\n\r\n    selectedUIGroup.fields.push({\r\n        fieldName: fieldName,\r\n        label: fieldLRID,\r\n        type: fieldType,\r\n        format: (<any>components.cbFieldFormat).internalValue?.value\r\n    });\r\n\r\n    //LRID \r\n    //Şimdilik 2 dil desteği -  Daha sonra dynamic LRID girişi olacak.\r\n    if ((<any>components.txtFieldLabelTR).internalValue)\r\n        dynamicModel.uiFields.localization["tr-TR"][fieldLRID] = (<any>components.txtFieldLabelTR).internalValue;\r\n    if ((<any>components.txtFieldLabelEN).internalValue)\r\n        dynamicModel.uiFields.localization["en-US"][fieldLRID] = (<any>components.txtFieldLabelEN).internalValue;\r\n\r\n\r\n\r\n    //Create Service Fields\r\n    const serviceGroup = dynamicModel.serviceFields.filter((grp) => grp.groupName == selectedGroupName)[0]\r\n    serviceGroup.fields.push({\r\n        fieldName: fieldName,\r\n        type: fieldType,\r\n        rules: getFieldValidationRules()\r\n    });\r\n\r\n    components.dynamicFieldsDataTable.items = selectedUIGroup.fields;\r\n}\r\n\r\n\r\nfunction addDefaultGroup() {\r\n    if (dynamicModel.uiFields.groups.filter((grp) => grp.groupName == defaultGroupName).length > 0) {\r\n        return;\r\n    }\r\n\r\n    dynamicModel.uiFields.groups.push({ groupName: defaultGroupName, fields: [] });\r\n    dynamicModel.serviceFields.push({ groupName: defaultGroupName, fields: [] });\r\n    const groupListItems = dynamicModel.uiFields.groups.map((grp) => { return { "text": grp.groupName, "value": grp.groupName } });\r\n    components.cbTableGroupList.items = groupListItems;\r\n    components.comboGroupName.items = groupListItems;\r\n}\r\n\r\nfunction getFieldValidationRules() {\r\n    debugger;\r\n    const fieldRuleCount = quick.store.get(\'fieldRuleIndex\');\r\n    const rules: Array<IDynamicRuleSimple> | undefined = [];\r\n    for (var i = 1; i <= fieldRuleCount; i++) {\r\n        const ruleTypeComponent = (<any>components)["cbValidationRulesType_" + i];\r\n        const ruleValueComponent = (<any>components)["txtValidationRuleValue_" + i];\r\n        if (!ruleTypeComponent || !ruleTypeComponent.internalValue) {\r\n            return;\r\n        }\r\n\r\n        const ruleType = ruleTypeComponent.internalValue.value;\r\n        const ruleValue = ruleValueComponent ? ruleValueComponent.internalValue : undefined;\r\n\r\n        let rule: IDynamicRuleSimple = { type: ruleType, value: ruleValue }\r\n        rules.push(rule);\r\n    }\r\n    return rules;\r\n}\r\n\r\nfunction resetFieldContainer() {\r\n    quick.Quick.reset(\'fieldContainer\');\r\n    quick.store.set(\'fieldRuleIndex\', 0);\r\n}\r\n\r\n',P:"mouseEvent:unknown | undefined",HL:"TS"}},C:{default:{c:[{T:"QLabel",C:{},E:{},P:{ID:{H:"EdtrComp_140",T:"prop"},text:{H:"'Save Field'",T:"prop"}},_Editor:{eID:"EdtrComp_140"},O:{cType:"child",compDomClasses:"q-label "}}],cType:"slot"}},_Editor:{eID:"EdtrComp_139"},O:{cType:"slot",compDomClasses:"v-btn v-btn--contained theme--light v-size--default primary"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_138"},O:{cType:"slot",compDomClasses:"col d-flex flex-row col-12 justify-end",layout:{dOpt:{xs:["d:d-flex","fd:flex-row","c:col-12","j:justify-end"]},class:"d-flex flex-row col-12 justify-end"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_136"},O:{cType:"slot",compDomClasses:"row d-flex flex-row justify-end"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_103"},O:{cType:"slot",compDomClasses:"container"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_100"},O:{cType:"slot",compDomClasses:"v-card v-sheet theme--light"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_99"},O:{cType:"slot",compDomClasses:"col d-flex flex-column",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_98"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_49"},O:{cType:"slot",compDomClasses:"v-expansion-panel-content"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_46"},O:{cType:"slot",compDomClasses:"v-expansion-panel"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_35"},O:{cType:"slot",compDomClasses:"v-item-group theme--light v-expansion-panels"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_30"},O:{cType:"slot",compDomClasses:"col d-flex flex-column",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_28"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}},{T:"VRow",P:{ID:{H:"EdtrComp_133",T:"prop"},class:{H:"'d-flex flex-row'",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_135",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VCombobox",P:{ID:{H:"cbTableGroupList",T:"prop"},attach:{H:"true",T:"prop"},label:{H:"'Group Name'",T:"prop"}},E:{change:{H:'interface IDynFieldSimple {\r\n    name: "text" | "numeric" | "money" | "multiline" | "date"\r\n}\r\ntype DynLocalizationGuid = string;\r\n\r\ninterface IDynFieldOption {\r\n    label: DynLocalizationGuid | string;\r\n    value: string;\r\n}\r\ninterface IDynFieldOptions {\r\n    name: "combobox" | "multiselect";\r\n    options: Array<IDynFieldOption>\r\n}\r\n\r\ninterface IDynamicField {\r\n    fieldName: string;\r\n    label: DynLocalizationGuid | string;\r\n    format?: string\r\n    type: IDynFieldOptions | IDynFieldSimple;\r\n}\r\ninterface IDynamicGroup {\r\n    groupName: string;\r\n    label?: DynLocalizationGuid | string;\r\n    boxWithCard?: boolean;\r\n    layout?: number;\r\n    fields: Array<IDynamicField>;\r\n}\r\ninterface IDynamicUIFields {\r\n    groups: Array<IDynamicGroup>;\r\n    localization: Record<string, Record<string, string>>;\r\n}\r\n\r\ndebugger;\r\nconst uiFields: IDynamicUIFields = quick.store.get(\'dynamicModel\')?.uiFields;\r\nconst selectedGroupName = (<any>components.cbTableGroupList).internalValue?.value;\r\nconst selectedGroup = uiFields.groups.filter((grp) => grp.groupName == selectedGroupName);\r\n\r\nif (selectedGroup && selectedGroup[0].fields) {\r\n    components.dynamicFieldsDataTable.items = selectedGroup[0].fields;\r\n}',P:"value:object",HL:"TS"}},C:{},_Editor:{eID:"EdtrComp_23"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_135"},O:{cType:"slot",compDomClasses:"col col-3 d-flex flex-column",layout:{dOpt:{xs:["c:col-3","d:d-flex","fd:flex-column"]},class:"col-3 d-flex flex-column"}}},{T:"VCol",P:{ID:{H:"EdtrComp_121",T:"prop"}},E:{},C:{default:{c:[{T:"VBtn",P:{ID:{H:"btnEditGroup",T:"prop"},color:{H:"'primary'",T:"prop"},fab:{H:"true",T:"prop"}},E:{},C:{default:{c:[{T:"VIcon",P:{ID:{H:"EdtrComp_155",T:"prop"},text:{H:"'mdi-pencil'",T:"text"}},E:{},C:{},_Editor:{eID:"EdtrComp_155"},O:{cType:"slot",compDomClasses:"v-icon notranslate mdi mdi-pencil theme--light"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_137"},O:{cType:"slot",layout:{dOpt:{xs:["sp:mr-2"]},class:"mr-2"},compDomClasses:"v-btn v-btn--contained v-btn--fab v-btn--round theme--light v-size--default primary mr-2"}},{T:"VBtn",P:{ID:{H:"btnDeleteGroup",T:"prop"},color:{H:"'primary'",T:"prop"},fab:{H:"true",T:"prop"}},E:{click:{H:"\r\ninterface IDynamicGroup {\r\n    groupName: string;\r\n    label?: any;\r\n    boxWithCard?: boolean;\r\n    layout?: number;\r\n    fields: Array<any>;\r\n}\r\ninterface IDynamicUIFields {\r\n    groups: Array<IDynamicGroup>;\r\n    localization: Record<string, Record<string, string>>;\r\n}\r\n\r\ninterface IDynamicValGroups {\r\n    groupName?: string;\r\n    fields: Array<any>\r\n}\r\n\r\ninterface IDynamicScreenModel {\r\n    uiFields: IDynamicUIFields;\r\n    serviceFields: Array<IDynamicValGroups>\r\n}\r\n\r\n\r\nconst dynamicModel: IDynamicScreenModel = quick.store.get('dynamicModel');\r\nconst selectedGroupName = (<any>components.cbTableGroupList).internalValue?.value;\r\n\r\ndynamicModel?.uiFields.groups.forEach((grp, grpIndex) => {\r\n    if (grp.groupName == selectedGroupName) {\r\n        dynamicModel.uiFields.groups.splice(grpIndex,1);\r\n    }\r\n});\r\n\r\ndynamicModel?.serviceFields.forEach((grp, grpIndex) => {\r\n    if (grp.groupName == selectedGroupName) {\r\n        dynamicModel.serviceFields.splice(grpIndex,1);\r\n    }\r\n});\r\n\r\ndebugger;\r\ncomponents.cbTableGroupList.items = components.cbTableGroupList.items.filter((item:any)=>item.value !== selectedGroupName)\r\ncomponents.comboGroupName.items = components.cbTableGroupList.items.filter((item:any)=>item.value !== selectedGroupName)\r\nquick.Quick.reset('cbTableGroupList');\r\ncomponents.dynamicFieldsDataTable.items = [];\r\n\r\nquick.store.set('dynamicModel', dynamicModel);",P:"mouseEvent:unknown | undefined",HL:"TS"}},C:{default:{c:[{T:"VIcon",P:{ID:{H:"EdtrComp_156",T:"prop"},text:{H:"'mdi-delete'",T:"text"}},E:{},C:{},_Editor:{eID:"EdtrComp_156"},O:{cType:"slot",compDomClasses:"v-icon notranslate mdi mdi-delete theme--light"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_149"},O:{cType:"slot",compDomClasses:"v-btn v-btn--contained v-btn--fab v-btn--round theme--light v-size--default primary"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_121"},O:{cType:"slot",layout:{dOpt:{xs:["d:d-flex","fd:flex-row"]},class:"d-flex flex-row"},compDomClasses:"col d-flex flex-row"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_133"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}},{T:"VRow",P:{ID:{H:"EdtrComp_6",T:"prop"},class:{H:"'d-flex flex-row'",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_15",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VDataTable",P:{ID:{H:"dynamicFieldsDataTable",T:"prop"},headers:{H:"[{ text = 'Field Name', value= 'fieldName'},\n{ text = 'Label', value= 'label'},\n{ text = 'Type', value= 'type' },\n{ text = 'Format', value= 'format' },\n{ text = '', value= 'actions', align='center fixed', class='fixed' }]",T:"prop"},items:{H:"[]",T:"prop"}},E:{},C:{"item.actions":{c:[{T:"VIcon",P:{ID:{H:"fieldEditButton",T:"prop"},text:{H:"'mdi-pencil'",T:"text"},large:{H:"true",T:"prop"}},E:{click:{H:"declare const item: any;\r\n\r\ninterface IDynamicField {\r\n    fieldName: string;\r\n    label: any;\r\n    format?: string\r\n    type: any;\r\n}\r\ninterface IDynamicGroup {\r\n    groupName: string;\r\n    label?: any;\r\n    boxWithCard?: boolean;\r\n    layout?: number;\r\n    fields: Array<IDynamicField>;\r\n}\r\ninterface IDynamicUIFields {\r\n    groups: Array<IDynamicGroup>;\r\n    localization: Record<string, Record<string, string>>;\r\n}\r\n\r\ninterface IDynamicScreenModel {\r\n    uiFields: IDynamicUIFields;\r\n    serviceFields: Array<any>\r\n}\r\n\r\n\r\nconst dynamicModel: IDynamicScreenModel = quick.store.get('dynamicModel');\r\nconst selectedGroupName = (<any>components.cbTableGroupList).internalValue?.value;\r\n\r\ndynamicModel?.uiFields.groups.forEach((grp, grpIndex) => {\r\n    if (grp.groupName == selectedGroupName) {\r\n        grp.fields.forEach((field, fieldIndex) => {\r\n            debugger;\r\n            if (field.fieldName == item.fieldName) { \r\n                (<any>components.txtFieldName).internalValue = field.fieldName;\r\n                (<any>components.cbFieldType).internalValue = components.cbFieldType.items.filter((item:any) => item.value == field.type)[0];\r\n                (<any>components.cbFieldFormat).internalValue = components.cbFieldFormat.items.filter((item:any) => item.value == field.format)[0];\r\n                (<any>components.txtFieldLabelTR).internalValue = dynamicModel.uiFields.localization[\"tr-TR\"][field.label];\r\n                (<any>components.txtFieldLabelEN).internalValue = dynamicModel.uiFields.localization[\"en-US\"][field.label];\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nquick.store.set('dynamicModel', dynamicModel);\r\n(<any>components.expansionPanels).internalValue = 1\r\n\r\n",P:"mouseEvent:object",HL:"TS"}},C:{},_Editor:{eID:"EdtrComp_78"},O:{cType:"slot",compDomClasses:"v-icon notranslate v-icon--link mdi mdi-pencil theme--light"}},{T:"VIcon",P:{ID:{H:"fieldDeleteButton",T:"prop"},text:{H:"'mdi-delete'",T:"text"},large:{H:"true",T:"prop"}},E:{click:{H:"declare const item: any;\r\n\r\ninterface IDynamicField {\r\n    fieldName: string;\r\n    label: any;\r\n    format?: string\r\n    type: any;\r\n}\r\ninterface IDynamicGroup {\r\n    groupName: string;\r\n    label?: any;\r\n    boxWithCard?: boolean;\r\n    layout?: number;\r\n    fields: Array<IDynamicField>;\r\n}\r\ninterface IDynamicUIFields {\r\n    groups: Array<IDynamicGroup>;\r\n    localization: Record<string, Record<string, string>>;\r\n}\r\n\r\ninterface IDynamicScreenModel {\r\n    uiFields: IDynamicUIFields;\r\n    serviceFields: Array<any>\r\n}\r\n\r\n\r\nconst dynamicModel: IDynamicScreenModel = quick.store.get('dynamicModel');\r\nconst selectedGroupName = (<any>components.cbTableGroupList).internalValue?.value;\r\n\r\ndynamicModel?.uiFields.groups.forEach((grp, grpIndex) => {\r\n    if (grp.groupName == selectedGroupName) {\r\n        grp.fields.forEach((field, fieldIndex) => {\r\n            if (field.fieldName == item.fieldName) { \r\n                dynamicModel.uiFields.groups[grpIndex].fields.splice(fieldIndex,1);\r\n            }\r\n        });\r\n    }\r\n});\r\n\r\nquick.store.set('dynamicModel', dynamicModel);\r\nquick.Quick.reset('fieldContainer');\r\n\r\n",P:"mouseEvent:object",HL:"TS"}},C:{},_Editor:{eID:"EdtrComp_77"},O:{cType:"slot",compDomClasses:"v-icon notranslate v-icon--link mdi mdi-delete theme--light"}}],cType:"scopedSlot"}},_Editor:{eID:"EdtrComp_18"},O:{cType:"scopedSlot",compDomClasses:"v-data-table v-data-table--has-bottom theme--light"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_15"},O:{cType:"slot",compDomClasses:"col d-flex flex-column",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_6"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}},{T:"VRow",P:{ID:{H:"EdtrComp_55",T:"prop"},class:{H:"'d-flex flex-row'",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_62",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VBtn",P:{ID:{H:"EdtrComp_66",T:"prop"},color:{H:"'primary'",T:"prop"}},E:{click:{H:"interface SaveModelRequest {\r\n    mode: string,\r\n    raw: string,\r\n    modelKey: string\r\n}\r\n\r\n\r\nconst dynamicModel = quick.store.get('dynamicModel');\r\nconst modelKey = quick.store.get('modelKey') ?? \"customerInfoModelKey\";\r\nconst modelUrl = quick.store.get('modelUrl') ?? \"http://customer.tkb-int.dev.rally.softtech/api/dynamicscreen/\";\r\n\r\nconst requestParams: SaveModelRequest = {\r\n    mode : \"raw\",\r\n    raw: JSON.stringify(dynamicModel),\r\n    modelKey: modelKey\r\n}\r\n\r\nconst requestObj: any = {\r\n    url: modelUrl,\r\n    http: \"GET\",\r\n    responseField: 'firstResponse',\r\n    blockRender: true,\r\n    data: requestParams,\r\n    onSuccess: 'onSuccessSaveModel',\r\n    onFail: 'OnFailModelSave'\r\n}\r\n\r\nquick.Request.async(requestObj)",P:"mouseEvent:unknown | undefined",HL:"TS"},onSuccessSaveModel:{H:'quick.Quick.alert!({text: "Model kaydedilmiştir", category: <any>"Success"})',C:!0,HL:"TS"},OnFailModelSave:{H:'quick.Quick.alert!({text: "Model kaydedilememiştir.", category: <any>"Eror" })',C:!0,HL:"TS"}},C:{default:{c:[{T:"QLabel",C:{},E:{},P:{ID:{H:"EdtrComp_70",T:"prop"},text:{H:"'Save Model'",T:"prop"}},_Editor:{eID:"EdtrComp_70"},O:{cType:"child",compDomClasses:"q-label "}}],cType:"slot"}},_Editor:{eID:"EdtrComp_66"},O:{cType:"slot",compDomClasses:"v-btn v-btn--contained theme--light v-size--default primary"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_62"},O:{cType:"slot",compDomClasses:"col d-flex flex-row justify-end col-12",layout:{dOpt:{xs:["d:d-flex","fd:flex-row","j:justify-end","c:col-12"]},class:"d-flex flex-row justify-end col-12"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_55"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_26"},O:{cType:"slot",compDomClasses:"container"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_24"},O:{cType:"slot",compDomClasses:"v-card v-sheet theme--light"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_21"},O:{cType:"slot",compDomClasses:"v-dialog__container"}}],cJson:[{T:"Messaging",P:{ID:{H:"EdtrComp_8",T:"prop"},externalProps:{H:"╬[]╠'authorizationKey'╩╠'serviceName'╩╠'serviceFilterKey'╩╠'model'╩╠'data'╩╩╩",T:"prop"}},E:{GetDynamicData:{H:"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nquick.EM.trace(\"GetDynamicData event triggered\");\r\nvar dynamicComponentData = quick.getFormData(\"DynamicFields\");\r\nvar serviceData = {};\r\nObject.keys(dynamicComponentData).forEach(function (key) {\r\n    var _a;\r\n    debugger;\r\n    var dataGroup = key.split('_')[1];\r\n    var dataField = key.split('_')[2];\r\n    var dataValue = dynamicComponentData[key];\r\n    dataValue = typeof dataValue === 'object' ? dataValue.value : dataValue;\r\n    serviceData[dataGroup] = (_a = serviceData[dataGroup]) !== null && _a !== void 0 ? _a : {};\r\n    serviceData[dataGroup][dataField] = dataValue;\r\n});\r\nquick.EM.trace('DynamicFieldsData result:');\r\nquick.EM.trace(serviceData);\r\nserviceData;\r\n",C:!0,EV:!0,HL:"JS"},CreateFields:{H:'"use strict";\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nquick.EM.trace(\'DS LoadComponent running\');\r\nquick.EM.trace("model");\r\nquick.EM.trace(model);\r\nquick.EM.trace("data");\r\nquick.EM.trace(data);\r\nquick.store.set(\'modelKey\', modelKey);\r\nquick.store.set(\'modelUrl\', modelUrl);\r\nLoadFromDataModel();\r\nfunction LoadFromDataModel() {\r\n    if (model) {\r\n        model.uiFields.groups.forEach(function (group) {\r\n            var _a;\r\n            group.layout = (_a = group.layout) !== null && _a !== void 0 ? _a : 1;\r\n            var containerPlaceQID = CreateContainer(group);\r\n            var rowCount = Math.ceil(group.fields.length / group.layout);\r\n            var gridColCount = 12 / group.layout;\r\n            var rowIndex = 0;\r\n            group.fields.forEach(function (field, fieldIndex) {\r\n                if (fieldIndex % group.layout == 0) {\r\n                    //Create Row\r\n                    rowIndex++;\r\n                    quick.Quick.createComponent({\r\n                        templateCompQID: "VRow",\r\n                        newCompQID: group.groupName + \'_\' + rowIndex,\r\n                        placeQID: containerPlaceQID,\r\n                        place: containerPlaceQID ? "Default" : undefined\r\n                    });\r\n                }\r\n                var templateComp;\r\n                switch (field.type.name) {\r\n                    case "text":\r\n                    case "numeric":\r\n                    case "money": {\r\n                        templateComp = "VColTextField";\r\n                        break;\r\n                    }\r\n                    case "combobox":\r\n                    case "multiselect": {\r\n                        templateComp = "VColCombo";\r\n                        break;\r\n                    }\r\n                    case "date": {\r\n                        templateComp = "VColDatepicker";\r\n                        break;\r\n                    }\r\n                    case "multiline": {\r\n                        templateComp = "VColTextArea";\r\n                        break;\r\n                    }\r\n                }\r\n                if (templateComp) {\r\n                    var colComp = quick.Quick.createComponent({\r\n                        templateCompQID: templateComp,\r\n                        newCompQID: group.groupName + \'_\' + field.fieldName,\r\n                        placeQID: "VRow_" + group.groupName + \'_\' + rowIndex,\r\n                        place: "Default"\r\n                    });\r\n                    var fieldComp = colComp.$children[0];\r\n                    fieldComp.label = GetLR(field.label);\r\n                    fieldComp.customCompClass = \'col-\' + gridColCount;\r\n                    //Formats?? money, number, text (card,Iban,email), phone- QPhone comp??\r\n                    if (field.type.name == "text") {\r\n                        fieldComp.format = field.format;\r\n                    }\r\n                    if (field.type.name == "combobox" || field.type.name == "multiselect") {\r\n                        var comboItems_1 = [];\r\n                        field.type.options.forEach(function (item) {\r\n                            comboItems_1.push({ text: GetLR(item.label), value: item.value });\r\n                        });\r\n                        fieldComp.items = comboItems_1;\r\n                        fieldComp.multiple = field.type.name == "multiselect";\r\n                    }\r\n                    debugger;\r\n                    AddValidationRules(group, field, fieldComp);\r\n                    LoadData(group, field, fieldComp);\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\nfunction CreateContainer(group) {\r\n    var containerPlaceQID = undefined;\r\n    if (group.boxWithCard) {\r\n        //Create Container\r\n        quick.Quick.createComponent({\r\n            templateCompQID: "VContainerTemp",\r\n            newCompQID: group.groupName + "Box",\r\n            placeQID: "DynamicFields",\r\n            place: "Default"\r\n        });\r\n        containerPlaceQID = "VContainer_" + group.groupName + "Box";\r\n        if (group.groupName !== "defaultGroup") {\r\n            var titleComponent = quick.getComponent("QLabel_" + group.groupName + "Box");\r\n            titleComponent.text = group.label;\r\n        }\r\n    }\r\n    return containerPlaceQID !== null && containerPlaceQID !== void 0 ? containerPlaceQID : "DynamicFields";\r\n}\r\nfunction GetLR(key) {\r\n    var _a;\r\n    var lang = quick.Quick.getLanguage();\r\n    return (_a = model.uiFields.localization[lang][key]) !== null && _a !== void 0 ? _a : key;\r\n}\r\nfunction LoadData(group, field, fieldComp) {\r\n    if (data && data[group.groupName]) {\r\n        switch (field.type.name) {\r\n            case "text":\r\n            case "numeric":\r\n            case "money":\r\n            case "multiline":\r\n                fieldComp.internalValue = data[group.groupName][field.fieldName];\r\n                break;\r\n            case "date":\r\n                fieldComp.value = data[group.groupName][field.fieldName];\r\n                break;\r\n            case "combobox":\r\n                var fieldValue = fieldComp.items.filter(function (item) { return item.value == data[group.groupName][field.fieldName]; });\r\n                fieldComp.internalValue = fieldValue[0];\r\n                break;\r\n            case "multiselect":\r\n                break;\r\n        }\r\n    }\r\n}\r\nfunction AddValidationRules(group, field, fieldComp) {\r\n    var validationRules = [];\r\n    var currentGroup = model.serviceFields.filter(function (groupItem) { return groupItem.groupName == group.groupName; })[0];\r\n    var currentField = currentGroup === null || currentGroup === void 0 ? void 0 : currentGroup.fields.filter(function (fieldItem) { return fieldItem.fieldName == field.fieldName; })[0];\r\n    currentField === null || currentField === void 0 ? void 0 : currentField.rules.forEach(function (rule) {\r\n        switch (rule.type) {\r\n            case \'required\':\r\n                validationRules.push(quick.Quick.validation.required());\r\n                break;\r\n            case \'maxlen\':\r\n                validationRules.push(quick.Quick.validation.maxLength(rule.length));\r\n                break;\r\n            case \'minlen\':\r\n                validationRules.push(quick.Quick.validation.minLength(rule.length));\r\n                break;\r\n            case \'regex\':\r\n                validationRules.push(quick.Quick.validation.regex(new RegExp(rule.regex)));\r\n                break;\r\n        }\r\n    });\r\n    fieldComp.rules = validationRules;\r\n}\r\n//Validation Error response\r\nvar dynamicErrors = {\r\n    "selfDemographics.name": "required",\r\n    "selfJobInfo.occupation": "combobox",\r\n    "favouriteCurrency": "options",\r\n};\r\n//UI Validation constants\r\nvar errorConstants = {\r\n    required: "{0} alanına bilgi girişi zorunludur.",\r\n    combobox: "{0} alanına birden fazla veri girilemez.",\r\n    options: "{0} alanına geçerli bir değer girmediniz."\r\n};\r\n',C:!0,EV:!0,HL:"JS"},PreRender:{H:"╩",I:!0},EndRender:{H:"╬=╣.╣dynamicFieldEditBtn╩╠visible╩╩╠false╩╩╬=╣editAuthorization╩╠()╣.╣shell╩╠getResource╩╩╠.╣.╣parent╩╠props╩╩╠authorizationKey╩╩╩╩╬=╣editAuthorization╩╠true╩╩╬=╣.╣dynamicFieldEditBtn╩╠visible╩╩╠editAuthorization╩╩╩",HL:"QS"}},C:{},_Editor:{eID:"EdtrComp_8"},O:{cType:"child",compDomClasses:""}},{T:"VContainer",P:{ID:{H:"DynamicFields",T:"prop"}},E:{},C:{default:{c:[{T:"VRow",P:{ID:{H:"EdtrComp_1",T:"prop"},class:{H:"╬'d-flex flex-row'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_3",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VBtn",P:{ID:{H:"dynamicFieldEditBtn",T:"prop"},color:{H:"╬'warning'╩╩",T:"prop"},class:{H:"╬''╩╩",T:"class"},regular:{H:"╬false╩╩",T:"prop"},icon:{H:"╬false╩╩",T:"prop"},fab:{H:"╬false╩╩",T:"prop"},visible:{H:"╬true╩╩",T:"prop"}},E:{click:{H:'"use strict";\r\nvar _a;\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar uiFields = (_a = quick.store.get(\'dynamicModel\')) === null || _a === void 0 ? void 0 : _a.uiFields;\r\nif (uiFields && uiFields.groups && uiFields.groups[0].fields) {\r\n    components.dynamicFieldsDataTable.items = uiFields.groups[0].fields;\r\n    components.cbTableGroupList.items = { text: uiFields.groups[0].groupName, value: uiFields.groups[0].groupName };\r\n}\r\ncomponents.dynamicFieldsDialog.value = true;\r\n',P:"mouseEvent:unknown | undefined",HL:"JS"}},C:{default:{c:[{T:"QLabel",P:{ID:{H:"EdtrComp_9",T:"prop"},text:{H:"╬'Dynamic Fields'╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_9"},O:{cType:"slot",compDomClasses:"q-label "}},{T:"VIcon",P:{ID:{H:"EdtrComp_7",T:"prop"},text:{H:"╬'mdi-pencil'╩╩",T:"text"}},E:{},C:{},_Editor:{eID:"EdtrComp_7"},O:{cType:"slot",compDomClasses:"v-icon notranslate mdi mdi-pencil theme--light"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_5"},O:{cType:"slot",compDomClasses:"v-btn v-btn--contained theme--light v-size--default warning"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_3"},O:{cType:"slot",compDomClasses:"col col-2 d-flex",layout:{dOpt:{xs:["c:col-2","d:d-flex"]},class:"col-2 d-flex"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_1"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_20"},O:{cType:"slot",compDomClasses:"container"}},{T:"VContainer",P:{ID:{H:"VContainerTemp",T:"prop"}},E:{},C:{default:{c:[{T:"VCard",P:{ID:{H:"VCard",T:"prop"}},E:{},C:{default:{c:[{T:"VContainer",P:{ID:{H:"VContainer",T:"prop"},Render:{H:"╬false╩╩",T:"prop"}},E:{},C:{default:{c:[{T:"QLabel",P:{ID:{H:"QLabel",T:"prop"},class:{H:"╬'v-card__title'╩╩",T:"class"},Render:{H:"╬false╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_59"},O:{cType:"child",compDomClasses:"q-label v-card__title newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_43"},O:{cType:"slot",compDomClasses:"container newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_52"},O:{cType:"slot",compDomClasses:"v-card v-sheet theme--light"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_50"},O:{cType:"slot",compDomClasses:"container"}},{T:"VCol",P:{ID:{H:"VColTextField",T:"prop"},class:{H:"╬''╩╩",T:"class"},Render:{H:"╬false╩╩",T:"prop"}},E:{},C:{default:{c:[{T:"VTextField",P:{ID:{H:"VTextField",T:"prop"},label:{H:"╬'Text field label'╩╩",T:"prop"},regular:{H:"╬'true'╩╩",T:"prop"},Render:{H:"╬false╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_11"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted undefined newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_44"},O:{cType:"slot",compDomClasses:"d-flex flex-column newDropBorder",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}},{T:"VCol",P:{ID:{H:"VColTextArea",T:"prop"},class:{H:"╬''╩╩",T:"class"},Render:{H:"╬false╩╩",T:"prop"}},E:{},C:{default:{c:[{T:"VTextarea",P:{ID:{H:"VTextArea",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_16"},O:{cType:"slot",compDomClasses:"v-input v-textarea theme--light v-text-field v-text-field--is-booted undefined newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_14"},O:{cType:"slot",compDomClasses:"d-flex flex-column newDropBorder",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}},{T:"VCol",P:{ID:{H:"VColCombo",T:"prop"},class:{H:"╬''╩╩",T:"class"},Render:{H:"╬false╩╩",T:"prop"}},E:{},C:{default:{c:[{T:"VCombobox",P:{ID:{H:"VCombobox",T:"prop"},attach:{H:"╬true╩╩",T:"prop"},label:{H:"╬'My Combobox'╩╩",T:"prop"},items:{H:"╬[]╠{}╠=╣text╩╠'test1'╩╩╠=╣value╩╠1╩╩╩╠{}╠=╣text╩╠'test2'╩╩╠=╣value╩╠2╩╩╩╩╩",T:"prop"},Render:{H:"╬false╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_12"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_39"},O:{cType:"slot",compDomClasses:"d-flex flex-column newDropBorder",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}},{T:"VCol",P:{ID:{H:"VColDatepicker",T:"prop"},class:{H:"╬''╩╩",T:"class"},Render:{H:"╬false╩╩",T:"prop"}},E:{},C:{default:{c:[{T:"VInlineDatepicker",P:{ID:{H:"VDatepicker",T:"prop"},willAttach:{H:"╬false╩╩",T:"prop"},label:{H:"╬'Pick a date'╩╩",T:"prop"},locale:{H:"╬'tr'╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_19"},O:{cType:"slot",compDomClasses:"newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_17"},O:{cType:"slot",compDomClasses:"d-flex flex-column newDropBorder",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}},{T:"VRow",P:{ID:{H:"VRow",T:"prop"},class:{H:"╬'d-flex flex-row'╩╩",T:"class"},Render:{H:"╬false╩╩",T:"prop"}},E:{},C:{default:{c:[{T:"Ghost",P:{ID:{H:"EdtrComp_61",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_61"},O:{cType:"slot",compDomClasses:"editor-ghost-comp newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_60"},O:{cType:"slot",compDomClasses:"d-flex flex-row newDropBorder"}},{T:"VRow",P:{ID:{H:"EdtrComp_31",T:"prop"},class:{H:"╬'d-flex flex-row justify-space-around'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VBtn",P:{ID:{H:"EdtrComp_10",T:"prop"},color:{H:"╬'primary'╩╩",T:"prop"}},E:{click:{H:'"use strict";\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar serviceModel = {\r\n    uiFields: {\r\n        groups: [\r\n            {\r\n                groupName: "selfDemographics", label: "Kişisel Bilgiler", layout: 3, boxWithCard: true, fields: [\r\n                    { fieldName: "identityNo", type: { name: "text" }, label: "LR_selfDemographics_tckn" },\r\n                    { fieldName: "name", type: { name: "text" }, label: "LR_selfDemographics_name" },\r\n                    { fieldName: "surname", type: { name: "text" }, label: "LR_selfDemographics_surname" },\r\n                    { fieldName: "dateOfBirth", type: { name: "date" }, label: "LR_selfDemographics_dateOfBirth" },\r\n                    {\r\n                        fieldName: "country", type: {\r\n                            name: "combobox", options: [\r\n                                { label: "Almanya", value: "2" },\r\n                                { label: "Türkiye", value: "1" }\r\n                            ]\r\n                        }, label: "Ülke"\r\n                    },\r\n                    { fieldName: "phone", type: { name: "text" }, label: "Telefon" },\r\n                    { fieldName: "address", type: { name: "multiline" }, label: "Adres" }\r\n                ]\r\n            },\r\n            {\r\n                groupName: "selfJobInfo", label: "Çalışma Bilgileri", layout: 1, boxWithCard: true, fields: [\r\n                    { fieldName: "name", type: { name: "text" }, label: "LR_selfDemographics_occupation" },\r\n                    {\r\n                        fieldName: "occupation", label: "LR_selfDemographics_occupation", type: {\r\n                            name: "combobox", options: [\r\n                                { label: "B6F651E2-A822-4381-868E-4CE55D200605", value: "1" },\r\n                                { label: "B6F651E2-A822-4381-868E-4CE55D200606", value: "2" }\r\n                            ]\r\n                        }\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                groupName: "defaultGroup", label: "Çalışma Bilgileri", layout: 2, boxWithCard: true, fields: [\r\n                    { fieldName: "name", type: { name: "text" }, label: "LR_selfDemographics_occupation" },\r\n                    {\r\n                        fieldName: "occupation", label: "LR_selfDemographics_occupation", type: {\r\n                            name: "combobox", options: [\r\n                                { label: "B6F651E2-A822-4381-868E-4CE55D200605", value: "1" },\r\n                                { label: "B6F651E2-A822-4381-868E-4CE55D200606", value: "2" }\r\n                            ]\r\n                        }\r\n                    },\r\n                ]\r\n            },\r\n            {\r\n                groupName: "defaultGroup", layout: 2, fields: [\r\n                    { fieldName: "address", type: { name: "text" }, label: "Adres" },\r\n                    { fieldName: "phone", type: { name: "text" }, label: "Telefon" },\r\n                    {\r\n                        fieldName: "favouriteCurrency", label: "B6F651E2-A822-4381-868E-4CE55D200607", type: {\r\n                            name: "combobox", options: [\r\n                                { label: "TRY", value: "try" }, { label: "EUR", value: "eur" }, { label: "USD", value: "usd" },\r\n                            ]\r\n                        },\r\n                    },\r\n                    { fieldName: "address", type: { name: "text" }, label: "Adres" },\r\n                    { fieldName: "phone", type: { name: "text" }, label: "Telefon" }\r\n                ]\r\n            }\r\n        ],\r\n        localization: {\r\n            "tr-TR": {\r\n                "LR_selfDemographics_tckn": "TCKN",\r\n                "LR_selfDemographics_name": "Ad",\r\n                "LR_selfDemographics_surname": "Soyad",\r\n                "LR_selfDemographics_occupation": "Meslek",\r\n                "LR_selfDemographics_dateOfBirth": "Doğum Tarihi",\r\n                "B6F651E2-A822-4381-868E-4CE55D200605": "Çalışıyor",\r\n                "B6F651E2-A822-4381-868E-4CE55D200606": "Çalışmıyor"\r\n            },\r\n            "en-US": {\r\n                "LR_selfDemographics_tckn": "Identity No",\r\n                "LR_selfDemographics_name": "Name",\r\n                "LR_selfDemographics_surname": "Surname",\r\n                "LR_selfDemographics_occupation": "Occupation",\r\n                "LR_selfDemographics_dateOfBirth": "Date Of Birth"\r\n            }\r\n        }\r\n    },\r\n    serviceFields: [\r\n        {\r\n            groupName: "selfDemographics",\r\n            fields: [\r\n                {\r\n                    fieldName: "name", type: "text", rules: [\r\n                        { type: "required" },\r\n                        { type: "maxlen", length: 30, preventKeys: true },\r\n                        { type: "minlen", length: 2 }\r\n                    ]\r\n                },\r\n                { fieldName: "surname", type: "text", rules: [{ type: "required" }] }\r\n            ]\r\n        },\r\n        {\r\n            groupName: "selfJobInfo",\r\n            fields: [\r\n                { fieldName: "name", type: "text", rules: [{ type: "required" }] },\r\n                { fieldName: "occupation", type: "combobox", rules: [{ type: "options", options: ["1", "2"] }] }\r\n            ]\r\n        },\r\n        {\r\n            groupName: "defaultGroup",\r\n            fields: [\r\n                {\r\n                    fieldName: "favouriteCurrency", type: "multiselect",\r\n                    rules: [{ type: "required" }, { type: "options", options: ["try", "eur", "usd"] }]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n};\r\nvar serviceData = { "selfDemographics": { "name": "Nilay", "surname": "Akdoğan", "country": "1", "dateOfBirth": "19890104", "address": "Reisdere Mah. Çeşme / İzmir" },\r\n    "selfJobInfo": { "name": "Software Developer", "occupation": "1" }, "defaultGroup": { "favouriteCurrency": ["eur", "try"] } };\r\nvar serviceModelKey = "customerInfoModelKey";\r\nvar serviceModelUrl = "http://customer.tkb-int.dev.rally.softtech/api/SaveDynamicScreenModel/";\r\nquick.MM.trigger(\'CreateFields\', [{ model: serviceModel, data: serviceData, modelKey: serviceModelKey, modelUrl: serviceModelUrl }]);\r\n',P:"mouseEvent:unknown | undefined",HL:"JS"}},C:{default:{c:[{T:"QLabel",C:{},E:{},P:{ID:{H:"EdtrComp_13",T:"prop"},text:{H:"╬'Create Fields'╩╩",T:"prop"}},_Editor:{eID:"EdtrComp_13"},O:{cType:"child",compDomClasses:"q-label "}}],cType:"slot"}},_Editor:{eID:"EdtrComp_10"},O:{cType:"slot",compDomClasses:"v-btn v-btn--contained theme--light v-size--default primary"}},{T:"VBtn",P:{ID:{H:"EdtrComp_33",T:"prop"},color:{H:"╬'primary'╩╩",T:"prop"}},E:{click:{H:"\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dynamicComponentData = quick.getFormData(\"DynamicFields\");\r\nvar serviceData = {};\r\nObject.keys(dynamicComponentData).forEach(function (key) {\r\n    var _a;\r\n    debugger;\r\n    var dataGroup = key.split('_')[1];\r\n    var dataField = key.split('_')[2];\r\n    var dataValue = dynamicComponentData[key];\r\n    dataValue = typeof dataValue === 'object' ? dataValue.value : dataValue;\r\n    serviceData[dataGroup] = (_a = serviceData[dataGroup]) !== null && _a !== void 0 ? _a : {};\r\n    serviceData[dataGroup][dataField] = dataValue;\r\n});\r\nquick.EM.trace('Dynamic Fields Get Data');\r\nquick.EM.trace(serviceData);\r\nserviceData;\r\n",P:"mouseEvent:unknown | undefined",HL:"JS"}},C:{default:{c:[{T:"QLabel",C:{},E:{},P:{ID:{H:"EdtrComp_34",T:"prop"},text:{H:"╬'Get Data'╩╩",T:"prop"}},_Editor:{eID:"EdtrComp_34"},O:{cType:"child",compDomClasses:"q-label "}}],cType:"slot"}},_Editor:{eID:"EdtrComp_33"},O:{cType:"slot",compDomClasses:"v-btn v-btn--contained theme--light v-size--default primary"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_31"},O:{cType:"slot",compDomClasses:"d-flex flex-row justify-space-around"}},{T:"VDialog",P:{ID:{H:"dynamicFieldsDialog",T:"prop"},width:{H:"╬1500╩╩",T:"prop"},eager:{H:"╬true╩╩",T:"prop"}},E:{"click:outside":{H:'"use strict";\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\ncomponents.dynamicFieldsDialog.value = false;\r\n',HL:"JS"}},C:{default:{c:[{T:"VCard",P:{ID:{H:"EdtrComp_24",T:"prop"}},E:{},C:{default:{c:[{T:"VContainer",P:{ID:{H:"EdtrComp_26",T:"prop"}},E:{},C:{default:{c:[{T:"VRow",P:{ID:{H:"EdtrComp_56",T:"prop"},class:{H:"╬'d-flex flex-row'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_71",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"QLabel",P:{ID:{H:"EdtrComp_75",T:"prop"},text:{H:"╬'Dynamic Fields'╩╩",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{},_Editor:{eID:"EdtrComp_75"},O:{cType:"slot",compDomClasses:"q-label  text-h4",layout:{dOpt:{xs:["tt:text-h4"]},class:"text-h4"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_71"},O:{cType:"slot",compDomClasses:"col d-flex col-12 flex-row ml-2",layout:{dOpt:{xs:["d:d-flex","c:col-12","fd:flex-row","sp:ml-2"]},class:"d-flex col-12 flex-row ml-2"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_56"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}},{T:"VRow",P:{ID:{H:"EdtrComp_28",T:"prop"},class:{H:"╬'d-flex flex-row'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_30",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VExpansionPanels",P:{ID:{H:"expansionPanels",T:"prop"}},E:{},C:{default:{c:[{T:"VExpansionPanel",P:{ID:{H:"EdtrComp_37",T:"prop"}},E:{},C:{default:{c:[{T:"VExpansionPanelHeader",P:{ID:{H:"EdtrComp_40",T:"prop"},expandIcon:{H:"╬'mdi-plus'╩╩",T:"prop"},class:{H:"╬'warning'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"QLabel",P:{ID:{H:"EdtrComp_53",T:"prop"},text:{H:"╬'Group'╩╩",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{},_Editor:{eID:"EdtrComp_53"},O:{cType:"slot",compDomClasses:"q-label  text-h5",layout:{dOpt:{xs:["tt:text-h5"]},class:"text-h5"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_40"},O:{cType:"slot",compDomClasses:"v-expansion-panel-header warning"}},{T:"VExpansionPanelContent",P:{ID:{H:"EdtrComp_42",T:"prop"},eager:{H:"╬true╩╩",T:"prop"}},E:{},C:{default:{c:[{T:"VRow",P:{ID:{H:"groupContainer",T:"prop"},class:{H:"╬'d-flex flex-row'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_67",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCard",P:{ID:{H:"EdtrComp_95",T:"prop"}},E:{},C:{default:{c:[{T:"VContainer",P:{ID:{H:"grpContainer",T:"prop"}},E:{},C:{default:{c:[{T:"VRow",P:{ID:{H:"EdtrComp_101",T:"prop"},class:{H:"╬'d-flex flex-row'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_102",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VTextField",P:{ID:{H:"txtGroupName",T:"prop"},label:{H:"╬'Group Name'╩╩",T:"prop"},rules:{H:"╬=╣camelCaseRegex╩╠()╣regex╩╠'[a-z]+((d)|([A-Z0-9][a-z0-9]+))*([A-Z])?'╩╩╩╬[]╠()╣.╣.╣Quick╩╠validation╩╩╠required╩╩╩╠()╣.╣.╣Quick╩╠validation╩╩╠regex╩╩╠camelCaseRegex╩╠'GroupName must be a camelCase format'╩╩╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_115"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_102"},O:{cType:"slot",compDomClasses:"col col-6 d-flex flex-column",layout:{dOpt:{xs:["c:col-6","d:d-flex","fd:flex-column"]},class:"col-6 d-flex flex-column"}}},{T:"VCol",P:{ID:{H:"EdtrComp_91",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCombobox",P:{ID:{H:"cbLayout",T:"prop"},attach:{H:"╬true╩╩",T:"prop"},label:{H:"╬'Layout'╩╩",T:"prop"},items:{H:"╬[]╠{}╠=╣text╩╠'Columun 1'╩╩╠=╣value╩╠1╩╩╩╠{}╠=╣text╩╠'Columun 2'╩╩╠=╣value╩╠2╩╩╩╠{}╠=╣text╩╠'Columun 3'╩╩╠=╣value╩╠3╩╩╩╠{}╠=╣text╩╠'Columun 4'╩╩╠=╣value╩╠4╩╩╩╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_96"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_91"},O:{cType:"slot",compDomClasses:"col d-flex flex-column",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}},{T:"VCol",P:{ID:{H:"EdtrComp_129",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCheckbox",P:{ID:{H:"chkAddCard",T:"prop"},label:{H:"╬'Add group card'╩╩",T:"prop"},color:{H:"╬'primary'╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_130"},O:{cType:"slot",compDomClasses:"v-input theme--light v-input--selection-controls v-input--checkbox"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_129"},O:{cType:"slot",compDomClasses:"col d-flex flex-column",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_101"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}},{T:"VRow",P:{ID:{H:"EdtrComp_63",T:"prop"},class:{H:"╬'d-flex flex-row'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_64",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VTextField",P:{ID:{H:"txtLabelTR",T:"prop"},label:{H:"╬'Label (tr-TR)'╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_72"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_64"},O:{cType:"slot",compDomClasses:"col col-6 d-flex flex-column",layout:{dOpt:{xs:["c:col-6","d:d-flex","fd:flex-column"]},class:"col-6 d-flex flex-column"}}},{T:"VCol",P:{ID:{H:"EdtrComp_69",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VTextField",P:{ID:{H:"txtLabelEN",T:"prop"},label:{H:"╬'Label (en-US)'╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_73"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_69"},O:{cType:"slot",compDomClasses:"col col-6 d-flex flex-column",layout:{dOpt:{xs:["c:col-6","d:d-flex","fd:flex-column"]},class:"col-6 d-flex flex-column"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_63"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}},{T:"VRow",P:{ID:{H:"EdtrComp_126",T:"prop"},class:{H:"╬'d-flex flex-row justify-end'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_127",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VBtn",P:{ID:{H:"EdtrComp_82",T:"prop"},color:{H:"╬'primary'╩╩",T:"prop"},outlined:{H:"╬false╩╩",T:"prop"}},E:{click:{H:'"use strict";\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nCreateGroup();\r\nfunction CreateGroup() {\r\n    var _a, _b, _c;\r\n    debugger;\r\n    var LRPrefix = "LR_";\r\n    var dynamicModel = (_a = quick.store.get(\'dynamicModel\')) !== null && _a !== void 0 ? _a : {\r\n        uiFields: { groups: [], localization: { "tr-TR": {}, "en-US": {} } },\r\n        serviceFields: []\r\n    };\r\n    var groupLRID = LRPrefix + components.txtGroupName.internalValue;\r\n    var groupName = (_b = components.txtGroupName.internalValue) !== null && _b !== void 0 ? _b : "defaultGroup";\r\n    dynamicModel.uiFields.groups.push({\r\n        "groupName": groupName,\r\n        "label": groupLRID,\r\n        "layout": (_c = components.cbLayout.internalValue) === null || _c === void 0 ? void 0 : _c.value,\r\n        "boxWithCard": components.chkAddCard.internalValue,\r\n        "fields": []\r\n    });\r\n    dynamicModel.serviceFields.push({\r\n        "groupName": groupName,\r\n        "fields": []\r\n    });\r\n    //LRID Business - Dil Dynamic Eklenecek mi? Önyüzde validation olacak mı? Hangi dili girerse onu modele setle?\r\n    if (components.txtLabelTR.internalValue)\r\n        dynamicModel.uiFields.localization["tr-TR"][groupLRID] = components.txtLabelTR.internalValue;\r\n    if (components.txtLabelEN.internalValue)\r\n        dynamicModel.uiFields.localization["en-US"][groupLRID] = components.txtLabelEN.internalValue;\r\n    quick.store.set(\'dynamicModel\', dynamicModel);\r\n    var groupComboItems = dynamicModel.uiFields.groups.map(function (grp) { return { "text": grp.groupName, "value": grp.groupName }; });\r\n    components.comboGroupName.items = groupComboItems;\r\n    components.cbTableGroupList.items = groupComboItems;\r\n}\r\nquick.Quick.reset(\'groupContainer\');\r\n',P:"mouseEvent:unknown | undefined",HL:"JS"}},C:{default:{c:[{T:"QLabel",C:{},E:{},P:{ID:{H:"EdtrComp_88",T:"prop"},text:{H:"╬'Save Group'╩╩",T:"prop"}},_Editor:{eID:"EdtrComp_88"},O:{cType:"child",compDomClasses:"q-label "}}],cType:"slot"}},_Editor:{eID:"EdtrComp_82"},O:{cType:"slot",compDomClasses:"v-btn v-btn--contained theme--light v-size--default primary"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_127"},O:{cType:"slot",compDomClasses:"col d-flex col-12 flex-row justify-end",layout:{dOpt:{xs:["d:d-flex","c:col-12","fd:flex-row","j:justify-end"]},class:"d-flex col-12 flex-row justify-end"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_126"},O:{cType:"slot",compDomClasses:"row d-flex flex-row justify-end"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_97"},O:{cType:"slot",compDomClasses:"container"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_95"},O:{cType:"slot",compDomClasses:"v-card v-sheet theme--light"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_67"},O:{cType:"slot",compDomClasses:"col d-flex flex-column",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_58"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_42"},O:{cType:"slot",compDomClasses:"v-expansion-panel-content"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_37"},O:{cType:"slot",compDomClasses:"v-expansion-panel"}},{T:"VExpansionPanel",P:{ID:{H:"EdtrComp_46",T:"prop"}},E:{},C:{default:{c:[{T:"VExpansionPanelHeader",P:{ID:{H:"EdtrComp_47",T:"prop"},expandIcon:{H:"╬'mdi-plus'╩╩",T:"prop"},class:{H:"╬'warning'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"QLabel",P:{ID:{H:"EdtrComp_54",T:"prop"},text:{H:"╬'Field'╩╩",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{},_Editor:{eID:"EdtrComp_54"},O:{cType:"slot",compDomClasses:"q-label  text-h5",layout:{dOpt:{xs:["tt:text-h5"]},class:"text-h5"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_47"},O:{cType:"slot",compDomClasses:"v-expansion-panel-header warning"}},{T:"VExpansionPanelContent",P:{ID:{H:"EdtrComp_49",T:"prop"},eager:{H:"╬true╩╩",T:"prop"}},E:{},C:{default:{c:[{T:"VRow",P:{ID:{H:"fieldContainer",T:"prop"},class:{H:"╬'d-flex flex-row'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_99",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCard",P:{ID:{H:"EdtrComp_100",T:"prop"}},E:{},C:{default:{c:[{T:"VContainer",P:{ID:{H:"EdtrComp_103",T:"prop"}},E:{},C:{default:{c:[{T:"VRow",P:{ID:{H:"EdtrComp_117",T:"prop"},class:{H:"╬'d-flex flex-row'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_118",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCombobox",P:{ID:{H:"comboGroupName",T:"prop"},attach:{H:"╬true╩╩",T:"prop"},label:{H:"╬'Group Name'╩╩",T:"prop"},items:{H:"╬[]╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_154"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_118"},O:{cType:"slot",compDomClasses:"col col-6 d-flex flex-column",layout:{dOpt:{xs:["c:col-6","d:d-flex","fd:flex-column"]},class:"col-6 d-flex flex-column"}}},{T:"VCol",P:{ID:{H:"EdtrComp_120",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VTextField",P:{ID:{H:"txtFieldName",T:"prop"},label:{H:"╬'FieldName'╩╩",T:"prop"},rules:{H:"╬=╣camelCaseRegex╩╠()╣regex╩╠'[a-z]+((d)|([A-Z0-9][a-z0-9]+))*([A-Z])?'╩╩╩╬[]╠()╣.╣.╣Quick╩╠validation╩╩╠required╩╩╩╠()╣.╣.╣Quick╩╠validation╩╩╠regex╩╩╠camelCaseRegex╩╠'FieldName must be a camelCase format'╩╩╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_119"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_120"},O:{cType:"slot",compDomClasses:"col d-flex flex-column",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_117"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}},{T:"VRow",P:{ID:{H:"EdtrComp_124",T:"prop"},class:{H:"╬'d-flex flex-row'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_125",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCombobox",P:{ID:{H:"cbFieldType",T:"prop"},attach:{H:"╬true╩╩",T:"prop"},label:{H:"╬'Type'╩╩",T:"prop"},items:{H:"╬[]╠{}╠=╣text╩╠'text'╩╩╠=╣value╩╠'text'╩╩╩╠{}╠=╣text╩╠'numeric'╩╩╠=╣value╩╠'numeric'╩╩╩╠{}╠=╣text╩╠'money'╩╩╠=╣value╩╠'money'╩╩╩╠{}╠=╣text╩╠'multiline'╩╩╠=╣value╩╠'multiline'╩╩╩╠{}╠=╣text╩╠'combo'╩╩╠=╣value╩╠'combo'╩╩╩╠{}╠=╣text╩╠'multiselect'╩╩╠=╣value╩╠'multiselect'╩╩╩╠{}╠=╣text╩╠'date'╩╩╠=╣value╩╠'date'╩╩╩╩╩",T:"prop"}},E:{change:{H:'"use strict";\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nif (value.value == "text") {\r\n    components.cbFieldFormat.visible = true;\r\n}\r\nelse {\r\n    components.cbFieldFormat.visible = false;\r\n}\r\n',P:"value:object",HL:"JS"}},C:{},_Editor:{eID:"EdtrComp_151"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_125"},O:{cType:"slot",compDomClasses:"col col-6 d-flex flex-column",layout:{dOpt:{xs:["c:col-6","d:d-flex","fd:flex-column"]},class:"col-6 d-flex flex-column"}}},{T:"VCol",P:{ID:{H:"EdtrComp_142",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCombobox",P:{ID:{H:"cbFieldFormat",T:"prop"},attach:{H:"╬true╩╩",T:"prop"},label:{H:"╬'Format'╩╩",T:"prop"},items:{H:"╬[]╠{}╠=╣text╩╠'creditcard'╩╩╠=╣value╩╠'creditcard'╩╩╩╠{}╠=╣text╩╠'email'╩╩╠=╣value╩╠'email'╩╩╩╠{}╠=╣text╩╠'iban'╩╩╠=╣value╩╠'iban'╩╩╩╠{}╠=╣text╩╠'ipaddress'╩╩╠=╣value╩╠'ipaddress'╩╩╩╠{}╠=╣text╩╠'onlyAlphabetic'╩╩╠=╣value╩╠'onlyAlphabetic'╩╩╩╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_152"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_142"},O:{cType:"slot",compDomClasses:"col col-6 d-flex flex-column",layout:{dOpt:{xs:["c:col-6","d:d-flex","fd:flex-column"]},class:"col-6 d-flex flex-column"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_124"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}},{T:"VRow",P:{ID:{H:"EdtrComp_144",T:"prop"},class:{H:"╬'d-flex flex-row'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_145",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VTextField",P:{ID:{H:"txtFieldLabelTR",T:"prop"},label:{H:"╬'Label (tr-TR)'╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_146"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_145"},O:{cType:"slot",compDomClasses:"col col-6 d-flex flex-column",layout:{dOpt:{xs:["c:col-6","d:d-flex","fd:flex-column"]},class:"col-6 d-flex flex-column"}}},{T:"VCol",P:{ID:{H:"EdtrComp_147",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VTextField",P:{ID:{H:"txtFieldLabelEN",T:"prop"},label:{H:"╬'Label (en-US)'╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_134"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_147"},O:{cType:"slot",compDomClasses:"col col-6 d-flex flex-column",layout:{dOpt:{xs:["c:col-6","d:d-flex","fd:flex-column"]},class:"col-6 d-flex flex-column"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_144"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}},{T:"VRow",P:{ID:{H:"rowValidationRules",T:"prop"},class:{H:"╬'d-flex flex-row'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_79",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VBtn",P:{ID:{H:"EdtrComp_87",T:"prop"},color:{H:"╬'primary'╩╩",T:"prop"},fab:{H:"╬true╩╩",T:"prop"}},E:{click:{H:'"use strict";\r\nvar _a;\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar fieldRuleIndex = (_a = quick.store.get(\'fieldRuleIndex\')) !== null && _a !== void 0 ? _a : 0;\r\nfieldRuleIndex = fieldRuleIndex + 1;\r\nquick.Quick.createComponent({\r\n    templateCompQID: "ruleInputComponent",\r\n    newCompQID: fieldRuleIndex,\r\n    placeQID: "validationRulesContainer",\r\n    place: "Default"\r\n});\r\nquick.store.set(\'fieldRuleIndex\', fieldRuleIndex);\r\n',P:"mouseEvent:unknown | undefined",HL:"JS"}},C:{default:{c:[{T:"VIcon",P:{ID:{H:"EdtrComp_90",T:"prop"},text:{H:"╬'mdi-plus'╩╩",T:"text"}},E:{},C:{},_Editor:{eID:"EdtrComp_90"},O:{cType:"slot",compDomClasses:"v-icon notranslate mdi mdi-plus theme--light"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_87"},O:{cType:"slot",compDomClasses:"v-btn v-btn--contained v-btn--fab v-btn--round theme--light v-size--default primary"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_79"},O:{cType:"slot",compDomClasses:"col d-flex flex-column col-1",layout:{dOpt:{xs:["d:d-flex","fd:flex-column","c:col-1"]},class:"d-flex flex-column col-1"}}},{T:"VCol",P:{ID:{H:"validationRulesContainer",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"Ghost",P:{ID:{H:"EdtrComp_105",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_105"},O:{cType:"child",compDomClasses:""}}],cType:"slot"}},_Editor:{eID:"EdtrComp_132"},O:{cType:"slot",compDomClasses:"col d-flex flex-column col-5",layout:{dOpt:{xs:["d:d-flex","fd:flex-column","c:col-5"]},class:"d-flex flex-column col-5"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_131"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}},{T:"VRow",P:{ID:{H:"ruleInputComponent",T:"prop"},Render:{H:"╬false╩╩",T:"prop"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_108",T:"prop"}},E:{},C:{default:{c:[{T:"VCombobox",P:{ID:{H:"cbValidationRulesType",T:"prop"},attach:{H:"╬true╩╩",T:"prop"},label:{H:"╬'Validation Rule'╩╩",T:"prop"},items:{H:"╬[]╠{}╠=╣text╩╠'required'╩╩╠=╣value╩╠'required'╩╩╩╠{}╠=╣text╩╠'minLength'╩╩╠=╣value╩╠'minLength'╩╩╩╠{}╠=╣text╩╠'maxLength'╩╩╠=╣value╩╠'maxLength'╩╩╩╠{}╠=╣text╩╠'email'╩╩╠=╣value╩╠'email'╩╩╩╠{}╠=╣text╩╠'iban'╩╩╠=╣value╩╠'iban'╩╩╩╠{}╠=╣text╩╠'tckn'╩╩╠=╣value╩╠'tckn'╩╩╩╠{}╠=╣text╩╠'vkn'╩╩╠=╣value╩╠'vkn'╩╩╩╠{}╠=╣text╩╠'regex'╩╩╠=╣value╩╠'regex'╩╩╩╩╩",T:"prop"}},E:{change:{H:'"use strict";\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar selectedRule = value.value;\r\ndebugger;\r\n//TODO: Buarası artabilir ruleDict tutup kontrol et\r\n//TODO: DynamicCreate Comp hangi component trigger edildi bilinmiyor \r\nif (selectedRule == "minLength" && selectedRule == "maxLength") {\r\n    components["txtValidationRuleValue_1"].visible = true;\r\n}\r\nelse {\r\n    components["txtValidationRuleValue_1"].visible = false;\r\n}\r\n',P:"value:object",HL:"JS"}},C:{},_Editor:{eID:"EdtrComp_86"},O:{cType:"slot",layout:{dOpt:{xs:["sp:mr-5"]},class:"mr-5"}}},{T:"VTextField",P:{ID:{H:"txtValidationRuleValue",T:"prop"},label:{H:"╬'Value'╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_85"},O:{cType:"slot"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_108"},O:{cType:"slot",layout:{dOpt:{xs:["d:d-flex","fd:flex-row"]},class:"d-flex flex-row"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_106"},O:{cType:"slot"}},{T:"VRow",P:{ID:{H:"EdtrComp_136",T:"prop"},class:{H:"╬'d-flex flex-row justify-end'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_138",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VBtn",P:{ID:{H:"EdtrComp_139",T:"prop"},color:{H:"╬'primary'╩╩",T:"prop"},outlined:{H:"╬false╩╩",T:"prop"}},E:{click:{H:'"use strict";\r\nvar _a, _b;\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar LRPrefix = "LR_";\r\nvar defaultGroupName = "defaultGroup";\r\nvar dynamicModel = (_a = quick.store.get(\'dynamicModel\')) !== null && _a !== void 0 ? _a : {\r\n    uiFields: { groups: [], localization: { "tr-TR": {}, "en-US": {} } },\r\n    serviceFields: []\r\n};\r\nvar selectedGroupName = components.comboGroupName.internalValue ? components.comboGroupName.internalValue.value : defaultGroupName;\r\nvar fieldName = components.txtFieldName.internalValue;\r\nvar fieldType = (_b = components.cbFieldType.internalValue) === null || _b === void 0 ? void 0 : _b.value;\r\ncreateFields();\r\nresetFieldContainer();\r\nquick.store.set(\'dynamicModel\', dynamicModel);\r\nquick.EM.trace(quick.store.get(\'dynamicModel\'));\r\nfunction createFields() {\r\n    var _a;\r\n    if (selectedGroupName == defaultGroupName) {\r\n        addDefaultGroup();\r\n    }\r\n    //Create UI Fields\r\n    var selectedUIGroup = dynamicModel.uiFields.groups.filter(function (grp) { return grp.groupName == selectedGroupName; })[0];\r\n    var fieldLRID = LRPrefix + selectedGroupName + \'_\' + fieldName;\r\n    selectedUIGroup.fields.push({\r\n        fieldName: fieldName,\r\n        label: fieldLRID,\r\n        type: fieldType,\r\n        format: (_a = components.cbFieldFormat.internalValue) === null || _a === void 0 ? void 0 : _a.value\r\n    });\r\n    //LRID \r\n    //Şimdilik 2 dil desteği -  Daha sonra dynamic LRID girişi olacak.\r\n    if (components.txtFieldLabelTR.internalValue)\r\n        dynamicModel.uiFields.localization["tr-TR"][fieldLRID] = components.txtFieldLabelTR.internalValue;\r\n    if (components.txtFieldLabelEN.internalValue)\r\n        dynamicModel.uiFields.localization["en-US"][fieldLRID] = components.txtFieldLabelEN.internalValue;\r\n    //Create Service Fields\r\n    var serviceGroup = dynamicModel.serviceFields.filter(function (grp) { return grp.groupName == selectedGroupName; })[0];\r\n    serviceGroup.fields.push({\r\n        fieldName: fieldName,\r\n        type: fieldType,\r\n        rules: getFieldValidationRules()\r\n    });\r\n    components.dynamicFieldsDataTable.items = selectedUIGroup.fields;\r\n}\r\nfunction addDefaultGroup() {\r\n    if (dynamicModel.uiFields.groups.filter(function (grp) { return grp.groupName == defaultGroupName; }).length > 0) {\r\n        return;\r\n    }\r\n    dynamicModel.uiFields.groups.push({ groupName: defaultGroupName, fields: [] });\r\n    dynamicModel.serviceFields.push({ groupName: defaultGroupName, fields: [] });\r\n    var groupListItems = dynamicModel.uiFields.groups.map(function (grp) { return { "text": grp.groupName, "value": grp.groupName }; });\r\n    components.cbTableGroupList.items = groupListItems;\r\n    components.comboGroupName.items = groupListItems;\r\n}\r\nfunction getFieldValidationRules() {\r\n    debugger;\r\n    var fieldRuleCount = quick.store.get(\'fieldRuleIndex\');\r\n    var rules = [];\r\n    for (var i = 1; i <= fieldRuleCount; i++) {\r\n        var ruleTypeComponent = components["cbValidationRulesType_" + i];\r\n        var ruleValueComponent = components["txtValidationRuleValue_" + i];\r\n        if (!ruleTypeComponent || !ruleTypeComponent.internalValue) {\r\n            return;\r\n        }\r\n        var ruleType = ruleTypeComponent.internalValue.value;\r\n        var ruleValue = ruleValueComponent ? ruleValueComponent.internalValue : undefined;\r\n        var rule = { type: ruleType, value: ruleValue };\r\n        rules.push(rule);\r\n    }\r\n    return rules;\r\n}\r\nfunction resetFieldContainer() {\r\n    quick.Quick.reset(\'fieldContainer\');\r\n    quick.store.set(\'fieldRuleIndex\', 0);\r\n}\r\n',P:"mouseEvent:unknown | undefined",HL:"JS"}},C:{default:{c:[{T:"QLabel",C:{},E:{},P:{ID:{H:"EdtrComp_140",T:"prop"},text:{H:"╬'Save Field'╩╩",T:"prop"}},_Editor:{eID:"EdtrComp_140"},O:{cType:"child",compDomClasses:"q-label "}}],cType:"slot"}},_Editor:{eID:"EdtrComp_139"},O:{cType:"slot",compDomClasses:"v-btn v-btn--contained theme--light v-size--default primary"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_138"},O:{cType:"slot",compDomClasses:"col d-flex flex-row col-12 justify-end",layout:{dOpt:{xs:["d:d-flex","fd:flex-row","c:col-12","j:justify-end"]},class:"d-flex flex-row col-12 justify-end"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_136"},O:{cType:"slot",compDomClasses:"row d-flex flex-row justify-end"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_103"},O:{cType:"slot",compDomClasses:"container"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_100"},O:{cType:"slot",compDomClasses:"v-card v-sheet theme--light"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_99"},O:{cType:"slot",compDomClasses:"col d-flex flex-column",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_98"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_49"},O:{cType:"slot",compDomClasses:"v-expansion-panel-content"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_46"},O:{cType:"slot",compDomClasses:"v-expansion-panel"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_35"},O:{cType:"slot",compDomClasses:"v-item-group theme--light v-expansion-panels"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_30"},O:{cType:"slot",compDomClasses:"col d-flex flex-column",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_28"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}},{T:"VRow",P:{ID:{H:"EdtrComp_133",T:"prop"},class:{H:"╬'d-flex flex-row'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_135",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCombobox",P:{ID:{H:"cbTableGroupList",T:"prop"},attach:{H:"╬true╩╩",T:"prop"},label:{H:"╬'Group Name'╩╩",T:"prop"}},E:{change:{H:'"use strict";\r\nvar _a, _b;\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\ndebugger;\r\nvar uiFields = (_a = quick.store.get(\'dynamicModel\')) === null || _a === void 0 ? void 0 : _a.uiFields;\r\nvar selectedGroupName = (_b = components.cbTableGroupList.internalValue) === null || _b === void 0 ? void 0 : _b.value;\r\nvar selectedGroup = uiFields.groups.filter(function (grp) { return grp.groupName == selectedGroupName; });\r\nif (selectedGroup && selectedGroup[0].fields) {\r\n    components.dynamicFieldsDataTable.items = selectedGroup[0].fields;\r\n}\r\n',P:"value:object",HL:"JS"}},C:{},_Editor:{eID:"EdtrComp_23"},O:{cType:"slot",compDomClasses:"v-input theme--light v-text-field v-text-field--is-booted v-select v-autocomplete undefined"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_135"},O:{cType:"slot",compDomClasses:"col col-3 d-flex flex-column",layout:{dOpt:{xs:["c:col-3","d:d-flex","fd:flex-column"]},class:"col-3 d-flex flex-column"}}},{T:"VCol",P:{ID:{H:"EdtrComp_121",T:"prop"}},E:{},C:{default:{c:[{T:"VBtn",P:{ID:{H:"btnEditGroup",T:"prop"},color:{H:"╬'primary'╩╩",T:"prop"},fab:{H:"╬true╩╩",T:"prop"}},E:{},C:{default:{c:[{T:"VIcon",P:{ID:{H:"EdtrComp_155",T:"prop"},text:{H:"╬'mdi-pencil'╩╩",T:"text"}},E:{},C:{},_Editor:{eID:"EdtrComp_155"},O:{cType:"slot",compDomClasses:"v-icon notranslate mdi mdi-pencil theme--light"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_137"},O:{cType:"slot",layout:{dOpt:{xs:["sp:mr-2"]},class:"mr-2"},compDomClasses:"v-btn v-btn--contained v-btn--fab v-btn--round theme--light v-size--default primary mr-2"}},{T:"VBtn",P:{ID:{H:"btnDeleteGroup",T:"prop"},color:{H:"╬'primary'╩╩",T:"prop"},fab:{H:"╬true╩╩",T:"prop"}},E:{click:{H:"\"use strict\";\r\nvar _a;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dynamicModel = quick.store.get('dynamicModel');\r\nvar selectedGroupName = (_a = components.cbTableGroupList.internalValue) === null || _a === void 0 ? void 0 : _a.value;\r\ndynamicModel === null || dynamicModel === void 0 ? void 0 : dynamicModel.uiFields.groups.forEach(function (grp, grpIndex) {\r\n    if (grp.groupName == selectedGroupName) {\r\n        dynamicModel.uiFields.groups.splice(grpIndex, 1);\r\n    }\r\n});\r\ndynamicModel === null || dynamicModel === void 0 ? void 0 : dynamicModel.serviceFields.forEach(function (grp, grpIndex) {\r\n    if (grp.groupName == selectedGroupName) {\r\n        dynamicModel.serviceFields.splice(grpIndex, 1);\r\n    }\r\n});\r\ndebugger;\r\ncomponents.cbTableGroupList.items = components.cbTableGroupList.items.filter(function (item) { return item.value !== selectedGroupName; });\r\ncomponents.comboGroupName.items = components.cbTableGroupList.items.filter(function (item) { return item.value !== selectedGroupName; });\r\nquick.Quick.reset('cbTableGroupList');\r\ncomponents.dynamicFieldsDataTable.items = [];\r\nquick.store.set('dynamicModel', dynamicModel);\r\n",P:"mouseEvent:unknown | undefined",HL:"JS"}},C:{default:{c:[{T:"VIcon",P:{ID:{H:"EdtrComp_156",T:"prop"},text:{H:"╬'mdi-delete'╩╩",T:"text"}},E:{},C:{},_Editor:{eID:"EdtrComp_156"},O:{cType:"slot",compDomClasses:"v-icon notranslate mdi mdi-delete theme--light"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_149"},O:{cType:"slot",compDomClasses:"v-btn v-btn--contained v-btn--fab v-btn--round theme--light v-size--default primary"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_121"},O:{cType:"slot",layout:{dOpt:{xs:["d:d-flex","fd:flex-row"]},class:"d-flex flex-row"},compDomClasses:"col d-flex flex-row"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_133"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}},{T:"VRow",P:{ID:{H:"EdtrComp_6",T:"prop"},class:{H:"╬'d-flex flex-row'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_15",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VDataTable",P:{ID:{H:"dynamicFieldsDataTable",T:"prop"},headers:{H:"╬[]╠{}╠=╣text╩╠'Field Name'╩╩╠=╣value╩╠'fieldName'╩╩╩╠{}╠=╣text╩╠'Label'╩╩╠=╣value╩╠'label'╩╩╩╠{}╠=╣text╩╠'Type'╩╩╠=╣value╩╠'type'╩╩╩╠{}╠=╣text╩╠'Format'╩╩╠=╣value╩╠'format'╩╩╩╠{}╠=╣text╩╠''╩╩╠=╣value╩╠'actions'╩╩╠=╣align╩╠'center fixed'╩╩╠=╣class╩╠'fixed'╩╩╩╩╩",T:"prop"},items:{H:"╬[]╩╩",T:"prop"}},E:{},C:{"item.actions":{c:[{T:"VIcon",P:{ID:{H:"fieldEditButton",T:"prop"},text:{H:"╬'mdi-pencil'╩╩",T:"text"},large:{H:"╬true╩╩",T:"prop"}},E:{click:{H:'"use strict";\r\nvar _a;\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar dynamicModel = quick.store.get(\'dynamicModel\');\r\nvar selectedGroupName = (_a = components.cbTableGroupList.internalValue) === null || _a === void 0 ? void 0 : _a.value;\r\ndynamicModel === null || dynamicModel === void 0 ? void 0 : dynamicModel.uiFields.groups.forEach(function (grp, grpIndex) {\r\n    if (grp.groupName == selectedGroupName) {\r\n        grp.fields.forEach(function (field, fieldIndex) {\r\n            debugger;\r\n            if (field.fieldName == item.fieldName) {\r\n                components.txtFieldName.internalValue = field.fieldName;\r\n                components.cbFieldType.internalValue = components.cbFieldType.items.filter(function (item) { return item.value == field.type; })[0];\r\n                components.cbFieldFormat.internalValue = components.cbFieldFormat.items.filter(function (item) { return item.value == field.format; })[0];\r\n                components.txtFieldLabelTR.internalValue = dynamicModel.uiFields.localization["tr-TR"][field.label];\r\n                components.txtFieldLabelEN.internalValue = dynamicModel.uiFields.localization["en-US"][field.label];\r\n            }\r\n        });\r\n    }\r\n});\r\nquick.store.set(\'dynamicModel\', dynamicModel);\r\ncomponents.expansionPanels.internalValue = 1;\r\n',P:"mouseEvent:object",HL:"JS"}},C:{},_Editor:{eID:"EdtrComp_78"},O:{cType:"slot",compDomClasses:"v-icon notranslate v-icon--link mdi mdi-pencil theme--light"}},{T:"VIcon",P:{ID:{H:"fieldDeleteButton",T:"prop"},text:{H:"╬'mdi-delete'╩╩",T:"text"},large:{H:"╬true╩╩",T:"prop"}},E:{click:{H:"\"use strict\";\r\nvar _a;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dynamicModel = quick.store.get('dynamicModel');\r\nvar selectedGroupName = (_a = components.cbTableGroupList.internalValue) === null || _a === void 0 ? void 0 : _a.value;\r\ndynamicModel === null || dynamicModel === void 0 ? void 0 : dynamicModel.uiFields.groups.forEach(function (grp, grpIndex) {\r\n    if (grp.groupName == selectedGroupName) {\r\n        grp.fields.forEach(function (field, fieldIndex) {\r\n            if (field.fieldName == item.fieldName) {\r\n                dynamicModel.uiFields.groups[grpIndex].fields.splice(fieldIndex, 1);\r\n            }\r\n        });\r\n    }\r\n});\r\nquick.store.set('dynamicModel', dynamicModel);\r\nquick.Quick.reset('fieldContainer');\r\n",P:"mouseEvent:object",HL:"JS"}},C:{},_Editor:{eID:"EdtrComp_77"},O:{cType:"slot",compDomClasses:"v-icon notranslate v-icon--link mdi mdi-delete theme--light"}}],cType:"scopedSlot"}},_Editor:{eID:"EdtrComp_18"},O:{cType:"scopedSlot",compDomClasses:"v-data-table v-data-table--has-bottom theme--light"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_15"},O:{cType:"slot",compDomClasses:"col d-flex flex-column",layout:{dOpt:{xs:["d:d-flex","fd:flex-column"]},class:"d-flex flex-column"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_6"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}},{T:"VRow",P:{ID:{H:"EdtrComp_55",T:"prop"},class:{H:"╬'d-flex flex-row'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_62",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VBtn",P:{ID:{H:"EdtrComp_66",T:"prop"},color:{H:"╬'primary'╩╩",T:"prop"}},E:{click:{H:"\"use strict\";\r\nvar _a, _b;\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dynamicModel = quick.store.get('dynamicModel');\r\nvar modelKey = (_a = quick.store.get('modelKey')) !== null && _a !== void 0 ? _a : \"customerInfoModelKey\";\r\nvar modelUrl = (_b = quick.store.get('modelUrl')) !== null && _b !== void 0 ? _b : \"http://customer.tkb-int.dev.rally.softtech/api/dynamicscreen/\";\r\nvar requestParams = {\r\n    mode: \"raw\",\r\n    raw: JSON.stringify(dynamicModel),\r\n    modelKey: modelKey\r\n};\r\nvar requestObj = {\r\n    url: modelUrl,\r\n    http: \"GET\",\r\n    responseField: 'firstResponse',\r\n    blockRender: true,\r\n    data: requestParams,\r\n    onSuccess: 'onSuccessSaveModel',\r\n    onFail: 'OnFailModelSave'\r\n};\r\nquick.Request.async(requestObj);\r\n",P:"mouseEvent:unknown | undefined",HL:"JS"},onSuccessSaveModel:{H:'"use strict";\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nquick.Quick.alert({ text: "Model kaydedilmiştir", category: "Success" });\r\n',C:!0,HL:"JS"},OnFailModelSave:{H:'"use strict";\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nquick.Quick.alert({ text: "Model kaydedilememiştir.", category: "Eror" });\r\n',C:!0,HL:"JS"}},C:{default:{c:[{T:"QLabel",C:{},E:{},P:{ID:{H:"EdtrComp_70",T:"prop"},text:{H:"╬'Save Model'╩╩",T:"prop"}},_Editor:{eID:"EdtrComp_70"},O:{cType:"child",compDomClasses:"q-label "}}],cType:"slot"}},_Editor:{eID:"EdtrComp_66"},O:{cType:"slot",compDomClasses:"v-btn v-btn--contained theme--light v-size--default primary"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_62"},O:{cType:"slot",compDomClasses:"col d-flex flex-row justify-end col-12",layout:{dOpt:{xs:["d:d-flex","fd:flex-row","j:justify-end","c:col-12"]},class:"d-flex flex-row justify-end col-12"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_55"},O:{cType:"slot",compDomClasses:"row d-flex flex-row"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_26"},O:{cType:"slot",compDomClasses:"container"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_24"},O:{cType:"slot",compDomClasses:"v-card v-sheet theme--light"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_21"},O:{cType:"slot",compDomClasses:"v-dialog__container"}}],lrids:{},clrids:{},namedViews:{designMode:{pJson:[{T:"Messaging",P:{ID:{H:"EdtrComp_2",T:"prop"},externalProps:{H:"['serviceName', 'serviceFilterKey', 'model', 'data']",T:"prop"}},E:{GetDynamicData:{H:'quick.EM.trace("DF-GetDynamicData design mode")',C:!0,EV:!0,HL:"TS"},CreateFields:{H:"quick.EM.trace('DF-CreateFields design mode')",C:!0,EV:!0,HL:"TS"}},C:{},_Editor:{eID:"EdtrComp_2"},O:{compDomClasses:""}},{T:"QLabel",P:{ID:{H:"EdtrComp_1",T:"prop"},text:{H:"'Dynamic Fileds Component'",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_1"},O:{cType:"slot",compDomClasses:"q-label "}}],cJson:[{T:"Messaging",P:{ID:{H:"EdtrComp_2",T:"prop"},externalProps:{H:"╬[]╠'serviceName'╩╠'serviceFilterKey'╩╠'model'╩╠'data'╩╩╩",T:"prop"}},E:{GetDynamicData:{H:'"use strict";\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nquick.EM.trace("DF-GetDynamicData design mode");\r\n',C:!0,EV:!0,HL:"JS"},CreateFields:{H:'"use strict";\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nquick.EM.trace(\'DF-CreateFields design mode\');\r\n',C:!0,EV:!0,HL:"JS"}},C:{},_Editor:{eID:"EdtrComp_2"},O:{cType:"child",compDomClasses:""}},{T:"QLabel",P:{ID:{H:"EdtrComp_1",T:"prop"},text:{H:"╬'Dynamic Fileds Component'╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_1"},O:{cType:"slot",compDomClasses:"q-label "}}]}}},i={pJson:[{T:"Messaging",P:{ID:{H:"EdtrComp_62",T:"prop"},externalProps:{H:"['referenceCompId','showUnchanged', 'iterateAllSubPages']",T:"prop"}},E:{setVisibleListButton:{H:"//visible parameter sets the list button component's visible prop\r\ncomponents.showListButton.visible = true ",C:!0,EV:!0,HL:"TS"},PreRender:{H:"const editor = quick.Quick.getEditor();\r\nif (editor) {\r\n    editor.dmEnabled = true;\r\n}",I:!0,HL:"TS"},showList:{H:"quick.EM.trace('getValueContextList')\r\nquick.EM.trace(quick.parent.props.referenceCompId)\r\nlet valueList = (<any>quick.Quick.dm).getValueContextList(quick.parent.props.referenceCompId, quick.parent.props.iterateAllSubPages)\r\nquick.EM.trace(valueList)\r\ncomponents.detailTable.items = valueList",C:!0,EV:!0,HL:"TS"},EndRender:{H:"components.rowDetail.visible = false;\r\n\r\nif (quick.parent.props?.showUnchanged) {\r\n    components.iconUnchanged.visible = true;\r\n    components.labelUnchanged.visible = true;\r\n}",HL:"TS"}},C:{},_Editor:{eID:"EdtrComp_62"},O:{compDomClasses:"newDropBorder",cType:"child"}},{T:"VContainer",P:{ID:{H:"EdtrComp_52",T:"prop"},eager:{H:"true",T:"prop"},visible:{H:"true",T:"prop"}},E:{},C:{default:{c:[{T:"VRow",P:{ID:{H:"EdtrComp_117",T:"prop"},class:{H:"'no-gutters'",T:"class"}},E:{},C:{default:{c:[{T:"VCol",C:{default:{c:[{T:"VCard",P:{ID:{H:"EdtrComp_134",T:"prop"},color:{H:"'white'",T:"prop"},visible:{H:"true",T:"prop"}},E:{},C:{default:{c:[{T:"VRow",P:{ID:{H:"EdtrComp_5",T:"prop"},class:{H:"'no-gutters align-center flex-nowrap'",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_26",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"QLabel",P:{ID:{H:"EdtrComp_21",T:"prop"},text:{H:"LR('status')",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_21"},O:{cType:"child",compDomClasses:"q-label text-h5 font-weight-bold newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_26"},O:{cType:"slot",compDomClasses:"col col-2 newDropBorder"},S:{"xs-xl":{col:"3"}}},{T:"VCol",P:{ID:{H:"EdtrComp_44",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VIcon",P:{ID:{H:"EdtrComp_10",T:"prop"},text:{H:"'mdi-circle'",T:"text"},small:{H:"true",T:"prop"},color:{H:"'light-green lighten-3'",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_10"},O:{cType:"child",compDomClasses:"v-icon notranslate mdi mdi-circle theme--light light-green--text text--lighten-3 newDropBorder"}},{T:"QLabel",P:{ID:{H:"EdtrComp_9s",T:"prop"},class:{H:"''",T:"class"},text:{H:"LR('saved')",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_9"},O:{cType:"child",compDomClasses:"q-label text-h6 ml-2 newDropBorder"}},{T:"VIcon",P:{ID:{H:"EdtrComp_6",T:"prop"},text:{H:"'mdi-circle'",T:"text"},small:{H:"true",T:"prop"},color:{H:"'light-blue lighten-3'",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{},_Editor:{eID:"EdtrComp_6"},O:{cType:"child",compDomClasses:"v-icon notranslate mdi mdi-circle theme--light light-blue--text text--lighten-3 ml-4 newDropBorder"},S:{"xs-xl":{marginLeft:"12px"}}},{T:"QLabel",P:{ID:{H:"EdtrComp_8",T:"prop"},class:{H:"''",T:"class"},text:{H:"LR('updated')",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_8"},O:{cType:"child",compDomClasses:"q-label text-h6 ml-2 newDropBorder"}},{T:"VIcon",P:{ID:{H:"EdtrComp_15s",T:"prop"},text:{H:"'mdi-circle'",T:"text"},small:{H:"true",T:"prop"},color:{H:"'red lighten-3'",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{},_Editor:{eID:"EdtrComp_15"},O:{cType:"child",compDomClasses:"v-icon notranslate mdi mdi-circle theme--light red--text text--lighten-3 ml-4 newDropBorder"},S:{"xs-xl":{marginLeft:"12px"}}},{T:"QLabel",P:{ID:{H:"EdtrComp_17",T:"prop"},class:{H:"''",T:"class"},text:{H:"LR('deleted')",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_17"},O:{cType:"child",compDomClasses:"q-label text-h6 ml-2 newDropBorder"}},{T:"VIcon",P:{ID:{H:"iconUnchanged",T:"prop"},text:{H:"'mdi-circle'",T:"text"},small:{H:"true",T:"prop"},color:{H:"'blue-grey lighten-4'",T:"prop"},class:{H:"''",T:"class"},visible:{H:"false",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_69"},O:{cType:"child",compDomClasses:"v-icon notranslate mdi mdi-circle theme--light red--text text--lighten-3 ml-4 newDropBorder"},S:{"xs-xl":{marginLeft:"12px"}}},{T:"QLabel",P:{ID:{H:"labelUnchanged",T:"prop"},class:{H:"''",T:"class"},text:{H:"LR('none')",T:"prop"},visible:{H:"false",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_112"},O:{cType:"child",compDomClasses:"q-label text-h6 ml-2 newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_44"},O:{cType:"slot",compDomClasses:"col col-5 newDropBorder"}},{T:"VCol",P:{ID:{H:"EdtrComp_24",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{default:{c:[{T:"VBtn",P:{ID:{H:"showListButton",T:"prop"},regular:{H:"true",T:"prop"}},E:{click:{H:"components.rowDetail.visible = !components.rowDetail.visible\r\ncomponents.lblShowList.text = quick.LR('showList')\r\n\r\nif (components.rowDetail.visible) {\r\n    quick.MM.trigger('showList')\r\n    components.lblShowList.text = quick.LR('hideList')\r\n}",P:"mouseEvent:unknown | undefined",HL:"TS"}},C:{default:{c:[{T:"QLabel",C:{},E:{},P:{ID:{H:"lblShowList",T:"prop"},text:{H:"LR('showList')",T:"prop"}},_Editor:{eID:"EdtrComp_23"},O:{cType:"child",compDomClasses:"q-label newDropBorder"},S:{fontColor:"#ffffff"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_22"},O:{cType:"slot",compDomClasses:"v-btn v-btn--contained theme--light v-size--default info newDropBorder"},S:{backgroundColor:"#1976d2"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_24"},O:{cType:"slot",compDomClasses:"col d-flex justify-end newDropBorder"},S:{"xs-xl":{justifyContent:"flex-end",col:"3"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_5"},O:{cType:"slot",compDomClasses:"row no-gutters align-center flex-nowrap newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_134"},S:{"xs-xl":{marginLeft:"",marginRight:"",marginBottom:"",marginTop:"",paddingTop:"12px",paddingBottom:"12px",paddingLeft:"12px",paddingRight:"12px",width:"",height:"",unlink:"false"},backgroundColor:"#ffffff",boxShadow:"",boxSizing:"",borderTopStyle:"",borderRightStyle:"",borderBottomStyle:"",borderLeftStyle:"",borderTopLeftRadius:"",borderTopRightRadius:"",borderBottomLeftRadius:"",borderBottomRightRadius:"",borderTopWidth:"",borderRightWidth:"",borderBottomWidth:"",borderLeftWidth:"",defaultBorderColor:"",sides:""},O:{cType:"slot"}}],cType:"slot"}},E:{},P:{ID:{H:"EdtrComp_132",T:"prop"}},_Editor:{eID:"EdtrComp_132"},O:{cType:"slot"},S:{"xs-xl":{col:"",flexDirection:"column",alignItems:"",justifyContent:"",marginLeft:"",marginRight:"",marginBottom:"",marginTop:"",paddingTop:"px",paddingBottom:"px",paddingLeft:"px",paddingRight:"px"},backgroundColor:"",boxShadow:"",boxSizing:"",borderTopStyle:"",borderRightStyle:"",borderBottomStyle:"",borderLeftStyle:"",borderTopLeftRadius:"",borderTopRightRadius:"",borderBottomLeftRadius:"",borderBottomRightRadius:"",borderTopWidth:"",borderRightWidth:"",borderBottomWidth:"",borderLeftWidth:"",defaultBorderColor:"",sides:""}}],cType:"slot"}},_Editor:{eID:"EdtrComp_117"},S:{"xs-xl":{marginLeft:"",marginRight:"",marginBottom:"",marginTop:"",paddingTop:"",paddingBottom:"",paddingLeft:"",paddingRight:"",width:"",height:"",unlink:"false"},backgroundColor:"",boxShadow:"",boxSizing:"",borderTopStyle:"",borderRightStyle:"",borderBottomStyle:"",borderLeftStyle:"",borderTopLeftRadius:"",borderTopRightRadius:"",borderBottomLeftRadius:"",borderBottomRightRadius:"",borderTopWidth:"",borderRightWidth:"",borderBottomWidth:"",borderLeftWidth:"",defaultBorderColor:"",sides:""},O:{cType:"slot"}},{T:"VRow",P:{ID:{H:"rowDetail",T:"prop"},class:{H:"'no-gutters'",T:"class"}},E:{},C:{default:{c:[{T:"VCol",C:{default:{c:[{T:"VCard",P:{ID:{H:"EdtrComp_152",T:"prop"},color:{H:"'white'",T:"prop"},visible:{H:"true",T:"prop"}},E:{},C:{default:{c:[{T:"VRow",P:{ID:{H:"EdtrComp_95",T:"prop"},class:{H:"'no-gutters'",T:"class"}},E:{},C:{default:{c:[{T:"VCol",C:{default:{c:[{T:"QLabel",P:{ID:{H:"EdtrComp_7",T:"prop"},text:{H:"LR('updatedRecords')",T:"prop"},class:{H:"''",T:"class"}},E:{},C:{},_Editor:{eID:"EdtrComp_7"},O:{cType:"child",compDomClasses:"q-label pl-8 text-h6 font-weight-bold newDropBorder"}},{T:"VDataTable",P:{ID:{H:"detailTable",T:"prop"},headers:{H:"[{ text = LR('dataType'), value = 'label'},\n{ text = LR('currentData'), value = 'value' },\n{ text = LR('oldData'), value = 'compareValue' }]",T:"prop"},footerProps:{H:"{showFirstLastPage = true,\nfirstIcon = 'mdi-arrow-collapse-left',\nlastIcon = 'mdi-arrow-collapse-right',\nprevIcon = 'mdi-minus',\nnextIcon = 'mdi-plus',\nitemsPerPageText = LR('itemsPerPage')}",T:"prop"},itemsPerPage:{H:"5",T:"prop"},noDataText:{H:"LR('noData')",T:"prop"},noResultText:{H:"LR('noResult')",T:"prop"}},E:{},C:{"item.value":{c:[{T:"VChip",P:{ID:{H:"EdtrComp_12",T:"prop"},color:{H:"if (item.statu == 'saved') {\r\n    'light-green lighten-3'\r\n} else if (item.statu == 'updated') {\r\n    'light-blue lighten-3'\r\n} else if (item.statu == 'removed') {\r\n    'red lighten-3'\r\n} else {\r\n    ''\r\n}",T:"prop"}},E:{},C:{default:{c:[{T:"QLabel",P:{ID:{H:"EdtrComp_16",T:"prop"},text:{H:"if (item.value == undefined || item.value == null) {\r\n    '-'\r\n} else {\r\n    item.value\r\n}",T:"prop"},class:{H:"'black--text'",T:"class"}},E:{},C:{},_Editor:{eID:"EdtrComp_16"},O:{compDomClasses:"q-label ",cType:"child"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_12"},O:{cType:"slot",compDomClasses:"v-chip theme--light v-size--default red lighten-3"}}],cType:"scopedSlot"}},_Editor:{eID:"EdtrComp_4"},O:{cType:"child",compDomClasses:"v-data-table v-data-table--has-bottom theme--light pt-5 pl-5 pr-5 newDropBorder"},S:{"xs-xl":{marginTop:"16px"}}}],cType:"slot"}},E:{},P:{ID:{H:"EdtrComp_106",T:"prop"}},_Editor:{eID:"EdtrComp_106"},O:{cType:"slot"},S:{"xs-xl":{paddingTop:"px",paddingLeft:"px",paddingBottom:"px",paddingRight:"px"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_95"},O:{cType:"slot"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_152"},S:{"xs-xl":{marginLeft:"",marginRight:"",marginBottom:"",marginTop:"",paddingTop:"12px",paddingBottom:"12px",paddingLeft:"12px",paddingRight:"12px",width:"",height:"",unlink:"false"},backgroundColor:"#ffffff",boxShadow:"",boxSizing:"",borderTopStyle:"",borderRightStyle:"",borderBottomStyle:"",borderLeftStyle:"",borderTopLeftRadius:"",borderTopRightRadius:"",borderBottomLeftRadius:"",borderBottomRightRadius:"",borderTopWidth:"",borderRightWidth:"",borderBottomWidth:"",borderLeftWidth:"",defaultBorderColor:"",sides:""},O:{cType:"slot"}}],cType:"slot"}},E:{},P:{ID:{H:"EdtrComp_151",T:"prop"}},_Editor:{eID:"EdtrComp_151"},O:{cType:"slot"},S:{"xs-xl":{col:"",flexDirection:"column",alignItems:"",justifyContent:"",marginLeft:"",marginRight:"",marginBottom:"",marginTop:"",paddingTop:"",paddingBottom:"",paddingLeft:"",paddingRight:""},backgroundColor:"",boxShadow:"",boxSizing:"",borderTopStyle:"",borderRightStyle:"",borderBottomStyle:"",borderLeftStyle:"",borderTopLeftRadius:"",borderTopRightRadius:"",borderBottomLeftRadius:"",borderBottomRightRadius:"",borderTopWidth:"",borderRightWidth:"",borderBottomWidth:"",borderLeftWidth:"",defaultBorderColor:"",sides:""}}],cType:"slot"}},_Editor:{eID:"EdtrComp_150"},S:{"xs-xl":{marginLeft:"",marginRight:"",marginBottom:"",marginTop:"36px",paddingTop:"",paddingBottom:"",paddingLeft:"",paddingRight:"",width:"",height:"",unlink:"false"},backgroundColor:"",boxShadow:"",boxSizing:"",borderTopStyle:"",borderRightStyle:"",borderBottomStyle:"",borderLeftStyle:"",borderTopLeftRadius:"",borderTopRightRadius:"",borderBottomLeftRadius:"",borderBottomRightRadius:"",borderTopWidth:"",borderRightWidth:"",borderBottomWidth:"",borderLeftWidth:"",defaultBorderColor:"",sides:""},O:{cType:"slot"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_52"},S:{"xs-xl":{marginLeft:"",marginRight:"",marginBottom:"",marginTop:"",paddingTop:"",paddingBottom:"",paddingLeft:"",paddingRight:"",width:"",height:"",unlink:"false"},backgroundColor:"",boxShadow:"",boxSizing:"",borderTopStyle:"",borderRightStyle:"",borderBottomStyle:"",borderLeftStyle:"",borderTopLeftRadius:"",borderTopRightRadius:"",borderBottomLeftRadius:"",borderBottomRightRadius:"",borderTopWidth:"",borderRightWidth:"",borderBottomWidth:"",borderLeftWidth:"",defaultBorderColor:"",sides:""},O:{cType:"slot"}}],cJson:[{T:"Messaging",P:{ID:{H:"EdtrComp_62",T:"prop"},externalProps:{H:"╬[]╠'referenceCompId'╩╠'showUnchanged'╩╠'iterateAllSubPages'╩╩╩",T:"prop"}},E:{setVisibleListButton:{H:'Object.defineProperty(exports, "__esModule", { value: true });\r\n//visible parameter sets the list button component\'s visible prop\r\ncomponents.showListButton.visible = true;\r\n',C:!0,EV:!0,HL:"JS"},PreRender:{H:'Object.defineProperty(exports, "__esModule", { value: true });\r\nvar editor = quick.Quick.getEditor();\r\nif (editor) {\r\n    editor.dmEnabled = true;\r\n}\r\n',I:!0,HL:"JS"},showList:{H:"Object.defineProperty(exports, \"__esModule\", { value: true });\r\nquick.EM.trace('getValueContextList');\r\nquick.EM.trace(quick.parent.props.referenceCompId);\r\nvar valueList = quick.Quick.dm.getValueContextList(quick.parent.props.referenceCompId, quick.parent.props.iterateAllSubPages);\r\nquick.EM.trace(valueList);\r\ncomponents.detailTable.items = valueList;\r\n",C:!0,EV:!0,HL:"JS"},EndRender:{H:'var _a;\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\ncomponents.rowDetail.visible = false;\r\nif ((_a = quick.parent.props) === null || _a === void 0 ? void 0 : _a.showUnchanged) {\r\n    components.iconUnchanged.visible = true;\r\n    components.labelUnchanged.visible = true;\r\n}\r\n',HL:"JS"}},C:{},_Editor:{eID:"EdtrComp_62"},O:{compDomClasses:"newDropBorder",cType:"child"}},{T:"VContainer",P:{ID:{H:"EdtrComp_52",T:"prop"},eager:{H:"╬true╩╩",T:"prop"},visible:{H:"╬true╩╩",T:"prop"}},E:{},C:{default:{c:[{T:"VRow",P:{ID:{H:"EdtrComp_117",T:"prop"},class:{H:"╬'no-gutters'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCol",C:{default:{c:[{T:"VCard",P:{ID:{H:"EdtrComp_134",T:"prop"},color:{H:"╬'white'╩╩",T:"prop"},visible:{H:"╬true╩╩",T:"prop"}},E:{},C:{default:{c:[{T:"VRow",P:{ID:{H:"EdtrComp_5",T:"prop"},class:{H:"╬'no-gutters align-center flex-nowrap'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCol",P:{ID:{H:"EdtrComp_26",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"QLabel",P:{ID:{H:"EdtrComp_21",T:"prop"},text:{H:"╬()╣LR╩╠'status'╩╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_21"},O:{cType:"child",compDomClasses:"q-label newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_26"},O:{cType:"slot",compDomClasses:"col newDropBorder"},S:{"xs-xl":{col:"3"}}},{T:"VCol",P:{ID:{H:"EdtrComp_44",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VIcon",P:{ID:{H:"EdtrComp_10",T:"prop"},text:{H:"╬'mdi-circle'╩╩",T:"text"},small:{H:"╬true╩╩",T:"prop"},color:{H:"╬'light-green lighten-3'╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_10"},O:{cType:"child",compDomClasses:"v-icon notranslate mdi mdi-circle theme--light light-green--text text--lighten-3 newDropBorder"}},{T:"QLabel",P:{ID:{H:"EdtrComp_9s",T:"prop"},class:{H:"╬''╩╩",T:"class"},text:{H:"╬()╣LR╩╠'saved'╩╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_9"},O:{cType:"child",compDomClasses:"q-label newDropBorder"}},{T:"VIcon",P:{ID:{H:"EdtrComp_6",T:"prop"},text:{H:"╬'mdi-circle'╩╩",T:"text"},small:{H:"╬true╩╩",T:"prop"},color:{H:"╬'light-blue lighten-3'╩╩",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{},_Editor:{eID:"EdtrComp_6"},O:{cType:"child",compDomClasses:"v-icon notranslate mdi mdi-circle theme--light light-blue--text text--lighten-3 newDropBorder"},S:{"xs-xl":{marginLeft:"12px"}}},{T:"QLabel",P:{ID:{H:"EdtrComp_8",T:"prop"},class:{H:"╬''╩╩",T:"class"},text:{H:"╬()╣LR╩╠'updated'╩╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_8"},O:{cType:"child",compDomClasses:"q-label newDropBorder"}},{T:"VIcon",P:{ID:{H:"EdtrComp_15s",T:"prop"},text:{H:"╬'mdi-circle'╩╩",T:"text"},small:{H:"╬true╩╩",T:"prop"},color:{H:"╬'red lighten-3'╩╩",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{},_Editor:{eID:"EdtrComp_15"},O:{cType:"child",compDomClasses:"v-icon notranslate mdi mdi-circle theme--light red--text text--lighten-3 newDropBorder"},S:{"xs-xl":{marginLeft:"12px"}}},{T:"QLabel",P:{ID:{H:"EdtrComp_17",T:"prop"},class:{H:"╬''╩╩",T:"class"},text:{H:"╬()╣LR╩╠'deleted'╩╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_17"},O:{cType:"child",compDomClasses:"q-label newDropBorder"}},{T:"VIcon",P:{ID:{H:"iconUnchanged",T:"prop"},text:{H:"╬'mdi-circle'╩╩",T:"text"},small:{H:"╬true╩╩",T:"prop"},color:{H:"╬'blue-grey lighten-4'╩╩",T:"prop"},class:{H:"╬''╩╩",T:"class"},visible:{H:"╬false╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_69"},O:{cType:"child",compDomClasses:"v-icon notranslate mdi mdi-circle theme--light blue-grey--text text--lighten-4 newDropBorder"},S:{"xs-xl":{marginLeft:"12px"}}},{T:"QLabel",P:{ID:{H:"labelUnchanged",T:"prop"},class:{H:"╬''╩╩",T:"class"},text:{H:"╬()╣LR╩╠'none'╩╩╩",T:"prop"},visible:{H:"╬false╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_112"},O:{cType:"child",compDomClasses:"q-label newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_44"},O:{cType:"slot",compDomClasses:"col newDropBorder"}},{T:"VCol",P:{ID:{H:"EdtrComp_24",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VBtn",P:{ID:{H:"showListButton",T:"prop"},regular:{H:"╬true╩╩",T:"prop"}},E:{click:{H:"Object.defineProperty(exports, \"__esModule\", { value: true });\r\ncomponents.rowDetail.visible = !components.rowDetail.visible;\r\ncomponents.lblShowList.text = quick.LR('showList');\r\nif (components.rowDetail.visible) {\r\n    quick.MM.trigger('showList');\r\n    components.lblShowList.text = quick.LR('hideList');\r\n}\r\n",P:"mouseEvent:unknown | undefined",HL:"JS"}},C:{default:{c:[{T:"QLabel",C:{},E:{},P:{ID:{H:"lblShowList",T:"prop"},text:{H:"╬()╣LR╩╠'showList'╩╩╩",T:"prop"}},_Editor:{eID:"EdtrComp_23"},O:{cType:"child",compDomClasses:"q-label newDropBorder"},S:{fontColor:"#ffffff"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_22"},O:{cType:"slot",compDomClasses:"v-btn v-btn--contained theme--light v-size--default newDropBorder"},S:{backgroundColor:"#1976d2"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_24"},O:{cType:"slot",compDomClasses:"col newDropBorder"},S:{"xs-xl":{justifyContent:"flex-end",col:"3"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_5"},O:{cType:"slot",compDomClasses:"row no-gutters align-center flex-nowrap newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_134"},S:{"xs-xl":{marginLeft:"",marginRight:"",marginBottom:"",marginTop:"",paddingTop:"12px",paddingBottom:"12px",paddingLeft:"12px",paddingRight:"12px",width:"",height:"",unlink:"false"},backgroundColor:"#ffffff",boxShadow:"",boxSizing:"",borderTopStyle:"",borderRightStyle:"",borderBottomStyle:"",borderLeftStyle:"",borderTopLeftRadius:"",borderTopRightRadius:"",borderBottomLeftRadius:"",borderBottomRightRadius:"",borderTopWidth:"",borderRightWidth:"",borderBottomWidth:"",borderLeftWidth:"",defaultBorderColor:"",sides:""},O:{cType:"slot",compDomClasses:"v-card v-sheet theme--light white newDropBorder"}}],cType:"slot"}},E:{},P:{ID:{H:"EdtrComp_132",T:"prop"}},_Editor:{eID:"EdtrComp_132"},O:{cType:"slot",compDomClasses:"col newDropBorder"},S:{"xs-xl":{col:"",flexDirection:"column",alignItems:"",justifyContent:"",marginLeft:"",marginRight:"",marginBottom:"",marginTop:"",paddingTop:"px",paddingBottom:"px",paddingLeft:"px",paddingRight:"px"},backgroundColor:"",boxShadow:"",boxSizing:"",borderTopStyle:"",borderRightStyle:"",borderBottomStyle:"",borderLeftStyle:"",borderTopLeftRadius:"",borderTopRightRadius:"",borderBottomLeftRadius:"",borderBottomRightRadius:"",borderTopWidth:"",borderRightWidth:"",borderBottomWidth:"",borderLeftWidth:"",defaultBorderColor:"",sides:""}}],cType:"slot"}},_Editor:{eID:"EdtrComp_117"},S:{"xs-xl":{marginLeft:"",marginRight:"",marginBottom:"",marginTop:"",paddingTop:"",paddingBottom:"",paddingLeft:"",paddingRight:"",width:"",height:"",unlink:"false"},backgroundColor:"",boxShadow:"",boxSizing:"",borderTopStyle:"",borderRightStyle:"",borderBottomStyle:"",borderLeftStyle:"",borderTopLeftRadius:"",borderTopRightRadius:"",borderBottomLeftRadius:"",borderBottomRightRadius:"",borderTopWidth:"",borderRightWidth:"",borderBottomWidth:"",borderLeftWidth:"",defaultBorderColor:"",sides:""},O:{cType:"slot",compDomClasses:"row no-gutters newDropBorder"}},{T:"VRow",P:{ID:{H:"rowDetail",T:"prop"},class:{H:"╬'no-gutters'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCol",C:{default:{c:[{T:"VCard",P:{ID:{H:"EdtrComp_152",T:"prop"},color:{H:"╬'white'╩╩",T:"prop"},visible:{H:"╬true╩╩",T:"prop"}},E:{},C:{default:{c:[{T:"VRow",P:{ID:{H:"EdtrComp_95",T:"prop"},class:{H:"╬'no-gutters'╩╩",T:"class"}},E:{},C:{default:{c:[{T:"VCol",C:{default:{c:[{T:"QLabel",P:{ID:{H:"EdtrComp_7",T:"prop"},text:{H:"╬()╣LR╩╠'updatedRecords'╩╩╩",T:"prop"},class:{H:"╬''╩╩",T:"class"}},E:{},C:{},_Editor:{eID:"EdtrComp_7"},O:{cType:"child",compDomClasses:"q-label newDropBorder"}},{T:"VDataTable",P:{ID:{H:"detailTable",T:"prop"},headers:{H:"╬[]╠{}╠=╣text╩╠()╣LR╩╠'dataType'╩╩╩╠=╣value╩╠'label'╩╩╩╠{}╠=╣text╩╠()╣LR╩╠'currentData'╩╩╩╠=╣value╩╠'value'╩╩╩╠{}╠=╣text╩╠()╣LR╩╠'oldData'╩╩╩╠=╣value╩╠'compareValue'╩╩╩╩╩",T:"prop"},footerProps:{H:"╬{}╠=╣showFirstLastPage╩╠true╩╩╠=╣firstIcon╩╠'mdi-arrow-collapse-left'╩╩╠=╣lastIcon╩╠'mdi-arrow-collapse-right'╩╩╠=╣prevIcon╩╠'mdi-minus'╩╩╠=╣nextIcon╩╠'mdi-plus'╩╩╠=╣itemsPerPageText╩╠()╣LR╩╠'itemsPerPage'╩╩╩╩╩",T:"prop"},itemsPerPage:{H:"╬5╩╩",T:"prop"},noDataText:{H:"╬()╣LR╩╠'noData'╩╩╩",T:"prop"},noResultText:{H:"╬()╣LR╩╠'noResult'╩╩╩",T:"prop"}},E:{},C:{"item.value":{c:[{T:"VChip",P:{ID:{H:"EdtrComp_12",T:"prop"},color:{H:"╬if╣==╣.╣item╩╠statu╩╩╠'saved'╩╩╠╬'light-green lighten-3'╩╩╠╬if╣==╣.╣item╩╠statu╩╩╠'updated'╩╩╠╬'light-blue lighten-3'╩╩╠╬if╣==╣.╣item╩╠statu╩╩╠'removed'╩╩╠╬'red lighten-3'╩╩╠╬''╩╩╩╩╩╩╩╩",T:"prop"}},E:{},C:{default:{c:[{T:"QLabel",P:{ID:{H:"EdtrComp_16",T:"prop"},text:{H:"╬if╣||╣==╣.╣item╩╠value╩╩╠undefined╩╩╠==╣.╣item╩╠value╩╩╠null╩╩╩╠╬'-'╩╩╠╬.╣item╩╠value╩╩╩╩╩",T:"prop"},class:{H:"╬'black--text'╩╩",T:"class"}},E:{},C:{},_Editor:{eID:"EdtrComp_16"},O:{compDomClasses:"q-label ",cType:"child"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_12"},O:{cType:"slot",compDomClasses:"v-chip theme--light v-size--default red lighten-3"}}],cType:"scopedSlot"}},_Editor:{eID:"EdtrComp_4"},O:{cType:"child",compDomClasses:"v-data-table v-data-table--has-bottom theme--light newDropBorder"},S:{"xs-xl":{marginTop:"16px"}}}],cType:"slot"}},E:{},P:{ID:{H:"EdtrComp_106",T:"prop"}},_Editor:{eID:"EdtrComp_106"},O:{cType:"slot",compDomClasses:"col newDropBorder"},S:{"xs-xl":{paddingTop:"px",paddingLeft:"px",paddingBottom:"px",paddingRight:"px"}}}],cType:"slot"}},_Editor:{eID:"EdtrComp_95"},O:{cType:"slot",compDomClasses:"row no-gutters newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_152"},S:{"xs-xl":{marginLeft:"",marginRight:"",marginBottom:"",marginTop:"",paddingTop:"12px",paddingBottom:"12px",paddingLeft:"12px",paddingRight:"12px",width:"",height:"",unlink:"false"},backgroundColor:"#ffffff",boxShadow:"",boxSizing:"",borderTopStyle:"",borderRightStyle:"",borderBottomStyle:"",borderLeftStyle:"",borderTopLeftRadius:"",borderTopRightRadius:"",borderBottomLeftRadius:"",borderBottomRightRadius:"",borderTopWidth:"",borderRightWidth:"",borderBottomWidth:"",borderLeftWidth:"",defaultBorderColor:"",sides:""},O:{cType:"slot",compDomClasses:"v-card v-sheet theme--light white newDropBorder"}}],cType:"slot"}},E:{},P:{ID:{H:"EdtrComp_151",T:"prop"}},_Editor:{eID:"EdtrComp_151"},O:{cType:"slot",compDomClasses:"col newDropBorder"},S:{"xs-xl":{col:"",flexDirection:"column",alignItems:"",justifyContent:"",marginLeft:"",marginRight:"",marginBottom:"",marginTop:"",paddingTop:"",paddingBottom:"",paddingLeft:"",paddingRight:""},backgroundColor:"",boxShadow:"",boxSizing:"",borderTopStyle:"",borderRightStyle:"",borderBottomStyle:"",borderLeftStyle:"",borderTopLeftRadius:"",borderTopRightRadius:"",borderBottomLeftRadius:"",borderBottomRightRadius:"",borderTopWidth:"",borderRightWidth:"",borderBottomWidth:"",borderLeftWidth:"",defaultBorderColor:"",sides:""}}],cType:"slot"}},_Editor:{eID:"EdtrComp_150"},S:{"xs-xl":{marginLeft:"",marginRight:"",marginBottom:"",marginTop:"36px",paddingTop:"",paddingBottom:"",paddingLeft:"",paddingRight:"",width:"",height:"",unlink:"false"},backgroundColor:"",boxShadow:"",boxSizing:"",borderTopStyle:"",borderRightStyle:"",borderBottomStyle:"",borderLeftStyle:"",borderTopLeftRadius:"",borderTopRightRadius:"",borderBottomLeftRadius:"",borderBottomRightRadius:"",borderTopWidth:"",borderRightWidth:"",borderBottomWidth:"",borderLeftWidth:"",defaultBorderColor:"",sides:""},O:{cType:"slot",compDomClasses:"row no-gutters newDropBorder"}}],cType:"slot"}},_Editor:{eID:"EdtrComp_52"},S:{"xs-xl":{marginLeft:"",marginRight:"",marginBottom:"",marginTop:"",paddingTop:"",paddingBottom:"",paddingLeft:"",paddingRight:"",width:"",height:"",unlink:"false"},backgroundColor:"",boxShadow:"",boxSizing:"",borderTopStyle:"",borderRightStyle:"",borderBottomStyle:"",borderLeftStyle:"",borderTopLeftRadius:"",borderTopRightRadius:"",borderBottomLeftRadius:"",borderBottomRightRadius:"",borderTopWidth:"",borderRightWidth:"",borderBottomWidth:"",borderLeftWidth:"",defaultBorderColor:"",sides:""},O:{cType:"slot",compDomClasses:"container newDropBorder"}}],lrids:{"tr-TR":{saved:"'Kaydedildi'",updated:"'Güncellendi'",deleted:"'Silindi'",showList:"'Listeyi Gör'",status:"'İşlem Statüleri:'",dataType:"'Veri Tipi'",currentData:"'Güncel Veri'",oldData:"'Eski Veri'",updatedRecords:"'Güncellenen Veriler'",hideList:"'Listeyi Gizle'",noData:"'Veri Bulunamadı'",noResult:"'Sonuç bulunamadı'",itemsPerPage:"'Sayfa Satır Sayısı'",none:"'Değişmedi'"},"en-US":{saved:"'Saved'",updated:"'Updated'",deleted:"'Deleted'",showList:"'Show List'",status:"'Process Status:'",dataType:"'Data Type'",currentData:"'Current Data'",oldData:"'Old Data'",updatedRecords:"'Updated Records'",hideList:"'Hide List'",noData:"'No Data Available'",noResult:"'No result available'",itemsPerPage:"'Rows Per Page'",none:"'Unchanged'"}},clrids:{"tr-TR":{saved:"╬'Kaydedildi'╩╩",updated:"╬'Güncellendi'╩╩",deleted:"╬'Silindi'╩╩",showList:"╬'Listeyi Gör'╩╩",status:"╬'İşlem Statüleri:'╩╩",dataType:"╬'Veri Tipi'╩╩",currentData:"╬'Güncel Veri'╩╩",oldData:"╬'Eski Veri'╩╩",updatedRecords:"╬'Güncellenen Veriler'╩╩",hideList:"╬'Listeyi Gizle'╩╩",noData:"╬'Veri Bulunamadı'╩╩",noResult:"╬'Sonuç bulunamadı'╩╩",itemsPerPage:"╬'Sayfa Satır Sayısı'╩╩",none:"╬'Değişmedi'╩╩"},"en-US":{saved:"╬'Saved'╩╩",updated:"╬'Updated'╩╩",deleted:"╬'Deleted'╩╩",showList:"╬'Show List'╩╩",status:"╬'Process Status:'╩╩",dataType:"╬'Data Type'╩╩",currentData:"╬'Current Data'╩╩",oldData:"╬'Old Data'╩╩",updatedRecords:"╬'Updated Records'╩╩",hideList:"╬'Hide List'╩╩",noData:"╬'No Data Available'╩╩",noResult:"╬'No result available'╩╩",itemsPerPage:"╬'Rows Per Page'╩╩",none:"╬'Unchanged'╩╩"}},opt:{V:1.1}},l={pJson:[{T:"Messaging",P:{ID:{H:"EdtrComp_1",T:"prop"},externalProps:{H:"['size', 'content', 'level']",T:"prop"}},E:{PostRender:{H:'quick.MM.trigger("createQRCode", [{ parentSize: quick.parent.props?.size, parentContent: quick.parent.props?.content, parentLevel: quick.parent.props?.level }]);\r\n',TO:1,HL:"TS"},createQRCode:{H:'declare var parentSize;\r\ndeclare var parentContent;\r\ndeclare var parentLevel;\r\n\r\nlet imagesize = parentSize ? Number(parentSize) : 0;\r\nlet qrString = parentContent ? String(parentContent) : \'\';\r\n\r\nnamespace qrcodegen {\r\n\r\n\ttype bit = number;\r\n\ttype byte = number;\r\n\ttype int = number;\r\n\r\n\texport class QrCode {\r\n\r\n\t\tpublic static encodeText(text: string, ecl: QrCode.Ecc): QrCode {\r\n\t\t\tconst segs: Array<QrSegment> = qrcodegen.QrSegment.makeSegments(text);\r\n\t\t\treturn QrCode.encodeSegments(segs, ecl);\r\n\t\t}\r\n\r\n\t\tpublic static encodeBinary(data: Readonly<Array<byte>>, ecl: QrCode.Ecc): QrCode {\r\n\t\t\tconst seg: QrSegment = qrcodegen.QrSegment.makeBytes(data);\r\n\t\t\treturn QrCode.encodeSegments([seg], ecl);\r\n\t\t}\r\n\r\n\t\tpublic static encodeSegments(segs: Readonly<Array<QrSegment>>, ecl: QrCode.Ecc,\r\n\t\t\tminVersion: int = 1, maxVersion: int = 40,\r\n\t\t\tmask: int = -1, boostEcl: boolean = true): QrCode {\r\n\r\n\t\t\tif (!(QrCode.MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= QrCode.MAX_VERSION)\r\n\t\t\t\t|| mask < -1 || mask > 7)\r\n\t\t\t\tthrow "Invalid value";\r\n\r\n\t\t\t// Find the minimal version number to use\r\n\t\t\tlet version: int;\r\n\t\t\tlet dataUsedBits: int;\r\n\t\t\tfor (version = minVersion; ; version++) {\r\n\t\t\t\tconst dataCapacityBits: int = QrCode.getNumDataCodewords(version, ecl) * 8;  // Number of data bits available\r\n\t\t\t\tconst usedBits: number = QrSegment.getTotalBits(segs, version);\r\n\t\t\t\tif (usedBits <= dataCapacityBits) {\r\n\t\t\t\t\tdataUsedBits = usedBits;\r\n\t\t\t\t\tbreak;  // This version number is found to be suitable\r\n\t\t\t\t}\r\n\t\t\t\tif (version >= maxVersion)  // All versions in the range could not fit the given data\r\n\t\t\t\t\tthrow "Data too long";\r\n\t\t\t}\r\n\r\n\t\t\t// Increase the error correction level while the data still fits in the current version number\r\n\t\t\tfor (const newEcl of [QrCode.Ecc.MEDIUM, QrCode.Ecc.QUARTILE, QrCode.Ecc.HIGH]) {  // From low to high\r\n\t\t\t\tif (boostEcl && dataUsedBits <= QrCode.getNumDataCodewords(version, newEcl) * 8)\r\n\t\t\t\t\tecl = newEcl;\r\n\t\t\t}\r\n\r\n\t\t\t// Concatenate all segments to create the data bit string\r\n\t\t\tlet bb: Array<bit> = []\r\n\t\t\tfor (const seg of segs) {\r\n\t\t\t\tappendBits(seg.mode.modeBits, 4, bb);\r\n\t\t\t\tappendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\r\n\t\t\t\tfor (const b of seg.getData())\r\n\t\t\t\t\tbb.push(b);\r\n\t\t\t}\r\n\t\t\tassert(bb.length == dataUsedBits);\r\n\r\n\t\t\t// Add terminator and pad up to a byte if applicable\r\n\t\t\tconst dataCapacityBits: int = QrCode.getNumDataCodewords(version, ecl) * 8;\r\n\t\t\tassert(bb.length <= dataCapacityBits);\r\n\t\t\tappendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\r\n\t\t\tappendBits(0, (8 - bb.length % 8) % 8, bb);\r\n\t\t\tassert(bb.length % 8 == 0);\r\n\r\n\t\t\t// Pad with alternating bytes until data capacity is reached\r\n\t\t\tfor (let padByte = 0xEC; bb.length < dataCapacityBits; padByte ^= 0xEC ^ 0x11)\r\n\t\t\t\tappendBits(padByte, 8, bb);\r\n\r\n\t\t\t// Pack bits into bytes in big endian\r\n\t\t\tlet dataCodewords: Array<byte> = [];\r\n\t\t\twhile (dataCodewords.length * 8 < bb.length)\r\n\t\t\t\tdataCodewords.push(0);\r\n\t\t\tbb.forEach((b: bit, i: int) =>\r\n\t\t\t\tdataCodewords[i >>> 3] |= b << (7 - (i & 7)));\r\n\r\n\t\t\t// Create the QR Code object\r\n\t\t\treturn new QrCode(version, ecl, dataCodewords, mask);\r\n\t\t}\r\n\r\n\r\n\t\t/*-- Fields --*/\r\n\r\n\t\t// The width and height of this QR Code, measured in modules, between\r\n\t\t// 21 and 177 (inclusive). This is equal to version * 4 + 17.\r\n\t\tpublic readonly size: int;\r\n\r\n\t\t// The index of the mask pattern used in this QR Code, which is between 0 and 7 (inclusive).\r\n\t\t// Even if a QR Code is created with automatic masking requested (mask = -1),\r\n\t\t// the resulting object still has a mask value between 0 and 7.\r\n\t\tpublic readonly mask: int;\r\n\r\n\t\t// The modules of this QR Code (false = light, true = dark).\r\n\t\t// Immutable after constructor finishes. Accessed through getModule().\r\n\t\tprivate readonly modules: Array<Array<boolean>> = [];\r\n\r\n\t\t// Indicates function modules that are not subjected to masking. Discarded when constructor finishes.\r\n\t\tprivate readonly isFunction: Array<Array<boolean>> = [];\r\n\r\n\r\n\t\t/*-- Constructor (low level) and fields --*/\r\n\r\n\t\t// Creates a new QR Code with the given version number,\r\n\t\t// error correction level, data codeword bytes, and mask number.\r\n\t\t// This is a low-level API that most users should not use directly.\r\n\t\t// A mid-level API is the encodeSegments() function.\r\n\t\tpublic constructor(\r\n\t\t\t// The version number of this QR Code, which is between 1 and 40 (inclusive).\r\n\t\t\t// This determines the size of this barcode.\r\n\t\t\tpublic readonly version: int,\r\n\r\n\t\t\t// The error correction level used in this QR Code.\r\n\t\t\tpublic readonly errorCorrectionLevel: QrCode.Ecc,\r\n\r\n\t\t\tdataCodewords: Readonly<Array<byte>>,\r\n\r\n\t\t\tmsk: int) {\r\n\r\n\t\t\t// Check scalar arguments\r\n\t\t\tif (version < QrCode.MIN_VERSION || version > QrCode.MAX_VERSION)\r\n\t\t\t\tthrow "Version value out of range";\r\n\t\t\tif (msk < -1 || msk > 7)\r\n\t\t\t\tthrow "Mask value out of range";\r\n\t\t\tthis.size = version * 4 + 17;\r\n\r\n\t\t\t// Initialize both grids to be size*size arrays of Boolean false\r\n\t\t\tlet row: Array<boolean> = [];\r\n\t\t\tfor (let i = 0; i < this.size; i++)\r\n\t\t\t\trow.push(false);\r\n\t\t\tfor (let i = 0; i < this.size; i++) {\r\n\t\t\t\tthis.modules.push(row.slice());  // Initially all light\r\n\t\t\t\tthis.isFunction.push(row.slice());\r\n\t\t\t}\r\n\r\n\t\t\t// Compute ECC, draw modules\r\n\t\t\tthis.drawFunctionPatterns();\r\n\t\t\tconst allCodewords: Array<byte> = this.addEccAndInterleave(dataCodewords);\r\n\t\t\tthis.drawCodewords(allCodewords);\r\n\r\n\t\t\t// Do masking\r\n\t\t\tif (msk == -1) {  // Automatically choose best mask\r\n\t\t\t\tlet minPenalty: int = 1000000000;\r\n\t\t\t\tfor (let i = 0; i < 8; i++) {\r\n\t\t\t\t\tthis.applyMask(i);\r\n\t\t\t\t\tthis.drawFormatBits(i);\r\n\t\t\t\t\tconst penalty: int = this.getPenaltyScore();\r\n\t\t\t\t\tif (penalty < minPenalty) {\r\n\t\t\t\t\t\tmsk = i;\r\n\t\t\t\t\t\tminPenalty = penalty;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.applyMask(i);  // Undoes the mask due to XOR\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tassert(0 <= msk && msk <= 7);\r\n\t\t\tthis.mask = msk;\r\n\t\t\tthis.applyMask(msk);  // Apply the final choice of mask\r\n\t\t\tthis.drawFormatBits(msk);  // Overwrite old format bits\r\n\r\n\t\t\tthis.isFunction = [];\r\n\t\t}\r\n\r\n\t\tpublic getModule(x: int, y: int): boolean {\r\n\t\t\treturn 0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x];\r\n\t\t}\r\n\r\n\t\tprivate drawFunctionPatterns(): void {\r\n\t\t\t// Draw horizontal and vertical timing patterns\r\n\t\t\tfor (let i = 0; i < this.size; i++) {\r\n\t\t\t\tthis.setFunctionModule(6, i, i % 2 == 0);\r\n\t\t\t\tthis.setFunctionModule(i, 6, i % 2 == 0);\r\n\t\t\t}\r\n\r\n\t\t\t// Draw 3 finder patterns (all corners except bottom right; overwrites some timing modules)\r\n\t\t\tthis.drawFinderPattern(3, 3);\r\n\t\t\tthis.drawFinderPattern(this.size - 4, 3);\r\n\t\t\tthis.drawFinderPattern(3, this.size - 4);\r\n\r\n\t\t\t// Draw numerous alignment patterns\r\n\t\t\tconst alignPatPos: Array<int> = this.getAlignmentPatternPositions();\r\n\t\t\tconst numAlign: int = alignPatPos.length;\r\n\t\t\tfor (let i = 0; i < numAlign; i++) {\r\n\t\t\t\tfor (let j = 0; j < numAlign; j++) {\r\n\t\t\t\t\t// Don\'t draw on the three finder corners\r\n\t\t\t\t\tif (!(i == 0 && j == 0 || i == 0 && j == numAlign - 1 || i == numAlign - 1 && j == 0))\r\n\t\t\t\t\t\tthis.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Draw configuration data\r\n\t\t\tthis.drawFormatBits(0);  // Dummy mask value; overwritten later in the constructor\r\n\t\t\tthis.drawVersion();\r\n\t\t}\r\n\r\n\r\n\t\t// Draws two copies of the format bits (with its own error correction code)\r\n\t\t// based on the given mask and this object\'s error correction level field.\r\n\t\tprivate drawFormatBits(mask: int): void {\r\n\t\t\t// Calculate error correction code and pack bits\r\n\t\t\tconst data: int = this.errorCorrectionLevel.formatBits << 3 | mask;  // errCorrLvl is uint2, mask is uint3\r\n\t\t\tlet rem: int = data;\r\n\t\t\tfor (let i = 0; i < 10; i++)\r\n\t\t\t\trem = (rem << 1) ^ ((rem >>> 9) * 0x537);\r\n\t\t\tconst bits = (data << 10 | rem) ^ 0x5412;  // uint15\r\n\t\t\tassert(bits >>> 15 == 0);\r\n\r\n\t\t\t// Draw first copy\r\n\t\t\tfor (let i = 0; i <= 5; i++)\r\n\t\t\t\tthis.setFunctionModule(8, i, getBit(bits, i));\r\n\t\t\tthis.setFunctionModule(8, 7, getBit(bits, 6));\r\n\t\t\tthis.setFunctionModule(8, 8, getBit(bits, 7));\r\n\t\t\tthis.setFunctionModule(7, 8, getBit(bits, 8));\r\n\t\t\tfor (let i = 9; i < 15; i++)\r\n\t\t\t\tthis.setFunctionModule(14 - i, 8, getBit(bits, i));\r\n\r\n\t\t\t// Draw second copy\r\n\t\t\tfor (let i = 0; i < 8; i++)\r\n\t\t\t\tthis.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));\r\n\t\t\tfor (let i = 8; i < 15; i++)\r\n\t\t\t\tthis.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));\r\n\t\t\tthis.setFunctionModule(8, this.size - 8, true);  // Always dark\r\n\t\t}\r\n\r\n\r\n\t\t// Draws two copies of the version bits (with its own error correction code),\r\n\t\t// based on this object\'s version field, iff 7 <= version <= 40.\r\n\t\tprivate drawVersion(): void {\r\n\t\t\tif (this.version < 7)\r\n\t\t\t\treturn;\r\n\r\n\t\t\t// Calculate error correction code and pack bits\r\n\t\t\tlet rem: int = this.version;  // version is uint6, in the range [7, 40]\r\n\t\t\tfor (let i = 0; i < 12; i++)\r\n\t\t\t\trem = (rem << 1) ^ ((rem >>> 11) * 0x1F25);\r\n\t\t\tconst bits: int = this.version << 12 | rem;  // uint18\r\n\t\t\tassert(bits >>> 18 == 0);\r\n\r\n\t\t\t// Draw two copies\r\n\t\t\tfor (let i = 0; i < 18; i++) {\r\n\t\t\t\tconst color: boolean = getBit(bits, i);\r\n\t\t\t\tconst a: int = this.size - 11 + i % 3;\r\n\t\t\t\tconst b: int = Math.floor(i / 3);\r\n\t\t\t\tthis.setFunctionModule(a, b, color);\r\n\t\t\t\tthis.setFunctionModule(b, a, color);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// Draws a 9*9 finder pattern including the border separator,\r\n\t\t// with the center module at (x, y). Modules can be out of bounds.\r\n\t\tprivate drawFinderPattern(x: int, y: int): void {\r\n\t\t\tfor (let dy = -4; dy <= 4; dy++) {\r\n\t\t\t\tfor (let dx = -4; dx <= 4; dx++) {\r\n\t\t\t\t\tconst dist: int = Math.max(Math.abs(dx), Math.abs(dy));  // Chebyshev/infinity norm\r\n\t\t\t\t\tconst xx: int = x + dx;\r\n\t\t\t\t\tconst yy: int = y + dy;\r\n\t\t\t\t\tif (0 <= xx && xx < this.size && 0 <= yy && yy < this.size)\r\n\t\t\t\t\t\tthis.setFunctionModule(xx, yy, dist != 2 && dist != 4);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// Draws a 5*5 alignment pattern, with the center module\r\n\t\t// at (x, y). All modules must be in bounds.\r\n\t\tprivate drawAlignmentPattern(x: int, y: int): void {\r\n\t\t\tfor (let dy = -2; dy <= 2; dy++) {\r\n\t\t\t\tfor (let dx = -2; dx <= 2; dx++)\r\n\t\t\t\t\tthis.setFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// Sets the color of a module and marks it as a function module.\r\n\t\t// Only used by the constructor. Coordinates must be in bounds.\r\n\t\tprivate setFunctionModule(x: int, y: int, isDark: boolean): void {\r\n\t\t\tthis.modules[y][x] = isDark;\r\n\t\t\tthis.isFunction[y][x] = true;\r\n\t\t}\r\n\r\n\t\tprivate addEccAndInterleave(data: Readonly<Array<byte>>): Array<byte> {\r\n\t\t\tconst ver: int = this.version;\r\n\t\t\tconst ecl: QrCode.Ecc = this.errorCorrectionLevel;\r\n\t\t\tif (data.length != QrCode.getNumDataCodewords(ver, ecl))\r\n\t\t\t\tthrow "Invalid argument";\r\n\r\n\t\t\t// Calculate parameter numbers\r\n\t\t\tconst numBlocks: int = QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\r\n\t\t\tconst blockEccLen: int = QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];\r\n\t\t\tconst rawCodewords: int = Math.floor(QrCode.getNumRawDataModules(ver) / 8);\r\n\t\t\tconst numShortBlocks: int = numBlocks - rawCodewords % numBlocks;\r\n\t\t\tconst shortBlockLen: int = Math.floor(rawCodewords / numBlocks);\r\n\r\n\t\t\t// Split data into blocks and append ECC to each block\r\n\t\t\tlet blocks: Array<Array<byte>> = [];\r\n\t\t\tconst rsDiv: Array<byte> = QrCode.reedSolomonComputeDivisor(blockEccLen);\r\n\t\t\tfor (let i = 0, k = 0; i < numBlocks; i++) {\r\n\t\t\t\tlet dat: Array<byte> = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));\r\n\t\t\t\tk += dat.length;\r\n\t\t\t\tconst ecc: Array<byte> = QrCode.reedSolomonComputeRemainder(dat, rsDiv);\r\n\t\t\t\tif (i < numShortBlocks)\r\n\t\t\t\t\tdat.push(0);\r\n\t\t\t\tblocks.push(dat.concat(ecc));\r\n\t\t\t}\r\n\r\n\t\t\t// Interleave (not concatenate) the bytes from every block into a single sequence\r\n\t\t\tlet result: Array<byte> = [];\r\n\t\t\tfor (let i = 0; i < blocks[0].length; i++) {\r\n\t\t\t\tblocks.forEach((block, j) => {\r\n\t\t\t\t\t// Skip the padding byte in short blocks\r\n\t\t\t\t\tif (i != shortBlockLen - blockEccLen || j >= numShortBlocks)\r\n\t\t\t\t\t\tresult.push(block[i]);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tassert(result.length == rawCodewords);\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\r\n\t\t// Draws the given sequence of 8-bit codewords (data and error correction) onto the entire\r\n\t\t// data area of this QR Code. Function modules need to be marked off before this is called.\r\n\t\tprivate drawCodewords(data: Readonly<Array<byte>>): void {\r\n\t\t\tif (data.length != Math.floor(QrCode.getNumRawDataModules(this.version) / 8))\r\n\t\t\t\tthrow "Invalid argument";\r\n\t\t\tlet i: int = 0;  // Bit index into the data\r\n\t\t\t// Do the funny zigzag scan\r\n\t\t\tfor (let right = this.size - 1; right >= 1; right -= 2) {  // Index of right column in each column pair\r\n\t\t\t\tif (right == 6)\r\n\t\t\t\t\tright = 5;\r\n\t\t\t\tfor (let vert = 0; vert < this.size; vert++) {  // Vertical counter\r\n\t\t\t\t\tfor (let j = 0; j < 2; j++) {\r\n\t\t\t\t\t\tconst x: int = right - j;  // Actual x coordinate\r\n\t\t\t\t\t\tconst upward: boolean = ((right + 1) & 2) == 0;\r\n\t\t\t\t\t\tconst y: int = upward ? this.size - 1 - vert : vert;  // Actual y coordinate\r\n\t\t\t\t\t\tif (!this.isFunction[y][x] && i < data.length * 8) {\r\n\t\t\t\t\t\t\tthis.modules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));\r\n\t\t\t\t\t\t\ti++;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// If this QR Code has any remainder bits (0 to 7), they were assigned as\r\n\t\t\t\t\t\t// 0/false/light by the constructor and are left unchanged by this method\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tassert(i == data.length * 8);\r\n\t\t}\r\n\r\n\t\tprivate applyMask(mask: int): void {\r\n\t\t\tif (mask < 0 || mask > 7)\r\n\t\t\t\tthrow "Mask value out of range";\r\n\t\t\tfor (let y = 0; y < this.size; y++) {\r\n\t\t\t\tfor (let x = 0; x < this.size; x++) {\r\n\t\t\t\t\tlet invert: boolean;\r\n\t\t\t\t\tswitch (mask) {\r\n\t\t\t\t\t\tcase 0: invert = (x + y) % 2 == 0; break;\r\n\t\t\t\t\t\tcase 1: invert = y % 2 == 0; break;\r\n\t\t\t\t\t\tcase 2: invert = x % 3 == 0; break;\r\n\t\t\t\t\t\tcase 3: invert = (x + y) % 3 == 0; break;\r\n\t\t\t\t\t\tcase 4: invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0; break;\r\n\t\t\t\t\t\tcase 5: invert = x * y % 2 + x * y % 3 == 0; break;\r\n\t\t\t\t\t\tcase 6: invert = (x * y % 2 + x * y % 3) % 2 == 0; break;\r\n\t\t\t\t\t\tcase 7: invert = ((x + y) % 2 + x * y % 3) % 2 == 0; break;\r\n\t\t\t\t\t\tdefault: throw "Unreachable";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!this.isFunction[y][x] && invert)\r\n\t\t\t\t\t\tthis.modules[y][x] = !this.modules[y][x];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\t// Calculates and returns the penalty score based on state of this QR Code\'s current modules.\r\n\t\t// This is used by the automatic mask choice algorithm to find the mask pattern that yields the lowest score.\r\n\t\tprivate getPenaltyScore(): int {\r\n\t\t\tlet result: int = 0;\r\n\r\n\t\t\t// Adjacent modules in row having same color, and finder-like patterns\r\n\t\t\tfor (let y = 0; y < this.size; y++) {\r\n\t\t\t\tlet runColor = false;\r\n\t\t\t\tlet runX = 0;\r\n\t\t\t\tlet runHistory = [0, 0, 0, 0, 0, 0, 0];\r\n\t\t\t\tfor (let x = 0; x < this.size; x++) {\r\n\t\t\t\t\tif (this.modules[y][x] == runColor) {\r\n\t\t\t\t\t\trunX++;\r\n\t\t\t\t\t\tif (runX == 5)\r\n\t\t\t\t\t\t\tresult += QrCode.PENALTY_N1;\r\n\t\t\t\t\t\telse if (runX > 5)\r\n\t\t\t\t\t\t\tresult++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.finderPenaltyAddHistory(runX, runHistory);\r\n\t\t\t\t\t\tif (!runColor)\r\n\t\t\t\t\t\t\tresult += this.finderPenaltyCountPatterns(runHistory) * QrCode.PENALTY_N3;\r\n\t\t\t\t\t\trunColor = this.modules[y][x];\r\n\t\t\t\t\t\trunX = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tresult += this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) * QrCode.PENALTY_N3;\r\n\t\t\t}\r\n\t\t\t// Adjacent modules in column having same color, and finder-like patterns\r\n\t\t\tfor (let x = 0; x < this.size; x++) {\r\n\t\t\t\tlet runColor = false;\r\n\t\t\t\tlet runY = 0;\r\n\t\t\t\tlet runHistory = [0, 0, 0, 0, 0, 0, 0];\r\n\t\t\t\tfor (let y = 0; y < this.size; y++) {\r\n\t\t\t\t\tif (this.modules[y][x] == runColor) {\r\n\t\t\t\t\t\trunY++;\r\n\t\t\t\t\t\tif (runY == 5)\r\n\t\t\t\t\t\t\tresult += QrCode.PENALTY_N1;\r\n\t\t\t\t\t\telse if (runY > 5)\r\n\t\t\t\t\t\t\tresult++;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.finderPenaltyAddHistory(runY, runHistory);\r\n\t\t\t\t\t\tif (!runColor)\r\n\t\t\t\t\t\t\tresult += this.finderPenaltyCountPatterns(runHistory) * QrCode.PENALTY_N3;\r\n\t\t\t\t\t\trunColor = this.modules[y][x];\r\n\t\t\t\t\t\trunY = 1;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tresult += this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) * QrCode.PENALTY_N3;\r\n\t\t\t}\r\n\r\n\t\t\t// 2*2 blocks of modules having same color\r\n\t\t\tfor (let y = 0; y < this.size - 1; y++) {\r\n\t\t\t\tfor (let x = 0; x < this.size - 1; x++) {\r\n\t\t\t\t\tconst color: boolean = this.modules[y][x];\r\n\t\t\t\t\tif (color == this.modules[y][x + 1] &&\r\n\t\t\t\t\t\tcolor == this.modules[y + 1][x] &&\r\n\t\t\t\t\t\tcolor == this.modules[y + 1][x + 1])\r\n\t\t\t\t\t\tresult += QrCode.PENALTY_N2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Balance of dark and light modules\r\n\t\t\tlet dark: int = 0;\r\n\t\t\tfor (const row of this.modules)\r\n\t\t\t\tdark = row.reduce((sum, color) => sum + (color ? 1 : 0), dark);\r\n\t\t\tconst total: int = this.size * this.size;  // Note that size is odd, so dark/total != 1/2\r\n\t\t\t// Compute the smallest integer k >= 0 such that (45-5k)% <= dark/total <= (55+5k)%\r\n\t\t\tconst k: int = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\r\n\t\t\tassert(0 <= k && k <= 9);\r\n\t\t\tresult += k * QrCode.PENALTY_N4;\r\n\t\t\tassert(0 <= result && result <= 2568888);  // Non-tight upper bound based on default values of PENALTY_N1, ..., N4\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tprivate getAlignmentPatternPositions(): Array<int> {\r\n\t\t\tif (this.version == 1)\r\n\t\t\t\treturn [];\r\n\t\t\telse {\r\n\t\t\t\tconst numAlign: int = Math.floor(this.version / 7) + 2;\r\n\t\t\t\tconst step: int = (this.version == 32) ? 26 :\r\n\t\t\t\t\tMath.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\r\n\t\t\t\tlet result: Array<int> = [6];\r\n\t\t\t\tfor (let pos = this.size - 7; result.length < numAlign; pos -= step)\r\n\t\t\t\t\tresult.splice(1, 0, pos);\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprivate static getNumRawDataModules(ver: int): int {\r\n\t\t\tif (ver < QrCode.MIN_VERSION || ver > QrCode.MAX_VERSION)\r\n\t\t\t\tthrow "Version number out of range";\r\n\t\t\tlet result: int = (16 * ver + 128) * ver + 64;\r\n\t\t\tif (ver >= 2) {\r\n\t\t\t\tconst numAlign: int = Math.floor(ver / 7) + 2;\r\n\t\t\t\tresult -= (25 * numAlign - 10) * numAlign - 55;\r\n\t\t\t\tif (ver >= 7)\r\n\t\t\t\t\tresult -= 36;\r\n\t\t\t}\r\n\t\t\tassert(208 <= result && result <= 29648);\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tprivate static getNumDataCodewords(ver: int, ecl: QrCode.Ecc): int {\r\n\t\t\treturn Math.floor(QrCode.getNumRawDataModules(ver) / 8) -\r\n\t\t\t\tQrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] *\r\n\t\t\t\tQrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\r\n\t\t}\r\n\r\n\r\n\t\t// Returns a Reed-Solomon ECC generator polynomial for the given degree. This could be\r\n\t\t// implemented as a lookup table over all possible parameter values, instead of as an algorithm.\r\n\t\tprivate static reedSolomonComputeDivisor(degree: int): Array<byte> {\r\n\t\t\tif (degree < 1 || degree > 255)\r\n\t\t\t\tthrow "Degree out of range";\r\n\t\t\t// Polynomial coefficients are stored from highest to lowest power, excluding the leading term which is always 1.\r\n\t\t\t// For example the polynomial x^3 + 255x^2 + 8x + 93 is stored as the uint8 array [255, 8, 93].\r\n\t\t\tlet result: Array<byte> = [];\r\n\t\t\tfor (let i = 0; i < degree - 1; i++)\r\n\t\t\t\tresult.push(0);\r\n\t\t\tresult.push(1);  // Start off with the monomial x^0\r\n\r\n\t\t\tlet root = 1;\r\n\t\t\tfor (let i = 0; i < degree; i++) {\r\n\t\t\t\t// Multiply the current product by (x - r^i)\r\n\t\t\t\tfor (let j = 0; j < result.length; j++) {\r\n\t\t\t\t\tresult[j] = QrCode.reedSolomonMultiply(result[j], root);\r\n\t\t\t\t\tif (j + 1 < result.length)\r\n\t\t\t\t\t\tresult[j] ^= result[j + 1];\r\n\t\t\t\t}\r\n\t\t\t\troot = QrCode.reedSolomonMultiply(root, 0x02);\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\r\n\t\t// Returns the Reed-Solomon error correction codeword for the given data and divisor polynomials.\r\n\t\tprivate static reedSolomonComputeRemainder(data: Readonly<Array<byte>>, divisor: Readonly<Array<byte>>): Array<byte> {\r\n\t\t\tlet result: Array<byte> = divisor.map(_ => 0);\r\n\t\t\tfor (const b of data) {  // Polynomial division\r\n\t\t\t\tconst factor: byte = b ^ (result.shift() as byte);\r\n\t\t\t\tresult.push(0);\r\n\t\t\t\tdivisor.forEach((coef, i) =>\r\n\t\t\t\t\tresult[i] ^= QrCode.reedSolomonMultiply(coef, factor));\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tprivate static reedSolomonMultiply(x: byte, y: byte): byte {\r\n\t\t\tif (x >>> 8 != 0 || y >>> 8 != 0)\r\n\t\t\t\tthrow "Byte out of range";\r\n\t\t\t// Russian peasant multiplication\r\n\t\t\tlet z: int = 0;\r\n\t\t\tfor (let i = 7; i >= 0; i--) {\r\n\t\t\t\tz = (z << 1) ^ ((z >>> 7) * 0x11D);\r\n\t\t\t\tz ^= ((y >>> i) & 1) * x;\r\n\t\t\t}\r\n\t\t\tassert(z >>> 8 == 0);\r\n\t\t\treturn z as byte;\r\n\t\t}\r\n\r\n\t\tprivate finderPenaltyCountPatterns(runHistory: Readonly<Array<int>>): int {\r\n\t\t\tconst n: int = runHistory[1];\r\n\t\t\tassert(n <= this.size * 3);\r\n\t\t\tconst core: boolean = n > 0 && runHistory[2] == n && runHistory[3] == n * 3 && runHistory[4] == n && runHistory[5] == n;\r\n\t\t\treturn (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0)\r\n\t\t\t\t+ (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0);\r\n\t\t}\r\n\r\n\r\n\t\t// Must be called at the end of a line (row or column) of modules. A helper function for getPenaltyScore().\r\n\t\tprivate finderPenaltyTerminateAndCount(currentRunColor: boolean, currentRunLength: int, runHistory: Array<int>): int {\r\n\t\t\tif (currentRunColor) {  // Terminate dark run\r\n\t\t\t\tthis.finderPenaltyAddHistory(currentRunLength, runHistory);\r\n\t\t\t\tcurrentRunLength = 0;\r\n\t\t\t}\r\n\t\t\tcurrentRunLength += this.size;  // Add light border to final run\r\n\t\t\tthis.finderPenaltyAddHistory(currentRunLength, runHistory);\r\n\t\t\treturn this.finderPenaltyCountPatterns(runHistory);\r\n\t\t}\r\n\r\n\r\n\t\t// Pushes the given value to the front and drops the last value. A helper function for getPenaltyScore().\r\n\t\tprivate finderPenaltyAddHistory(currentRunLength: int, runHistory: Array<int>): void {\r\n\t\t\tif (runHistory[0] == 0)\r\n\t\t\t\tcurrentRunLength += this.size;  // Add light border to initial run\r\n\t\t\trunHistory.pop();\r\n\t\t\trunHistory.unshift(currentRunLength);\r\n\t\t}\r\n\r\n\r\n\t\t/*-- Constants and tables --*/\r\n\r\n\t\t// The minimum version number supported in the QR Code Model 2 standard.\r\n\t\tpublic static readonly MIN_VERSION: int = 1;\r\n\t\t// The maximum version number supported in the QR Code Model 2 standard.\r\n\t\tpublic static readonly MAX_VERSION: int = 40;\r\n\r\n\t\t// For use in getPenaltyScore(), when evaluating which mask is best.\r\n\t\tprivate static readonly PENALTY_N1: int = 3;\r\n\t\tprivate static readonly PENALTY_N2: int = 3;\r\n\t\tprivate static readonly PENALTY_N3: int = 40;\r\n\t\tprivate static readonly PENALTY_N4: int = 10;\r\n\r\n\t\tprivate static readonly ECC_CODEWORDS_PER_BLOCK: Array<Array<int>> = [\r\n\t\t\t// Version: (note that index 0 is for padding, and is set to an illegal value)\r\n\t\t\t//0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40    Error correction level\r\n\t\t\t[-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],  // Low\r\n\t\t\t[-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28],  // Medium\r\n\t\t\t[-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],  // Quartile\r\n\t\t\t[-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],  // High\r\n\t\t];\r\n\r\n\t\tprivate static readonly NUM_ERROR_CORRECTION_BLOCKS: Array<Array<int>> = [\r\n\t\t\t// Version: (note that index 0 is for padding, and is set to an illegal value)\r\n\t\t\t//0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40    Error correction level\r\n\t\t\t[-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25],  // Low\r\n\t\t\t[-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49],  // Medium\r\n\t\t\t[-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68],  // Quartile\r\n\t\t\t[-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81],  // High\r\n\t\t];\r\n\r\n\t}\r\n\r\n\tfunction appendBits(val: int, len: int, bb: Array<bit>): void {\r\n\t\tif (len < 0 || len > 31 || val >>> len != 0)\r\n\t\t\tthrow "Value out of range";\r\n\t\tfor (let i = len - 1; i >= 0; i--)  // Append bit by bit\r\n\t\t\tbb.push((val >>> i) & 1);\r\n\t}\r\n\r\n\r\n\t// Returns true iff the i\'th bit of x is set to 1.\r\n\tfunction getBit(x: int, i: int): boolean {\r\n\t\treturn ((x >>> i) & 1) != 0;\r\n\t}\r\n\r\n\r\n\t// Throws an exception if the given condition is false.\r\n\tfunction assert(cond: boolean): void {\r\n\t\tif (!cond)\r\n\t\t\tthrow "Assertion error";\r\n\t}\r\n\r\n\texport class QrSegment {\r\n\r\n\t\tpublic static makeBytes(data: Readonly<Array<byte>>): QrSegment {\r\n\t\t\tlet bb: Array<bit> = []\r\n\t\t\tfor (const b of data)\r\n\t\t\t\tappendBits(b, 8, bb);\r\n\t\t\treturn new QrSegment(QrSegment.Mode.BYTE, data.length, bb);\r\n\t\t}\r\n\r\n\r\n\t\t// Returns a segment representing the given string of decimal digits encoded in numeric mode.\r\n\t\tpublic static makeNumeric(digits: string): QrSegment {\r\n\t\t\tif (!QrSegment.isNumeric(digits))\r\n\t\t\t\tthrow "String contains non-numeric characters";\r\n\t\t\tlet bb: Array<bit> = []\r\n\t\t\tfor (let i = 0; i < digits.length;) {  // Consume up to 3 digits per iteration\r\n\t\t\t\tconst n: int = Math.min(digits.length - i, 3);\r\n\t\t\t\tappendBits(parseInt(digits.substr(i, n), 10), n * 3 + 1, bb);\r\n\t\t\t\ti += n;\r\n\t\t\t}\r\n\t\t\treturn new QrSegment(QrSegment.Mode.NUMERIC, digits.length, bb);\r\n\t\t}\r\n\r\n\t\tpublic static makeAlphanumeric(text: string): QrSegment {\r\n\t\t\tif (!QrSegment.isAlphanumeric(text))\r\n\t\t\t\tthrow "String contains unencodable characters in alphanumeric mode";\r\n\t\t\tlet bb: Array<bit> = []\r\n\t\t\tlet i: int;\r\n\t\t\tfor (i = 0; i + 2 <= text.length; i += 2) {  // Process groups of 2\r\n\t\t\t\tlet temp: int = QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\r\n\t\t\t\ttemp += QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\r\n\t\t\t\tappendBits(temp, 11, bb);\r\n\t\t\t}\r\n\t\t\tif (i < text.length)  // 1 character remaining\r\n\t\t\t\tappendBits(QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6, bb);\r\n\t\t\treturn new QrSegment(QrSegment.Mode.ALPHANUMERIC, text.length, bb);\r\n\t\t}\r\n\r\n\r\n\t\t// Returns a new mutable list of zero or more segments to represent the given Unicode text string.\r\n\t\t// The result may use various segment modes and switch modes to optimize the length of the bit stream.\r\n\t\tpublic static makeSegments(text: string): Array<QrSegment> {\r\n\t\t\t// Select the most efficient segment encoding automatically\r\n\t\t\tif (text == "")\r\n\t\t\t\treturn [];\r\n\t\t\telse if (QrSegment.isNumeric(text))\r\n\t\t\t\treturn [QrSegment.makeNumeric(text)];\r\n\t\t\telse if (QrSegment.isAlphanumeric(text))\r\n\t\t\t\treturn [QrSegment.makeAlphanumeric(text)];\r\n\t\t\telse\r\n\t\t\t\treturn [QrSegment.makeBytes(QrSegment.toUtf8ByteArray(text))];\r\n\t\t}\r\n\r\n\r\n\t\t// Returns a segment representing an Extended Channel Interpretation\r\n\t\t// (ECI) designator with the given assignment value.\r\n\t\tpublic static makeEci(assignVal: int): QrSegment {\r\n\t\t\tlet bb: Array<bit> = []\r\n\t\t\tif (assignVal < 0)\r\n\t\t\t\tthrow "ECI assignment value out of range";\r\n\t\t\telse if (assignVal < (1 << 7))\r\n\t\t\t\tappendBits(assignVal, 8, bb);\r\n\t\t\telse if (assignVal < (1 << 14)) {\r\n\t\t\t\tappendBits(0b10, 2, bb);\r\n\t\t\t\tappendBits(assignVal, 14, bb);\r\n\t\t\t} else if (assignVal < 1000000) {\r\n\t\t\t\tappendBits(0b110, 3, bb);\r\n\t\t\t\tappendBits(assignVal, 21, bb);\r\n\t\t\t} else\r\n\t\t\t\tthrow "ECI assignment value out of range";\r\n\t\t\treturn new QrSegment(QrSegment.Mode.ECI, 0, bb);\r\n\t\t}\r\n\r\n\r\n\t\t// Tests whether the given string can be encoded as a segment in numeric mode.\r\n\t\t// A string is encodable iff each character is in the range 0 to 9.\r\n\t\tpublic static isNumeric(text: string): boolean {\r\n\t\t\treturn QrSegment.NUMERIC_REGEX.test(text);\r\n\t\t}\r\n\r\n\t\tpublic static isAlphanumeric(text: string): boolean {\r\n\t\t\treturn QrSegment.ALPHANUMERIC_REGEX.test(text);\r\n\t\t}\r\n\r\n\t\tpublic constructor(\r\n\t\t\t// The mode indicator of this segment.\r\n\t\t\tpublic readonly mode: QrSegment.Mode,\r\n\r\n\t\t\tpublic readonly numChars: int,\r\n\r\n\t\t\t// The data bits of this segment. Accessed through getData().\r\n\t\t\tprivate readonly bitData: Array<bit>) {\r\n\r\n\t\t\tif (numChars < 0)\r\n\t\t\t\tthrow "Invalid argument";\r\n\t\t\tthis.bitData = bitData.slice();  // Make defensive copy\r\n\t\t}\r\n\r\n\r\n\t\t/*-- Methods --*/\r\n\r\n\t\t// Returns a new copy of the data bits of this segment.\r\n\t\tpublic getData(): Array<bit> {\r\n\t\t\treturn this.bitData.slice();  // Make defensive copy\r\n\t\t}\r\n\r\n\r\n\t\t// (Package-private) Calculates and returns the number of bits needed to encode the given segments at\r\n\t\t// the given version. The result is infinity if a segment has too many characters to fit its length field.\r\n\t\tpublic static getTotalBits(segs: Readonly<Array<QrSegment>>, version: int): number {\r\n\t\t\tlet result: number = 0;\r\n\t\t\tfor (const seg of segs) {\r\n\t\t\t\tconst ccbits: int = seg.mode.numCharCountBits(version);\r\n\t\t\t\tif (seg.numChars >= (1 << ccbits))\r\n\t\t\t\t\treturn Infinity;  // The segment\'s length doesn\'t fit the field\'s bit width\r\n\t\t\t\tresult += 4 + ccbits + seg.bitData.length;\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\r\n\t\t// Returns a new array of bytes representing the given string encoded in UTF-8.\r\n\t\tprivate static toUtf8ByteArray(str: string): Array<byte> {\r\n\t\t\tstr = encodeURI(str);\r\n\t\t\tlet result: Array<byte> = [];\r\n\t\t\tfor (let i = 0; i < str.length; i++) {\r\n\t\t\t\tif (str.charAt(i) != "%")\r\n\t\t\t\t\tresult.push(str.charCodeAt(i));\r\n\t\t\t\telse {\r\n\t\t\t\t\tresult.push(parseInt(str.substr(i + 1, 2), 16));\r\n\t\t\t\t\ti += 2;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\r\n\t\t/*-- Constants --*/\r\n\r\n\t\t// Describes precisely all strings that are encodable in numeric mode.\r\n\t\tprivate static readonly NUMERIC_REGEX: RegExp = /^[0-9]*$/;\r\n\r\n\t\t// Describes precisely all strings that are encodable in alphanumeric mode.\r\n\t\tprivate static readonly ALPHANUMERIC_REGEX: RegExp = /^[A-Z0-9 $%*+.\\/:-]*$/;\r\n\r\n\t\t// The set of all legal characters in alphanumeric mode,\r\n\t\t// where each character value maps to the index in the string.\r\n\t\tprivate static readonly ALPHANUMERIC_CHARSET: string = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:";\r\n\r\n\t}\r\n\r\n}\r\n\r\nnamespace qrcodegen.QrCode {\r\n\r\n\ttype int = number;\r\n\r\n\texport class Ecc {\r\n\r\n\t\tpublic static readonly LOW = new Ecc(0, 1);  // The QR Code can tolerate about  7% erroneous codewords\r\n\t\tpublic static readonly MEDIUM = new Ecc(1, 0);  // The QR Code can tolerate about 15% erroneous codewords\r\n\t\tpublic static readonly QUARTILE = new Ecc(2, 3);  // The QR Code can tolerate about 25% erroneous codewords\r\n\t\tpublic static readonly HIGH = new Ecc(3, 2);  // The QR Code can tolerate about 30% erroneous codewords\r\n\r\n\t\tprivate constructor(\r\n\t\t\t// In the range 0 to 3 (unsigned 2-bit integer).\r\n\t\t\tpublic readonly ordinal: int,\r\n\t\t\t// (Package-private) In the range 0 to 3 (unsigned 2-bit integer).\r\n\t\t\tpublic readonly formatBits: int) { }\r\n\r\n\t}\r\n}\r\n\r\nnamespace qrcodegen.QrSegment {\r\n\r\n\ttype int = number;\r\n\r\n\texport class Mode {\r\n\r\n\t\tpublic static readonly NUMERIC = new Mode(0x1, [10, 12, 14]);\r\n\t\tpublic static readonly ALPHANUMERIC = new Mode(0x2, [9, 11, 13]);\r\n\t\tpublic static readonly BYTE = new Mode(0x4, [8, 16, 16]);\r\n\t\tpublic static readonly KANJI = new Mode(0x8, [8, 10, 12]);\r\n\t\tpublic static readonly ECI = new Mode(0x7, [0, 0, 0]);\r\n\r\n\t\tprivate constructor(\r\n\t\t\t// The mode indicator bits, which is a uint4 value (range 0 to 15).\r\n\t\t\tpublic readonly modeBits: int,\r\n\t\t\t// Number of character count bits for three different version ranges.\r\n\t\t\tprivate readonly numBitsCharCount: [int, int, int]) { }\r\n\r\n\r\n\t\tpublic numCharCountBits(ver: int): int {\r\n\t\t\treturn this.numBitsCharCount[Math.floor((ver + 7) / 17)];\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\n\r\nfunction write(buffer, offs, a1 = undefined, a2 = undefined, a3 = undefined, a4 = undefined, a5 = undefined) {\r\n\tlet args = [];\r\n\targs.push(buffer);\r\n\targs.push(offs);\r\n\tif (a1)\r\n\t\targs.push(a1);\r\n\tif (a2)\r\n\t\targs.push(a2);\r\n\tif (a3)\r\n\t\targs.push(a3);\r\n\tif (a4)\r\n\t\targs.push(a4);\r\n\tif (a5)\r\n\t\targs.push(a5);\r\n\tfor (var i = 2; i < args.length; i++) {\r\n\t\tfor (var j = 0; j < args[i].length; j++) {\r\n\t\t\tbuffer[offs++] = args[i].charAt(j);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction byte2(w) {\r\n\treturn String.fromCharCode((w >> 8) & 255, w & 255);\r\n}\r\n\r\nfunction byte4(w) {\r\n\treturn String.fromCharCode((w >> 24) & 255, (w >> 16) & 255, (w >> 8) & 255, w & 255);\r\n}\r\n\r\nfunction byte2lsb(w) {\r\n\treturn String.fromCharCode(w & 255, (w >> 8) & 255);\r\n}\r\n\r\nlet PNGlib = function (width, height, depth) {\r\n\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\tthis.depth = depth;\r\n\r\n\t// pixel data and row filter identifier size\r\n\tthis.pix_size = height * (width + 1);\r\n\r\n\t// deflate header, pix_size, block headers, adler32 checksum\r\n\tthis.data_size = 2 + this.pix_size + 5 * Math.floor((0xfffe + this.pix_size) / 0xffff) + 4;\r\n\r\n\t// offsets and sizes of Png chunks\r\n\tthis.ihdr_offs = 0;\t\t\t\t\t\t\t\t\t// IHDR offset and size\r\n\tthis.ihdr_size = 4 + 4 + 13 + 4;\r\n\tthis.plte_offs = this.ihdr_offs + this.ihdr_size;\t// PLTE offset and size\r\n\tthis.plte_size = 4 + 4 + 3 * depth + 4;\r\n\tthis.trns_offs = this.plte_offs + this.plte_size;\t// tRNS offset and size\r\n\tthis.trns_size = 4 + 4 + depth + 4;\r\n\tthis.idat_offs = this.trns_offs + this.trns_size;\t// IDAT offset and size\r\n\tthis.idat_size = 4 + 4 + this.data_size + 4;\r\n\tthis.iend_offs = this.idat_offs + this.idat_size;\t// IEND offset and size\r\n\tthis.iend_size = 4 + 4 + 4;\r\n\tthis.buffer_size = this.iend_offs + this.iend_size;\t// total PNG size\r\n\r\n\tthis.buffer = new Array();\r\n\tthis.palette = new Object();\r\n\tthis.pindex = 0;\r\n\r\n\tvar _crc32 = new Array();\r\n\r\n\t// initialize buffer with zero bytes\r\n\tfor (var i = 0; i < this.buffer_size; i++) {\r\n\t\tthis.buffer[i] = "\\x00";\r\n\t}\r\n\r\n\t// initialize non-zero elements\r\n\twrite(this.buffer, this.ihdr_offs, byte4(this.ihdr_size - 12), \'IHDR\', byte4(width), byte4(height), "\\x08\\x03");\r\n\twrite(this.buffer, this.plte_offs, byte4(this.plte_size - 12), \'PLTE\');\r\n\twrite(this.buffer, this.trns_offs, byte4(this.trns_size - 12), \'tRNS\');\r\n\twrite(this.buffer, this.idat_offs, byte4(this.idat_size - 12), \'IDAT\');\r\n\twrite(this.buffer, this.iend_offs, byte4(this.iend_size - 12), \'IEND\');\r\n\r\n\t// initialize deflate header\r\n\tvar header = ((8 + (7 << 4)) << 8) | (3 << 6);\r\n\theader += 31 - (header % 31);\r\n\r\n\twrite(this.buffer, this.idat_offs + 8, byte2(header));\r\n\r\n\t// initialize deflate block headers\r\n\tfor (var i = 0; (i << 16) - 1 < this.pix_size; i++) {\r\n\t\tvar size, bits;\r\n\t\tif (i + 0xffff < this.pix_size) {\r\n\t\t\tsize = 0xffff;\r\n\t\t\tbits = "\\x00";\r\n\t\t} else {\r\n\t\t\tsize = this.pix_size - (i << 16) - i;\r\n\t\t\tbits = "\\x01";\r\n\t\t}\r\n\t\twrite(this.buffer, this.idat_offs + 8 + 2 + (i << 16) + (i << 2), bits, byte2lsb(size), byte2lsb(~size));\r\n\t}\r\n\r\n\t/* Create crc32 lookup table */\r\n\tfor (var i = 0; i < 256; i++) {\r\n\t\tvar c = i;\r\n\t\tfor (var j = 0; j < 8; j++) {\r\n\t\t\tif (c & 1) {\r\n\t\t\t\tc = -306674912 ^ ((c >> 1) & 0x7fffffff);\r\n\t\t\t} else {\r\n\t\t\t\tc = (c >> 1) & 0x7fffffff;\r\n\t\t\t}\r\n\t\t}\r\n\t\t_crc32[i] = c;\r\n\t}\r\n\r\n\t// compute the index into a png for a given pixel\r\n\tthis.index = function (x, y) {\r\n\t\tvar i = y * (this.width + 1) + x + 1;\r\n\t\tvar j = this.idat_offs + 8 + 2 + 5 * Math.floor((i / 0xffff) + 1) + i;\r\n\t\treturn j;\r\n\t}\r\n\r\n\t// convert a color and build up the palette\r\n\tthis.color = function (red, green, blue, alpha) {\r\n\r\n\t\talpha = alpha >= 0 ? alpha : 255;\r\n\t\tvar color = (((((alpha << 8) | red) << 8) | green) << 8) | blue;\r\n\r\n\t\tif (typeof this.palette[color] == "undefined") {\r\n\t\t\tif (this.pindex == this.depth) return "\\x00";\r\n\r\n\t\t\tvar ndx = this.plte_offs + 8 + 3 * this.pindex;\r\n\r\n\t\t\tthis.buffer[ndx + 0] = String.fromCharCode(red);\r\n\t\t\tthis.buffer[ndx + 1] = String.fromCharCode(green);\r\n\t\t\tthis.buffer[ndx + 2] = String.fromCharCode(blue);\r\n\t\t\tthis.buffer[this.trns_offs + 8 + this.pindex] = String.fromCharCode(alpha);\r\n\r\n\t\t\tthis.palette[color] = String.fromCharCode(this.pindex++);\r\n\t\t}\r\n\t\treturn this.palette[color];\r\n\t}\r\n\r\n\t// output a PNG string, Base64 encoded\r\n\tthis.getBase64 = function () {\r\n\r\n\t\tvar s = this.getDump();\r\n\r\n\t\tvar ch = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";\r\n\t\tvar c1, c2, c3, e1, e2, e3, e4;\r\n\t\tvar l = s.length;\r\n\t\tvar i = 0;\r\n\t\tvar r = "";\r\n\r\n\t\tdo {\r\n\t\t\tc1 = s.charCodeAt(i);\r\n\t\t\te1 = c1 >> 2;\r\n\t\t\tc2 = s.charCodeAt(i + 1);\r\n\t\t\te2 = ((c1 & 3) << 4) | (c2 >> 4);\r\n\t\t\tc3 = s.charCodeAt(i + 2);\r\n\t\t\tif (l < i + 2) { e3 = 64; } else { e3 = ((c2 & 0xf) << 2) | (c3 >> 6); }\r\n\t\t\tif (l < i + 3) { e4 = 64; } else { e4 = c3 & 0x3f; }\r\n\t\t\tr += ch.charAt(e1) + ch.charAt(e2) + ch.charAt(e3) + ch.charAt(e4);\r\n\t\t} while ((i += 3) < l);\r\n\t\treturn r;\r\n\t}\r\n\r\n\t// output a PNG string\r\n\tthis.getDump = function () {\r\n\r\n\t\t// compute adler32 of output pixels + row filter bytes\r\n\t\tvar BASE = 65521; /* largest prime smaller than 65536 */\r\n\t\tvar NMAX = 5552;  /* NMAX is the largest n such that 255n(n+1)/2 + (n+1)(BASE-1) <= 2^32-1 */\r\n\t\tvar s1 = 1;\r\n\t\tvar s2 = 0;\r\n\t\tvar n = NMAX;\r\n\r\n\t\tfor (var y = 0; y < this.height; y++) {\r\n\t\t\tfor (var x = -1; x < this.width; x++) {\r\n\t\t\t\ts1 += this.buffer[this.index(x, y)].charCodeAt(0);\r\n\t\t\t\ts2 += s1;\r\n\t\t\t\tif ((n -= 1) == 0) {\r\n\t\t\t\t\ts1 %= BASE;\r\n\t\t\t\t\ts2 %= BASE;\r\n\t\t\t\t\tn = NMAX;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\ts1 %= BASE;\r\n\t\ts2 %= BASE;\r\n\t\twrite(this.buffer, this.idat_offs + this.idat_size - 8, byte4((s2 << 16) | s1));\r\n\r\n\t\t// compute crc32 of the PNG chunks\r\n\t\tfunction crc32(png, offs, size) {\r\n\t\t\tvar crc = -1;\r\n\t\t\tfor (var i = 4; i < size - 4; i += 1) {\r\n\t\t\t\tcrc = _crc32[(crc ^ png[offs + i].charCodeAt(0)) & 0xff] ^ ((crc >> 8) & 0x00ffffff);\r\n\t\t\t}\r\n\t\t\twrite(png, offs + size - 4, byte4(crc ^ -1));\r\n\t\t}\r\n\r\n\t\tcrc32(this.buffer, this.ihdr_offs, this.ihdr_size);\r\n\t\tcrc32(this.buffer, this.plte_offs, this.plte_size);\r\n\t\tcrc32(this.buffer, this.trns_offs, this.trns_size);\r\n\t\tcrc32(this.buffer, this.idat_offs, this.idat_size);\r\n\t\tcrc32(this.buffer, this.iend_offs, this.iend_size);\r\n\r\n\t\t// convert PNG to string\r\n\t\treturn "\\211PNG\\r\\n\\032\\n" + this.buffer.join(\'\');\r\n\t}\r\n}\r\nconst ecl = parentLevel ? qrcodegen.QrCode.Ecc[parentLevel] : qrcodegen.QrCode.Ecc.LOW;\r\nconst text: string = qrString;\r\nconst segs: Array<qrcodegen.QrSegment> = qrcodegen.QrSegment.makeSegments(text);\r\n\r\nconst qr: qrcodegen.QrCode = qrcodegen.QrCode.encodeSegments(segs, ecl);\r\n\r\ncomponents.EdtrComp_2.width = qr.size * imagesize;\r\ncomponents.EdtrComp_2.height = qr.size * imagesize;\r\nvar p = new PNGlib(qr.size * imagesize, qr.size * imagesize, 256);\r\nfor (var x = 0; x < qr.size * imagesize; x++) {\r\n\tfor (var y = 0; y < qr.size * imagesize; y++) {\r\n\t\tp.buffer[p.index(Math.floor(x), Math.floor(y))] = qr.getModule(Math.floor(x / imagesize), Math.floor(y / imagesize)) ? p.color(0xff, 0xff, 0xff, 0xff) : p.color(0, 0, 0, 0xff);\r\n\t}\r\n}\r\ncomponents.EdtrComp_2.src = "data:image/png;base64," + p.getBase64() + "";',C:!0,HL:"TS"},setProps:{H:'\r\ndeclare var size;\r\ndeclare var content;\r\ndeclare var level;\r\n\r\nlet parentSize;\r\nlet parentContent;\r\nlet parentLevel;\r\n\r\ntry {\r\n    parentSize = size;\r\n}\r\ncatch (ex) { }\r\n\r\ntry {\r\n    parentContent = content;\r\n}\r\ncatch (ex) { }\r\n\r\ntry {\r\n    parentLevel = level;\r\n}\r\ncatch (ex) { }\r\n\r\nquick.MM.trigger("createQRCode",\r\n    [{\r\n        parentSize: parentSize || quick.parent.props?.size,\r\n        parentContent: parentContent || quick.parent.props?.content,\r\n        parentLevel: parentLevel || quick.parent.props?.level\r\n    }]);',C:!0,EV:!0,HL:"TS"},getQRCode:{H:"\r\nquick.return(components.EdtrComp_2.src);",C:!0,EV:!0,HL:"TS"}},C:{},_Editor:{eID:"EdtrComp_1"},O:{cType:"child"}},{T:"VImg",P:{ID:{H:"EdtrComp_2",T:"prop"},eager:{H:"true",T:"prop"},height:{H:"'200'",T:"prop"},width:{H:"'200'",T:"prop"},visible:{H:"true",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_2"},O:{cType:"slot"}}],cJson:[{T:"Messaging",P:{ID:{H:"EdtrComp_1",T:"prop"},externalProps:{H:"╬[]╠'size'╩╠'content'╩╠'level'╩╩╩",T:"prop"}},E:{PostRender:{H:'var _a, _b, _c;\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nquick.MM.trigger("createQRCode", [{ parentSize: (_a = quick.parent.props) === null || _a === void 0 ? void 0 : _a.size, parentContent: (_b = quick.parent.props) === null || _b === void 0 ? void 0 : _b.content, parentLevel: (_c = quick.parent.props) === null || _c === void 0 ? void 0 : _c.level }]);\r\n',TO:1,HL:"JS"},createQRCode:{H:'Object.defineProperty(exports, "__esModule", { value: true });\r\nvar imagesize = parentSize ? Number(parentSize) : 0;\r\nvar qrString = parentContent ? String(parentContent) : \'\';\r\nvar qrcodegen;\r\n(function (qrcodegen) {\r\n    var QrCode = /** @class */ (function () {\r\n        /*-- Constructor (low level) and fields --*/\r\n        // Creates a new QR Code with the given version number,\r\n        // error correction level, data codeword bytes, and mask number.\r\n        // This is a low-level API that most users should not use directly.\r\n        // A mid-level API is the encodeSegments() function.\r\n        function QrCode(\r\n        // The version number of this QR Code, which is between 1 and 40 (inclusive).\r\n        // This determines the size of this barcode.\r\n        version, \r\n        // The error correction level used in this QR Code.\r\n        errorCorrectionLevel, dataCodewords, msk) {\r\n            this.version = version;\r\n            this.errorCorrectionLevel = errorCorrectionLevel;\r\n            // The modules of this QR Code (false = light, true = dark).\r\n            // Immutable after constructor finishes. Accessed through getModule().\r\n            this.modules = [];\r\n            // Indicates function modules that are not subjected to masking. Discarded when constructor finishes.\r\n            this.isFunction = [];\r\n            // Check scalar arguments\r\n            if (version < QrCode.MIN_VERSION || version > QrCode.MAX_VERSION)\r\n                throw "Version value out of range";\r\n            if (msk < -1 || msk > 7)\r\n                throw "Mask value out of range";\r\n            this.size = version * 4 + 17;\r\n            // Initialize both grids to be size*size arrays of Boolean false\r\n            var row = [];\r\n            for (var i = 0; i < this.size; i++)\r\n                row.push(false);\r\n            for (var i = 0; i < this.size; i++) {\r\n                this.modules.push(row.slice()); // Initially all light\r\n                this.isFunction.push(row.slice());\r\n            }\r\n            // Compute ECC, draw modules\r\n            this.drawFunctionPatterns();\r\n            var allCodewords = this.addEccAndInterleave(dataCodewords);\r\n            this.drawCodewords(allCodewords);\r\n            // Do masking\r\n            if (msk == -1) { // Automatically choose best mask\r\n                var minPenalty = 1000000000;\r\n                for (var i = 0; i < 8; i++) {\r\n                    this.applyMask(i);\r\n                    this.drawFormatBits(i);\r\n                    var penalty = this.getPenaltyScore();\r\n                    if (penalty < minPenalty) {\r\n                        msk = i;\r\n                        minPenalty = penalty;\r\n                    }\r\n                    this.applyMask(i); // Undoes the mask due to XOR\r\n                }\r\n            }\r\n            assert(0 <= msk && msk <= 7);\r\n            this.mask = msk;\r\n            this.applyMask(msk); // Apply the final choice of mask\r\n            this.drawFormatBits(msk); // Overwrite old format bits\r\n            this.isFunction = [];\r\n        }\r\n        QrCode.encodeText = function (text, ecl) {\r\n            var segs = qrcodegen.QrSegment.makeSegments(text);\r\n            return QrCode.encodeSegments(segs, ecl);\r\n        };\r\n        QrCode.encodeBinary = function (data, ecl) {\r\n            var seg = qrcodegen.QrSegment.makeBytes(data);\r\n            return QrCode.encodeSegments([seg], ecl);\r\n        };\r\n        QrCode.encodeSegments = function (segs, ecl, minVersion, maxVersion, mask, boostEcl) {\r\n            if (minVersion === void 0) { minVersion = 1; }\r\n            if (maxVersion === void 0) { maxVersion = 40; }\r\n            if (mask === void 0) { mask = -1; }\r\n            if (boostEcl === void 0) { boostEcl = true; }\r\n            if (!(QrCode.MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= QrCode.MAX_VERSION)\r\n                || mask < -1 || mask > 7)\r\n                throw "Invalid value";\r\n            // Find the minimal version number to use\r\n            var version;\r\n            var dataUsedBits;\r\n            for (version = minVersion;; version++) {\r\n                var dataCapacityBits_1 = QrCode.getNumDataCodewords(version, ecl) * 8; // Number of data bits available\r\n                var usedBits = QrSegment.getTotalBits(segs, version);\r\n                if (usedBits <= dataCapacityBits_1) {\r\n                    dataUsedBits = usedBits;\r\n                    break; // This version number is found to be suitable\r\n                }\r\n                if (version >= maxVersion) // All versions in the range could not fit the given data\r\n                    throw "Data too long";\r\n            }\r\n            // Increase the error correction level while the data still fits in the current version number\r\n            for (var _i = 0, _a = [QrCode.Ecc.MEDIUM, QrCode.Ecc.QUARTILE, QrCode.Ecc.HIGH]; _i < _a.length; _i++) { // From low to high\r\n                var newEcl = _a[_i];\r\n                if (boostEcl && dataUsedBits <= QrCode.getNumDataCodewords(version, newEcl) * 8)\r\n                    ecl = newEcl;\r\n            }\r\n            // Concatenate all segments to create the data bit string\r\n            var bb = [];\r\n            for (var _b = 0, segs_1 = segs; _b < segs_1.length; _b++) {\r\n                var seg = segs_1[_b];\r\n                appendBits(seg.mode.modeBits, 4, bb);\r\n                appendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\r\n                for (var _c = 0, _d = seg.getData(); _c < _d.length; _c++) {\r\n                    var b = _d[_c];\r\n                    bb.push(b);\r\n                }\r\n            }\r\n            assert(bb.length == dataUsedBits);\r\n            // Add terminator and pad up to a byte if applicable\r\n            var dataCapacityBits = QrCode.getNumDataCodewords(version, ecl) * 8;\r\n            assert(bb.length <= dataCapacityBits);\r\n            appendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\r\n            appendBits(0, (8 - bb.length % 8) % 8, bb);\r\n            assert(bb.length % 8 == 0);\r\n            // Pad with alternating bytes until data capacity is reached\r\n            for (var padByte = 0xEC; bb.length < dataCapacityBits; padByte ^= 0xEC ^ 0x11)\r\n                appendBits(padByte, 8, bb);\r\n            // Pack bits into bytes in big endian\r\n            var dataCodewords = [];\r\n            while (dataCodewords.length * 8 < bb.length)\r\n                dataCodewords.push(0);\r\n            bb.forEach(function (b, i) {\r\n                return dataCodewords[i >>> 3] |= b << (7 - (i & 7));\r\n            });\r\n            // Create the QR Code object\r\n            return new QrCode(version, ecl, dataCodewords, mask);\r\n        };\r\n        QrCode.prototype.getModule = function (x, y) {\r\n            return 0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x];\r\n        };\r\n        QrCode.prototype.drawFunctionPatterns = function () {\r\n            // Draw horizontal and vertical timing patterns\r\n            for (var i = 0; i < this.size; i++) {\r\n                this.setFunctionModule(6, i, i % 2 == 0);\r\n                this.setFunctionModule(i, 6, i % 2 == 0);\r\n            }\r\n            // Draw 3 finder patterns (all corners except bottom right; overwrites some timing modules)\r\n            this.drawFinderPattern(3, 3);\r\n            this.drawFinderPattern(this.size - 4, 3);\r\n            this.drawFinderPattern(3, this.size - 4);\r\n            // Draw numerous alignment patterns\r\n            var alignPatPos = this.getAlignmentPatternPositions();\r\n            var numAlign = alignPatPos.length;\r\n            for (var i = 0; i < numAlign; i++) {\r\n                for (var j = 0; j < numAlign; j++) {\r\n                    // Don\'t draw on the three finder corners\r\n                    if (!(i == 0 && j == 0 || i == 0 && j == numAlign - 1 || i == numAlign - 1 && j == 0))\r\n                        this.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\r\n                }\r\n            }\r\n            // Draw configuration data\r\n            this.drawFormatBits(0); // Dummy mask value; overwritten later in the constructor\r\n            this.drawVersion();\r\n        };\r\n        // Draws two copies of the format bits (with its own error correction code)\r\n        // based on the given mask and this object\'s error correction level field.\r\n        QrCode.prototype.drawFormatBits = function (mask) {\r\n            // Calculate error correction code and pack bits\r\n            var data = this.errorCorrectionLevel.formatBits << 3 | mask; // errCorrLvl is uint2, mask is uint3\r\n            var rem = data;\r\n            for (var i = 0; i < 10; i++)\r\n                rem = (rem << 1) ^ ((rem >>> 9) * 0x537);\r\n            var bits = (data << 10 | rem) ^ 0x5412; // uint15\r\n            assert(bits >>> 15 == 0);\r\n            // Draw first copy\r\n            for (var i = 0; i <= 5; i++)\r\n                this.setFunctionModule(8, i, getBit(bits, i));\r\n            this.setFunctionModule(8, 7, getBit(bits, 6));\r\n            this.setFunctionModule(8, 8, getBit(bits, 7));\r\n            this.setFunctionModule(7, 8, getBit(bits, 8));\r\n            for (var i = 9; i < 15; i++)\r\n                this.setFunctionModule(14 - i, 8, getBit(bits, i));\r\n            // Draw second copy\r\n            for (var i = 0; i < 8; i++)\r\n                this.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));\r\n            for (var i = 8; i < 15; i++)\r\n                this.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));\r\n            this.setFunctionModule(8, this.size - 8, true); // Always dark\r\n        };\r\n        // Draws two copies of the version bits (with its own error correction code),\r\n        // based on this object\'s version field, iff 7 <= version <= 40.\r\n        QrCode.prototype.drawVersion = function () {\r\n            if (this.version < 7)\r\n                return;\r\n            // Calculate error correction code and pack bits\r\n            var rem = this.version; // version is uint6, in the range [7, 40]\r\n            for (var i = 0; i < 12; i++)\r\n                rem = (rem << 1) ^ ((rem >>> 11) * 0x1F25);\r\n            var bits = this.version << 12 | rem; // uint18\r\n            assert(bits >>> 18 == 0);\r\n            // Draw two copies\r\n            for (var i = 0; i < 18; i++) {\r\n                var color = getBit(bits, i);\r\n                var a = this.size - 11 + i % 3;\r\n                var b = Math.floor(i / 3);\r\n                this.setFunctionModule(a, b, color);\r\n                this.setFunctionModule(b, a, color);\r\n            }\r\n        };\r\n        // Draws a 9*9 finder pattern including the border separator,\r\n        // with the center module at (x, y). Modules can be out of bounds.\r\n        QrCode.prototype.drawFinderPattern = function (x, y) {\r\n            for (var dy = -4; dy <= 4; dy++) {\r\n                for (var dx = -4; dx <= 4; dx++) {\r\n                    var dist = Math.max(Math.abs(dx), Math.abs(dy)); // Chebyshev/infinity norm\r\n                    var xx = x + dx;\r\n                    var yy = y + dy;\r\n                    if (0 <= xx && xx < this.size && 0 <= yy && yy < this.size)\r\n                        this.setFunctionModule(xx, yy, dist != 2 && dist != 4);\r\n                }\r\n            }\r\n        };\r\n        // Draws a 5*5 alignment pattern, with the center module\r\n        // at (x, y). All modules must be in bounds.\r\n        QrCode.prototype.drawAlignmentPattern = function (x, y) {\r\n            for (var dy = -2; dy <= 2; dy++) {\r\n                for (var dx = -2; dx <= 2; dx++)\r\n                    this.setFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);\r\n            }\r\n        };\r\n        // Sets the color of a module and marks it as a function module.\r\n        // Only used by the constructor. Coordinates must be in bounds.\r\n        QrCode.prototype.setFunctionModule = function (x, y, isDark) {\r\n            this.modules[y][x] = isDark;\r\n            this.isFunction[y][x] = true;\r\n        };\r\n        QrCode.prototype.addEccAndInterleave = function (data) {\r\n            var ver = this.version;\r\n            var ecl = this.errorCorrectionLevel;\r\n            if (data.length != QrCode.getNumDataCodewords(ver, ecl))\r\n                throw "Invalid argument";\r\n            // Calculate parameter numbers\r\n            var numBlocks = QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\r\n            var blockEccLen = QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];\r\n            var rawCodewords = Math.floor(QrCode.getNumRawDataModules(ver) / 8);\r\n            var numShortBlocks = numBlocks - rawCodewords % numBlocks;\r\n            var shortBlockLen = Math.floor(rawCodewords / numBlocks);\r\n            // Split data into blocks and append ECC to each block\r\n            var blocks = [];\r\n            var rsDiv = QrCode.reedSolomonComputeDivisor(blockEccLen);\r\n            for (var i = 0, k = 0; i < numBlocks; i++) {\r\n                var dat = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));\r\n                k += dat.length;\r\n                var ecc = QrCode.reedSolomonComputeRemainder(dat, rsDiv);\r\n                if (i < numShortBlocks)\r\n                    dat.push(0);\r\n                blocks.push(dat.concat(ecc));\r\n            }\r\n            // Interleave (not concatenate) the bytes from every block into a single sequence\r\n            var result = [];\r\n            var _loop_1 = function (i) {\r\n                blocks.forEach(function (block, j) {\r\n                    // Skip the padding byte in short blocks\r\n                    if (i != shortBlockLen - blockEccLen || j >= numShortBlocks)\r\n                        result.push(block[i]);\r\n                });\r\n            };\r\n            for (var i = 0; i < blocks[0].length; i++) {\r\n                _loop_1(i);\r\n            }\r\n            assert(result.length == rawCodewords);\r\n            return result;\r\n        };\r\n        // Draws the given sequence of 8-bit codewords (data and error correction) onto the entire\r\n        // data area of this QR Code. Function modules need to be marked off before this is called.\r\n        QrCode.prototype.drawCodewords = function (data) {\r\n            if (data.length != Math.floor(QrCode.getNumRawDataModules(this.version) / 8))\r\n                throw "Invalid argument";\r\n            var i = 0; // Bit index into the data\r\n            // Do the funny zigzag scan\r\n            for (var right = this.size - 1; right >= 1; right -= 2) { // Index of right column in each column pair\r\n                if (right == 6)\r\n                    right = 5;\r\n                for (var vert = 0; vert < this.size; vert++) { // Vertical counter\r\n                    for (var j = 0; j < 2; j++) {\r\n                        var x_1 = right - j; // Actual x coordinate\r\n                        var upward = ((right + 1) & 2) == 0;\r\n                        var y_1 = upward ? this.size - 1 - vert : vert; // Actual y coordinate\r\n                        if (!this.isFunction[y_1][x_1] && i < data.length * 8) {\r\n                            this.modules[y_1][x_1] = getBit(data[i >>> 3], 7 - (i & 7));\r\n                            i++;\r\n                        }\r\n                        // If this QR Code has any remainder bits (0 to 7), they were assigned as\r\n                        // 0/false/light by the constructor and are left unchanged by this method\r\n                    }\r\n                }\r\n            }\r\n            assert(i == data.length * 8);\r\n        };\r\n        QrCode.prototype.applyMask = function (mask) {\r\n            if (mask < 0 || mask > 7)\r\n                throw "Mask value out of range";\r\n            for (var y_2 = 0; y_2 < this.size; y_2++) {\r\n                for (var x_2 = 0; x_2 < this.size; x_2++) {\r\n                    var invert = void 0;\r\n                    switch (mask) {\r\n                        case 0:\r\n                            invert = (x_2 + y_2) % 2 == 0;\r\n                            break;\r\n                        case 1:\r\n                            invert = y_2 % 2 == 0;\r\n                            break;\r\n                        case 2:\r\n                            invert = x_2 % 3 == 0;\r\n                            break;\r\n                        case 3:\r\n                            invert = (x_2 + y_2) % 3 == 0;\r\n                            break;\r\n                        case 4:\r\n                            invert = (Math.floor(x_2 / 3) + Math.floor(y_2 / 2)) % 2 == 0;\r\n                            break;\r\n                        case 5:\r\n                            invert = x_2 * y_2 % 2 + x_2 * y_2 % 3 == 0;\r\n                            break;\r\n                        case 6:\r\n                            invert = (x_2 * y_2 % 2 + x_2 * y_2 % 3) % 2 == 0;\r\n                            break;\r\n                        case 7:\r\n                            invert = ((x_2 + y_2) % 2 + x_2 * y_2 % 3) % 2 == 0;\r\n                            break;\r\n                        default: throw "Unreachable";\r\n                    }\r\n                    if (!this.isFunction[y_2][x_2] && invert)\r\n                        this.modules[y_2][x_2] = !this.modules[y_2][x_2];\r\n                }\r\n            }\r\n        };\r\n        // Calculates and returns the penalty score based on state of this QR Code\'s current modules.\r\n        // This is used by the automatic mask choice algorithm to find the mask pattern that yields the lowest score.\r\n        QrCode.prototype.getPenaltyScore = function () {\r\n            var result = 0;\r\n            // Adjacent modules in row having same color, and finder-like patterns\r\n            for (var y_3 = 0; y_3 < this.size; y_3++) {\r\n                var runColor = false;\r\n                var runX = 0;\r\n                var runHistory = [0, 0, 0, 0, 0, 0, 0];\r\n                for (var x_3 = 0; x_3 < this.size; x_3++) {\r\n                    if (this.modules[y_3][x_3] == runColor) {\r\n                        runX++;\r\n                        if (runX == 5)\r\n                            result += QrCode.PENALTY_N1;\r\n                        else if (runX > 5)\r\n                            result++;\r\n                    }\r\n                    else {\r\n                        this.finderPenaltyAddHistory(runX, runHistory);\r\n                        if (!runColor)\r\n                            result += this.finderPenaltyCountPatterns(runHistory) * QrCode.PENALTY_N3;\r\n                        runColor = this.modules[y_3][x_3];\r\n                        runX = 1;\r\n                    }\r\n                }\r\n                result += this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) * QrCode.PENALTY_N3;\r\n            }\r\n            // Adjacent modules in column having same color, and finder-like patterns\r\n            for (var x_4 = 0; x_4 < this.size; x_4++) {\r\n                var runColor = false;\r\n                var runY = 0;\r\n                var runHistory = [0, 0, 0, 0, 0, 0, 0];\r\n                for (var y_4 = 0; y_4 < this.size; y_4++) {\r\n                    if (this.modules[y_4][x_4] == runColor) {\r\n                        runY++;\r\n                        if (runY == 5)\r\n                            result += QrCode.PENALTY_N1;\r\n                        else if (runY > 5)\r\n                            result++;\r\n                    }\r\n                    else {\r\n                        this.finderPenaltyAddHistory(runY, runHistory);\r\n                        if (!runColor)\r\n                            result += this.finderPenaltyCountPatterns(runHistory) * QrCode.PENALTY_N3;\r\n                        runColor = this.modules[y_4][x_4];\r\n                        runY = 1;\r\n                    }\r\n                }\r\n                result += this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) * QrCode.PENALTY_N3;\r\n            }\r\n            // 2*2 blocks of modules having same color\r\n            for (var y_5 = 0; y_5 < this.size - 1; y_5++) {\r\n                for (var x_5 = 0; x_5 < this.size - 1; x_5++) {\r\n                    var color = this.modules[y_5][x_5];\r\n                    if (color == this.modules[y_5][x_5 + 1] &&\r\n                        color == this.modules[y_5 + 1][x_5] &&\r\n                        color == this.modules[y_5 + 1][x_5 + 1])\r\n                        result += QrCode.PENALTY_N2;\r\n                }\r\n            }\r\n            // Balance of dark and light modules\r\n            var dark = 0;\r\n            for (var _i = 0, _a = this.modules; _i < _a.length; _i++) {\r\n                var row = _a[_i];\r\n                dark = row.reduce(function (sum, color) { return sum + (color ? 1 : 0); }, dark);\r\n            }\r\n            var total = this.size * this.size; // Note that size is odd, so dark/total != 1/2\r\n            // Compute the smallest integer k >= 0 such that (45-5k)% <= dark/total <= (55+5k)%\r\n            var k = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\r\n            assert(0 <= k && k <= 9);\r\n            result += k * QrCode.PENALTY_N4;\r\n            assert(0 <= result && result <= 2568888); // Non-tight upper bound based on default values of PENALTY_N1, ..., N4\r\n            return result;\r\n        };\r\n        QrCode.prototype.getAlignmentPatternPositions = function () {\r\n            if (this.version == 1)\r\n                return [];\r\n            else {\r\n                var numAlign = Math.floor(this.version / 7) + 2;\r\n                var step = (this.version == 32) ? 26 :\r\n                    Math.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\r\n                var result = [6];\r\n                for (var pos = this.size - 7; result.length < numAlign; pos -= step)\r\n                    result.splice(1, 0, pos);\r\n                return result;\r\n            }\r\n        };\r\n        QrCode.getNumRawDataModules = function (ver) {\r\n            if (ver < QrCode.MIN_VERSION || ver > QrCode.MAX_VERSION)\r\n                throw "Version number out of range";\r\n            var result = (16 * ver + 128) * ver + 64;\r\n            if (ver >= 2) {\r\n                var numAlign = Math.floor(ver / 7) + 2;\r\n                result -= (25 * numAlign - 10) * numAlign - 55;\r\n                if (ver >= 7)\r\n                    result -= 36;\r\n            }\r\n            assert(208 <= result && result <= 29648);\r\n            return result;\r\n        };\r\n        QrCode.getNumDataCodewords = function (ver, ecl) {\r\n            return Math.floor(QrCode.getNumRawDataModules(ver) / 8) -\r\n                QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] *\r\n                    QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\r\n        };\r\n        // Returns a Reed-Solomon ECC generator polynomial for the given degree. This could be\r\n        // implemented as a lookup table over all possible parameter values, instead of as an algorithm.\r\n        QrCode.reedSolomonComputeDivisor = function (degree) {\r\n            if (degree < 1 || degree > 255)\r\n                throw "Degree out of range";\r\n            // Polynomial coefficients are stored from highest to lowest power, excluding the leading term which is always 1.\r\n            // For example the polynomial x^3 + 255x^2 + 8x + 93 is stored as the uint8 array [255, 8, 93].\r\n            var result = [];\r\n            for (var i = 0; i < degree - 1; i++)\r\n                result.push(0);\r\n            result.push(1); // Start off with the monomial x^0\r\n            var root = 1;\r\n            for (var i = 0; i < degree; i++) {\r\n                // Multiply the current product by (x - r^i)\r\n                for (var j = 0; j < result.length; j++) {\r\n                    result[j] = QrCode.reedSolomonMultiply(result[j], root);\r\n                    if (j + 1 < result.length)\r\n                        result[j] ^= result[j + 1];\r\n                }\r\n                root = QrCode.reedSolomonMultiply(root, 0x02);\r\n            }\r\n            return result;\r\n        };\r\n        // Returns the Reed-Solomon error correction codeword for the given data and divisor polynomials.\r\n        QrCode.reedSolomonComputeRemainder = function (data, divisor) {\r\n            var result = divisor.map(function (_) { return 0; });\r\n            var _loop_2 = function (b) {\r\n                var factor = b ^ result.shift();\r\n                result.push(0);\r\n                divisor.forEach(function (coef, i) {\r\n                    return result[i] ^= QrCode.reedSolomonMultiply(coef, factor);\r\n                });\r\n            };\r\n            for (var _i = 0, data_1 = data; _i < data_1.length; _i++) {\r\n                var b = data_1[_i];\r\n                _loop_2(b);\r\n            }\r\n            return result;\r\n        };\r\n        QrCode.reedSolomonMultiply = function (x, y) {\r\n            if (x >>> 8 != 0 || y >>> 8 != 0)\r\n                throw "Byte out of range";\r\n            // Russian peasant multiplication\r\n            var z = 0;\r\n            for (var i = 7; i >= 0; i--) {\r\n                z = (z << 1) ^ ((z >>> 7) * 0x11D);\r\n                z ^= ((y >>> i) & 1) * x;\r\n            }\r\n            assert(z >>> 8 == 0);\r\n            return z;\r\n        };\r\n        QrCode.prototype.finderPenaltyCountPatterns = function (runHistory) {\r\n            var n = runHistory[1];\r\n            assert(n <= this.size * 3);\r\n            var core = n > 0 && runHistory[2] == n && runHistory[3] == n * 3 && runHistory[4] == n && runHistory[5] == n;\r\n            return (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0)\r\n                + (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0);\r\n        };\r\n        // Must be called at the end of a line (row or column) of modules. A helper function for getPenaltyScore().\r\n        QrCode.prototype.finderPenaltyTerminateAndCount = function (currentRunColor, currentRunLength, runHistory) {\r\n            if (currentRunColor) { // Terminate dark run\r\n                this.finderPenaltyAddHistory(currentRunLength, runHistory);\r\n                currentRunLength = 0;\r\n            }\r\n            currentRunLength += this.size; // Add light border to final run\r\n            this.finderPenaltyAddHistory(currentRunLength, runHistory);\r\n            return this.finderPenaltyCountPatterns(runHistory);\r\n        };\r\n        // Pushes the given value to the front and drops the last value. A helper function for getPenaltyScore().\r\n        QrCode.prototype.finderPenaltyAddHistory = function (currentRunLength, runHistory) {\r\n            if (runHistory[0] == 0)\r\n                currentRunLength += this.size; // Add light border to initial run\r\n            runHistory.pop();\r\n            runHistory.unshift(currentRunLength);\r\n        };\r\n        /*-- Constants and tables --*/\r\n        // The minimum version number supported in the QR Code Model 2 standard.\r\n        QrCode.MIN_VERSION = 1;\r\n        // The maximum version number supported in the QR Code Model 2 standard.\r\n        QrCode.MAX_VERSION = 40;\r\n        // For use in getPenaltyScore(), when evaluating which mask is best.\r\n        QrCode.PENALTY_N1 = 3;\r\n        QrCode.PENALTY_N2 = 3;\r\n        QrCode.PENALTY_N3 = 40;\r\n        QrCode.PENALTY_N4 = 10;\r\n        QrCode.ECC_CODEWORDS_PER_BLOCK = [\r\n            // Version: (note that index 0 is for padding, and is set to an illegal value)\r\n            //0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40    Error correction level\r\n            [-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\r\n            [-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28],\r\n            [-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\r\n            [-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\r\n        ];\r\n        QrCode.NUM_ERROR_CORRECTION_BLOCKS = [\r\n            // Version: (note that index 0 is for padding, and is set to an illegal value)\r\n            //0, 1, 2, 3, 4, 5, 6, 7, 8, 9,10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40    Error correction level\r\n            [-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25],\r\n            [-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49],\r\n            [-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68],\r\n            [-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81],\r\n        ];\r\n        return QrCode;\r\n    }());\r\n    qrcodegen.QrCode = QrCode;\r\n    function appendBits(val, len, bb) {\r\n        if (len < 0 || len > 31 || val >>> len != 0)\r\n            throw "Value out of range";\r\n        for (var i = len - 1; i >= 0; i--) // Append bit by bit\r\n            bb.push((val >>> i) & 1);\r\n    }\r\n    // Returns true iff the i\'th bit of x is set to 1.\r\n    function getBit(x, i) {\r\n        return ((x >>> i) & 1) != 0;\r\n    }\r\n    // Throws an exception if the given condition is false.\r\n    function assert(cond) {\r\n        if (!cond)\r\n            throw "Assertion error";\r\n    }\r\n    var QrSegment = /** @class */ (function () {\r\n        function QrSegment(\r\n        // The mode indicator of this segment.\r\n        mode, numChars, \r\n        // The data bits of this segment. Accessed through getData().\r\n        bitData) {\r\n            this.mode = mode;\r\n            this.numChars = numChars;\r\n            this.bitData = bitData;\r\n            if (numChars < 0)\r\n                throw "Invalid argument";\r\n            this.bitData = bitData.slice(); // Make defensive copy\r\n        }\r\n        QrSegment.makeBytes = function (data) {\r\n            var bb = [];\r\n            for (var _i = 0, data_2 = data; _i < data_2.length; _i++) {\r\n                var b = data_2[_i];\r\n                appendBits(b, 8, bb);\r\n            }\r\n            return new QrSegment(QrSegment.Mode.BYTE, data.length, bb);\r\n        };\r\n        // Returns a segment representing the given string of decimal digits encoded in numeric mode.\r\n        QrSegment.makeNumeric = function (digits) {\r\n            if (!QrSegment.isNumeric(digits))\r\n                throw "String contains non-numeric characters";\r\n            var bb = [];\r\n            for (var i = 0; i < digits.length;) { // Consume up to 3 digits per iteration\r\n                var n = Math.min(digits.length - i, 3);\r\n                appendBits(parseInt(digits.substr(i, n), 10), n * 3 + 1, bb);\r\n                i += n;\r\n            }\r\n            return new QrSegment(QrSegment.Mode.NUMERIC, digits.length, bb);\r\n        };\r\n        QrSegment.makeAlphanumeric = function (text) {\r\n            if (!QrSegment.isAlphanumeric(text))\r\n                throw "String contains unencodable characters in alphanumeric mode";\r\n            var bb = [];\r\n            var i;\r\n            for (i = 0; i + 2 <= text.length; i += 2) { // Process groups of 2\r\n                var temp = QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\r\n                temp += QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\r\n                appendBits(temp, 11, bb);\r\n            }\r\n            if (i < text.length) // 1 character remaining\r\n                appendBits(QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6, bb);\r\n            return new QrSegment(QrSegment.Mode.ALPHANUMERIC, text.length, bb);\r\n        };\r\n        // Returns a new mutable list of zero or more segments to represent the given Unicode text string.\r\n        // The result may use various segment modes and switch modes to optimize the length of the bit stream.\r\n        QrSegment.makeSegments = function (text) {\r\n            // Select the most efficient segment encoding automatically\r\n            if (text == "")\r\n                return [];\r\n            else if (QrSegment.isNumeric(text))\r\n                return [QrSegment.makeNumeric(text)];\r\n            else if (QrSegment.isAlphanumeric(text))\r\n                return [QrSegment.makeAlphanumeric(text)];\r\n            else\r\n                return [QrSegment.makeBytes(QrSegment.toUtf8ByteArray(text))];\r\n        };\r\n        // Returns a segment representing an Extended Channel Interpretation\r\n        // (ECI) designator with the given assignment value.\r\n        QrSegment.makeEci = function (assignVal) {\r\n            var bb = [];\r\n            if (assignVal < 0)\r\n                throw "ECI assignment value out of range";\r\n            else if (assignVal < (1 << 7))\r\n                appendBits(assignVal, 8, bb);\r\n            else if (assignVal < (1 << 14)) {\r\n                appendBits(2, 2, bb);\r\n                appendBits(assignVal, 14, bb);\r\n            }\r\n            else if (assignVal < 1000000) {\r\n                appendBits(6, 3, bb);\r\n                appendBits(assignVal, 21, bb);\r\n            }\r\n            else\r\n                throw "ECI assignment value out of range";\r\n            return new QrSegment(QrSegment.Mode.ECI, 0, bb);\r\n        };\r\n        // Tests whether the given string can be encoded as a segment in numeric mode.\r\n        // A string is encodable iff each character is in the range 0 to 9.\r\n        QrSegment.isNumeric = function (text) {\r\n            return QrSegment.NUMERIC_REGEX.test(text);\r\n        };\r\n        QrSegment.isAlphanumeric = function (text) {\r\n            return QrSegment.ALPHANUMERIC_REGEX.test(text);\r\n        };\r\n        /*-- Methods --*/\r\n        // Returns a new copy of the data bits of this segment.\r\n        QrSegment.prototype.getData = function () {\r\n            return this.bitData.slice(); // Make defensive copy\r\n        };\r\n        // (Package-private) Calculates and returns the number of bits needed to encode the given segments at\r\n        // the given version. The result is infinity if a segment has too many characters to fit its length field.\r\n        QrSegment.getTotalBits = function (segs, version) {\r\n            var result = 0;\r\n            for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {\r\n                var seg = segs_2[_i];\r\n                var ccbits = seg.mode.numCharCountBits(version);\r\n                if (seg.numChars >= (1 << ccbits))\r\n                    return Infinity; // The segment\'s length doesn\'t fit the field\'s bit width\r\n                result += 4 + ccbits + seg.bitData.length;\r\n            }\r\n            return result;\r\n        };\r\n        // Returns a new array of bytes representing the given string encoded in UTF-8.\r\n        QrSegment.toUtf8ByteArray = function (str) {\r\n            str = encodeURI(str);\r\n            var result = [];\r\n            for (var i = 0; i < str.length; i++) {\r\n                if (str.charAt(i) != "%")\r\n                    result.push(str.charCodeAt(i));\r\n                else {\r\n                    result.push(parseInt(str.substr(i + 1, 2), 16));\r\n                    i += 2;\r\n                }\r\n            }\r\n            return result;\r\n        };\r\n        /*-- Constants --*/\r\n        // Describes precisely all strings that are encodable in numeric mode.\r\n        QrSegment.NUMERIC_REGEX = /^[0-9]*$/;\r\n        // Describes precisely all strings that are encodable in alphanumeric mode.\r\n        QrSegment.ALPHANUMERIC_REGEX = /^[A-Z0-9 $%*+.\\/:-]*$/;\r\n        // The set of all legal characters in alphanumeric mode,\r\n        // where each character value maps to the index in the string.\r\n        QrSegment.ALPHANUMERIC_CHARSET = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:";\r\n        return QrSegment;\r\n    }());\r\n    qrcodegen.QrSegment = QrSegment;\r\n})(qrcodegen || (qrcodegen = {}));\r\n(function (qrcodegen) {\r\n    var QrCode;\r\n    (function (QrCode) {\r\n        var Ecc = /** @class */ (function () {\r\n            function Ecc(\r\n            // In the range 0 to 3 (unsigned 2-bit integer).\r\n            ordinal, \r\n            // (Package-private) In the range 0 to 3 (unsigned 2-bit integer).\r\n            formatBits) {\r\n                this.ordinal = ordinal;\r\n                this.formatBits = formatBits;\r\n            }\r\n            Ecc.LOW = new Ecc(0, 1); // The QR Code can tolerate about  7% erroneous codewords\r\n            Ecc.MEDIUM = new Ecc(1, 0); // The QR Code can tolerate about 15% erroneous codewords\r\n            Ecc.QUARTILE = new Ecc(2, 3); // The QR Code can tolerate about 25% erroneous codewords\r\n            Ecc.HIGH = new Ecc(3, 2); // The QR Code can tolerate about 30% erroneous codewords\r\n            return Ecc;\r\n        }());\r\n        QrCode.Ecc = Ecc;\r\n    })(QrCode = qrcodegen.QrCode || (qrcodegen.QrCode = {}));\r\n})(qrcodegen || (qrcodegen = {}));\r\n(function (qrcodegen) {\r\n    var QrSegment;\r\n    (function (QrSegment) {\r\n        var Mode = /** @class */ (function () {\r\n            function Mode(\r\n            // The mode indicator bits, which is a uint4 value (range 0 to 15).\r\n            modeBits, \r\n            // Number of character count bits for three different version ranges.\r\n            numBitsCharCount) {\r\n                this.modeBits = modeBits;\r\n                this.numBitsCharCount = numBitsCharCount;\r\n            }\r\n            Mode.prototype.numCharCountBits = function (ver) {\r\n                return this.numBitsCharCount[Math.floor((ver + 7) / 17)];\r\n            };\r\n            Mode.NUMERIC = new Mode(0x1, [10, 12, 14]);\r\n            Mode.ALPHANUMERIC = new Mode(0x2, [9, 11, 13]);\r\n            Mode.BYTE = new Mode(0x4, [8, 16, 16]);\r\n            Mode.KANJI = new Mode(0x8, [8, 10, 12]);\r\n            Mode.ECI = new Mode(0x7, [0, 0, 0]);\r\n            return Mode;\r\n        }());\r\n        QrSegment.Mode = Mode;\r\n    })(QrSegment = qrcodegen.QrSegment || (qrcodegen.QrSegment = {}));\r\n})(qrcodegen || (qrcodegen = {}));\r\nfunction write(buffer, offs, a1, a2, a3, a4, a5) {\r\n    if (a1 === void 0) { a1 = undefined; }\r\n    if (a2 === void 0) { a2 = undefined; }\r\n    if (a3 === void 0) { a3 = undefined; }\r\n    if (a4 === void 0) { a4 = undefined; }\r\n    if (a5 === void 0) { a5 = undefined; }\r\n    var args = [];\r\n    args.push(buffer);\r\n    args.push(offs);\r\n    if (a1)\r\n        args.push(a1);\r\n    if (a2)\r\n        args.push(a2);\r\n    if (a3)\r\n        args.push(a3);\r\n    if (a4)\r\n        args.push(a4);\r\n    if (a5)\r\n        args.push(a5);\r\n    for (var i = 2; i < args.length; i++) {\r\n        for (var j = 0; j < args[i].length; j++) {\r\n            buffer[offs++] = args[i].charAt(j);\r\n        }\r\n    }\r\n}\r\nfunction byte2(w) {\r\n    return String.fromCharCode((w >> 8) & 255, w & 255);\r\n}\r\nfunction byte4(w) {\r\n    return String.fromCharCode((w >> 24) & 255, (w >> 16) & 255, (w >> 8) & 255, w & 255);\r\n}\r\nfunction byte2lsb(w) {\r\n    return String.fromCharCode(w & 255, (w >> 8) & 255);\r\n}\r\nvar PNGlib = function (width, height, depth) {\r\n    this.width = width;\r\n    this.height = height;\r\n    this.depth = depth;\r\n    // pixel data and row filter identifier size\r\n    this.pix_size = height * (width + 1);\r\n    // deflate header, pix_size, block headers, adler32 checksum\r\n    this.data_size = 2 + this.pix_size + 5 * Math.floor((0xfffe + this.pix_size) / 0xffff) + 4;\r\n    // offsets and sizes of Png chunks\r\n    this.ihdr_offs = 0; // IHDR offset and size\r\n    this.ihdr_size = 4 + 4 + 13 + 4;\r\n    this.plte_offs = this.ihdr_offs + this.ihdr_size; // PLTE offset and size\r\n    this.plte_size = 4 + 4 + 3 * depth + 4;\r\n    this.trns_offs = this.plte_offs + this.plte_size; // tRNS offset and size\r\n    this.trns_size = 4 + 4 + depth + 4;\r\n    this.idat_offs = this.trns_offs + this.trns_size; // IDAT offset and size\r\n    this.idat_size = 4 + 4 + this.data_size + 4;\r\n    this.iend_offs = this.idat_offs + this.idat_size; // IEND offset and size\r\n    this.iend_size = 4 + 4 + 4;\r\n    this.buffer_size = this.iend_offs + this.iend_size; // total PNG size\r\n    this.buffer = new Array();\r\n    this.palette = new Object();\r\n    this.pindex = 0;\r\n    var _crc32 = new Array();\r\n    // initialize buffer with zero bytes\r\n    for (var i = 0; i < this.buffer_size; i++) {\r\n        this.buffer[i] = "\\x00";\r\n    }\r\n    // initialize non-zero elements\r\n    write(this.buffer, this.ihdr_offs, byte4(this.ihdr_size - 12), \'IHDR\', byte4(width), byte4(height), "\\x08\\x03");\r\n    write(this.buffer, this.plte_offs, byte4(this.plte_size - 12), \'PLTE\');\r\n    write(this.buffer, this.trns_offs, byte4(this.trns_size - 12), \'tRNS\');\r\n    write(this.buffer, this.idat_offs, byte4(this.idat_size - 12), \'IDAT\');\r\n    write(this.buffer, this.iend_offs, byte4(this.iend_size - 12), \'IEND\');\r\n    // initialize deflate header\r\n    var header = ((8 + (7 << 4)) << 8) | (3 << 6);\r\n    header += 31 - (header % 31);\r\n    write(this.buffer, this.idat_offs + 8, byte2(header));\r\n    // initialize deflate block headers\r\n    for (var i = 0; (i << 16) - 1 < this.pix_size; i++) {\r\n        var size, bits;\r\n        if (i + 0xffff < this.pix_size) {\r\n            size = 0xffff;\r\n            bits = "\\x00";\r\n        }\r\n        else {\r\n            size = this.pix_size - (i << 16) - i;\r\n            bits = "\\x01";\r\n        }\r\n        write(this.buffer, this.idat_offs + 8 + 2 + (i << 16) + (i << 2), bits, byte2lsb(size), byte2lsb(~size));\r\n    }\r\n    /* Create crc32 lookup table */\r\n    for (var i = 0; i < 256; i++) {\r\n        var c = i;\r\n        for (var j = 0; j < 8; j++) {\r\n            if (c & 1) {\r\n                c = -306674912 ^ ((c >> 1) & 0x7fffffff);\r\n            }\r\n            else {\r\n                c = (c >> 1) & 0x7fffffff;\r\n            }\r\n        }\r\n        _crc32[i] = c;\r\n    }\r\n    // compute the index into a png for a given pixel\r\n    this.index = function (x, y) {\r\n        var i = y * (this.width + 1) + x + 1;\r\n        var j = this.idat_offs + 8 + 2 + 5 * Math.floor((i / 0xffff) + 1) + i;\r\n        return j;\r\n    };\r\n    // convert a color and build up the palette\r\n    this.color = function (red, green, blue, alpha) {\r\n        alpha = alpha >= 0 ? alpha : 255;\r\n        var color = (((((alpha << 8) | red) << 8) | green) << 8) | blue;\r\n        if (typeof this.palette[color] == "undefined") {\r\n            if (this.pindex == this.depth)\r\n                return "\\x00";\r\n            var ndx = this.plte_offs + 8 + 3 * this.pindex;\r\n            this.buffer[ndx + 0] = String.fromCharCode(red);\r\n            this.buffer[ndx + 1] = String.fromCharCode(green);\r\n            this.buffer[ndx + 2] = String.fromCharCode(blue);\r\n            this.buffer[this.trns_offs + 8 + this.pindex] = String.fromCharCode(alpha);\r\n            this.palette[color] = String.fromCharCode(this.pindex++);\r\n        }\r\n        return this.palette[color];\r\n    };\r\n    // output a PNG string, Base64 encoded\r\n    this.getBase64 = function () {\r\n        var s = this.getDump();\r\n        var ch = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";\r\n        var c1, c2, c3, e1, e2, e3, e4;\r\n        var l = s.length;\r\n        var i = 0;\r\n        var r = "";\r\n        do {\r\n            c1 = s.charCodeAt(i);\r\n            e1 = c1 >> 2;\r\n            c2 = s.charCodeAt(i + 1);\r\n            e2 = ((c1 & 3) << 4) | (c2 >> 4);\r\n            c3 = s.charCodeAt(i + 2);\r\n            if (l < i + 2) {\r\n                e3 = 64;\r\n            }\r\n            else {\r\n                e3 = ((c2 & 0xf) << 2) | (c3 >> 6);\r\n            }\r\n            if (l < i + 3) {\r\n                e4 = 64;\r\n            }\r\n            else {\r\n                e4 = c3 & 0x3f;\r\n            }\r\n            r += ch.charAt(e1) + ch.charAt(e2) + ch.charAt(e3) + ch.charAt(e4);\r\n        } while ((i += 3) < l);\r\n        return r;\r\n    };\r\n    // output a PNG string\r\n    this.getDump = function () {\r\n        // compute adler32 of output pixels + row filter bytes\r\n        var BASE = 65521; /* largest prime smaller than 65536 */\r\n        var NMAX = 5552; /* NMAX is the largest n such that 255n(n+1)/2 + (n+1)(BASE-1) <= 2^32-1 */\r\n        var s1 = 1;\r\n        var s2 = 0;\r\n        var n = NMAX;\r\n        for (var y = 0; y < this.height; y++) {\r\n            for (var x = -1; x < this.width; x++) {\r\n                s1 += this.buffer[this.index(x, y)].charCodeAt(0);\r\n                s2 += s1;\r\n                if ((n -= 1) == 0) {\r\n                    s1 %= BASE;\r\n                    s2 %= BASE;\r\n                    n = NMAX;\r\n                }\r\n            }\r\n        }\r\n        s1 %= BASE;\r\n        s2 %= BASE;\r\n        write(this.buffer, this.idat_offs + this.idat_size - 8, byte4((s2 << 16) | s1));\r\n        // compute crc32 of the PNG chunks\r\n        function crc32(png, offs, size) {\r\n            var crc = -1;\r\n            for (var i = 4; i < size - 4; i += 1) {\r\n                crc = _crc32[(crc ^ png[offs + i].charCodeAt(0)) & 0xff] ^ ((crc >> 8) & 0x00ffffff);\r\n            }\r\n            write(png, offs + size - 4, byte4(crc ^ -1));\r\n        }\r\n        crc32(this.buffer, this.ihdr_offs, this.ihdr_size);\r\n        crc32(this.buffer, this.plte_offs, this.plte_size);\r\n        crc32(this.buffer, this.trns_offs, this.trns_size);\r\n        crc32(this.buffer, this.idat_offs, this.idat_size);\r\n        crc32(this.buffer, this.iend_offs, this.iend_size);\r\n        // convert PNG to string\r\n        return "\\211PNG\\r\\n\\032\\n" + this.buffer.join(\'\');\r\n    };\r\n};\r\nvar ecl = parentLevel ? qrcodegen.QrCode.Ecc[parentLevel] : qrcodegen.QrCode.Ecc.LOW;\r\nvar text = qrString;\r\nvar segs = qrcodegen.QrSegment.makeSegments(text);\r\nvar qr = qrcodegen.QrCode.encodeSegments(segs, ecl);\r\ncomponents.EdtrComp_2.width = qr.size * imagesize;\r\ncomponents.EdtrComp_2.height = qr.size * imagesize;\r\nvar p = new PNGlib(qr.size * imagesize, qr.size * imagesize, 256);\r\nfor (var x = 0; x < qr.size * imagesize; x++) {\r\n    for (var y = 0; y < qr.size * imagesize; y++) {\r\n        p.buffer[p.index(Math.floor(x), Math.floor(y))] = qr.getModule(Math.floor(x / imagesize), Math.floor(y / imagesize)) ? p.color(0xff, 0xff, 0xff, 0xff) : p.color(0, 0, 0, 0xff);\r\n    }\r\n}\r\ncomponents.EdtrComp_2.src = "data:image/png;base64," + p.getBase64() + "";\r\n',C:!0,HL:"JS"},setProps:{H:'var _a, _b, _c;\r\nObject.defineProperty(exports, "__esModule", { value: true });\r\nvar parentSize;\r\nvar parentContent;\r\nvar parentLevel;\r\ntry {\r\n    parentSize = size;\r\n}\r\ncatch (ex) { }\r\ntry {\r\n    parentContent = content;\r\n}\r\ncatch (ex) { }\r\ntry {\r\n    parentLevel = level;\r\n}\r\ncatch (ex) { }\r\nquick.MM.trigger("createQRCode", [{\r\n        parentSize: parentSize || ((_a = quick.parent.props) === null || _a === void 0 ? void 0 : _a.size),\r\n        parentContent: parentContent || ((_b = quick.parent.props) === null || _b === void 0 ? void 0 : _b.content),\r\n        parentLevel: parentLevel || ((_c = quick.parent.props) === null || _c === void 0 ? void 0 : _c.level)\r\n    }]);\r\n',C:!0,EV:!0,HL:"JS"},getQRCode:{H:'Object.defineProperty(exports, "__esModule", { value: true });\r\nquick.return(components.EdtrComp_2.src);\r\n',C:!0,EV:!0,HL:"JS"}},C:{},_Editor:{eID:"EdtrComp_1"},O:{cType:"child",compDomClasses:"newDropBorder"}},{T:"VImg",P:{ID:{H:"EdtrComp_2",T:"prop"},eager:{H:"╬true╩╩",T:"prop"},height:{H:"╬'200'╩╩",T:"prop"},width:{H:"╬'200'╩╩",T:"prop"},visible:{H:"╬true╩╩",T:"prop"}},E:{},C:{},_Editor:{eID:"EdtrComp_2"},O:{cType:"slot",compDomClasses:"v-image v-responsive theme--light"}}],lrids:{},clrids:{},opt:{}}}}]);