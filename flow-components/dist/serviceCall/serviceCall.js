!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.flowcomponent=t():e.flowcomponent=t()}(this,(()=>(()=>{"use strict";var e,t={d:(e,r)=>{for(var o in r)t.o(r,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:r[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},r={};t.r(r),t.d(r,{default:()=>m}),e={boolean:!0,datetime:!0,enum:!0,number:!0,dataType:!0,string:!0,constant:!0,any:!0},Object.keys(e);const o="context",n="output",a="vars";function s(e,t){switch(e){case"'":case'"':return[e,t+1];default:return[void 0,t]}}function c(e,t){if(null!=e)return e[t]}function u(e,t){let r=t;const o=e.length;let n,a="",u=!1;for(var i=0;i<o;i++){let t=e[i];if(u)n==t||"]"==t&&!n?(n&&i++,r=c(r,a),a="",u=!1):a+=t;else switch(t){case".":a&&(r=c(r,a)),a="";break;case"[":a&&(r=c(r,a)),a="",[n,i]=s(e[i+1],i),u=!0;break;default:a+=t}}return a&&(r=c(r,a)),r}const i=function(e){return e.client?"client":e.server?"server":"workflow"},l=function(e,t,r){switch(null==e?void 0:e.type){case"boolean":return"true"==e.value;case"input":return u(e.value,t.input);case o:if(!r.workflow)throw new Error("can not retrieve from Context in "+i(r)+". You can only retrieve Context in workflow.");return u(e.value,r.workflow.context());case a:return u(e.value,t.vars);case n:return u(e.value,t.output);case"constant":if(!r.workflow)throw new Error("can not retrieve from Constants in "+i(r)+". You can only retrieve Constants in workflow.");return u(e.value,r.workflow.constantsWId);case"number":return Number(e.value);case"string":return e.value;case"literal":return function(e,t,r){const o=Object.create(null),{input:n,vars:a,output:s}=t,c=function(e){const{workflow:t,client:r,server:o}=e;if(t)return{type:"workflow",...t.context()||{action:void 0},constants:t.constantsWId};if(r)return{type:"client"};if(o)return{type:"server"};throw new Error("WTF: where are you executing this flow ???")}(r),u={input:n,vars:a,output:s,context:c},i=new Function("window","global","globalThis","flow","document","XMLHttpRequest","fetch","setInterval","navigator",`return \`${e}\`;`).apply(o,[o,o,o,u,void 0,void 0,void 0,void 0,void 0]);return"null"===i?null:i}(e.value,t,r);case"notSet":return;case"enum":return e.value}};class f extends Error{constructor(e){super(e.message),this.name=f.FlowErrorName,e.stack&&(this.stack=e.stack),this.type=e.type,this.code=e.code,this.summary=e.summary,this.parameters=e.parameters,this.category=e.category,this.detail=e.detail}static isFlowError(e){return e instanceof f||e.name==f.FlowErrorName}}function w(e,t){switch(e){case"'":case'"':return[e,t+1];default:return[void 0,t]}}function p(e,t,r){if("other"==r.type){if("object"!=typeof e)return;return e[t]=r.value}let o=e[t];return void 0!==o?o:e[t]="array"==r.type?[]:{}}function d(e,t){switch(e[t]){case'"':case"'":return"object";default:return"array"}}function v(e,t,r){let o=r;const n=e.length;let a,s="",c=!1;for(var u=0;u<n;u++){let r=e[u];if(c)if(a==r||"]"==r&&!a){let r;switch(a&&u++,e[u+1]){case"[":r={type:d(e,u+2)};break;case".":r={type:"object"};break;case void 0:r={type:"other",value:t};break;default:throw new Error("unexpected set msg")}o=p(o,s,r),s="",c=!1}else s+=r;else switch(r){case".":s&&(o=p(o,s,{type:"object"})),s="";break;case"[":s&&(o=p(o,s,{type:d(e,u+1)})),s="",[a,u]=w(e[u+1],u),c=!0;break;default:s+=r}}return s&&(o=p(o,s,{type:"other",value:t})),o}f.FlowErrorName="FlowRuntimeError_ae24";const y=function(e,t,r,s){switch(e.type){case o:if(null==t)return;if(!s.workflow)throw new Error("can not set to Context in "+function(e){return e.client?"client":e.server?"server":"workflow"}(s)+". You can only set to Context in workflow.");const c=s.workflow.context();if(!c)throw new Error("can not set to workflow context as context is undefined");v(e.value,t,c);break;case a:v(e.value,t,r.vars);break;case n:r.output=r.output||{},e.value?v(e.value,t,r.output):Object.keys(t).forEach((e=>r.output[e]=t[e]));break;case"info":if(!t)return;let u;switch(typeof t){case"number":case"string":u={category:"info",code:"NoCode",message:t.toString()};break;case"object":u={category:t.category,code:t.code,message:t.message,parameters:t.parameters,source:t.source,summary:t.summary};break;default:return}r.infoList=r.infoList||[],r.infoList.push(u);break;case"error":if(!t)return;switch(typeof t){case"number":case"string":throw new f({type:"technical",message:t.toString(),code:"NoCode",category:"error"});case"object":throw new f({type:"business"==t.type?"business":"technical",message:t.message||"no message",code:t.code||"NoCode",summary:t.summary,parameters:t.parameters,category:t.category||"error"});default:return}}},m=async e=>{if(e.flow.getServer())throw new Error("serviceCall can not YET execute on server environments");const t=e.flow.getClient();if(!t)throw new Error("serviceCall can not execute on environments without client");const{headers:r,body:o,responseField:n}=e.props,a=e.flow.evalGet(e.props.url,l),s=e.flow.evalGet(e.props.method,l).toLowerCase(),c=o?e.flow.evalGet(o,l):void 0;let u;switch(r&&(u=Object.keys(r).reduce(((t,o)=>{const n=e.flow.evalGet(r[o],l);return void 0===n||(t[o]=n.toString()),t}),{})),s){default:throw new Error("unsupported serviceCall method: "+s);case"get":case"post":}const i=await t.request({method:s,url:a,headers:u,queryString:void 0,body:c});n&&e.flow.evalSet(n,i,y),e.flow.next()};return r})()));