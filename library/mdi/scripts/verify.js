const fs=require("fs"),packageFile="./package.json",packageText=fs.readFileSync(packageFile,"utf8"),packageJson=JSON.parse(packageText),packageVersion=packageJson.version,previewFile="./preview.html";if(!fs.existsSync(previewFile))throw new Error("Error: preview.html must exist!");const previewText=fs.readFileSync(previewFile,"utf8"),parts=previewText.match(/<span class="version">([^<]+)<\/span>/);if(null===parts)throw new Error("Error: preview.html version string not found!");const indexFile="./index.html";if(fs.existsSync(indexFile))throw new Error("Error: index.html should not exist, only preview.html");const previewVersion=parts[1];if(packageVersion!=previewVersion)throw new Error(`Error: package "${packageVersion}" != preview.html "${previewVersion}"`);const scssVariablesFile="./scss/_variables.scss",scssVariablesText=fs.readFileSync(scssVariablesFile,"utf8"),vParts=scssVariablesText.match(/"(\d+).(\d+).(\d+)" !default;/);if(null===vParts)throw new Error("Error: Could not parse SCSS version!");const scssVersion=`${vParts[1]}.${vParts[2]}.${vParts[3]}`;if(packageVersion!=scssVersion)throw new Error(`Error: package "${packageVersion}" != scss/variables.scss "${previewVersion}"`);console.log(`Success: ${packageVersion} looks good!`);