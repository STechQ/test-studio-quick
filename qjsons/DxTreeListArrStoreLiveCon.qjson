let pjson = {
	"pJson": [
		{
			"T": "Messaging",
			"P": {
				"ID": {
					"H": "EdtrComp_2",
					"T": "prop"
				}
			},
			"E": {
				"setArrayStore": {
					"H": "var dxDataGridArray: Array<{ product_id, trade_id, price, size, items }> = [];\r\nvar dxDataGridArrayStore: any = null;\r\n\r\nif (!quick.store.get('dxDataGridArray')) {\r\n  dxDataGridArray = [\r\n    {\r\n      product_id: 'ETH-USD',\r\n      trade_id: 0,      \r\n      price: 0,\r\n      size: 0,\r\n      items: [{\r\n        product_id: 'BTC-USD',\r\n        trade_id: 1,      \r\n        price: 1,\r\n        size: 1,\r\n      }]\r\n    },\r\n  ];\r\n  quick.store.set('dxDataGridArray', dxDataGridArray);\r\n}\r\nelse {\r\n  dxDataGridArray = quick.store.get('dxDataGridArray');\r\n}\r\n\r\nif (!quick.store.get('dxDataGridArrayStore')) {\r\n  dxDataGridArrayStore = quick.devex.createArrayStore({\r\n    key: \"product_id\",\r\n    data: dxDataGridArray\r\n  });\r\n  quick.store.set('dxDataGridArrayStore', dxDataGridArrayStore);\r\n}\r\nelse {\r\n  dxDataGridArrayStore = quick.store.get('dxDataGridArrayStore');\r\n}\r\n\r\nquick.return({ dxDataGridArrayStore, dxDataGridArray });\r\n",
					"C": true,
					"HL": "TS"
				}
			},
			"C": {},
			"_Editor": {
				"eID": "EdtrComp_2"
			},
			"O": {
				"cType": "child"
			}
		},
		{
			"T": "LiveConnection",
			"P": {
				"ID": {
					"H": "EdtrComp_1",
					"T": "prop"
				},
				"autoConnect": {
					"H": "false",
					"T": "prop"
				},
				"enableIamAuth": {
					"H": "false",
					"T": "prop"
				},
				"reconnect": {
					"H": "false",
					"T": "prop"
				},
				"reconnectInterval": {
					"H": "60",
					"T": "prop"
				},
				"reconnectBackOff": {
					"H": "false",
					"T": "prop"
				},
				"url": {
					"H": "'/ws-feed.pro.coinbase.com'",
					"T": "prop"
				},
				"secure": {
					"H": "true",
					"T": "prop"
				}
			},
			"E": {
				"onMessageReceived": {
					"H": "var retVal: { dxDataGridArrayStore, dxDataGridArray } = quick.MM.trigger('setArrayStore');\r\nlet aStore = retVal.dxDataGridArrayStore;\r\nlet arr = retVal.dxDataGridArray;\r\nquick.EM.trace(message);\r\n\r\ncomponents.EdtrComp_64.dataSource = aStore;\r\n\r\n\r\n\r\n\r\naStore.push([{\r\n  type: 'update',\r\n  key: (message as any).product_id,\r\n  data: {\r\n    product_id: (message as any).product_id,\r\n    trade_id: (message as any).trade_id,      \r\n    price: (message as any).price,\r\n    size: (message as any).size,\r\n  },\r\n  }]);\r\n\r\n\r\n\r\n\r\n\r\n\r\nquick.Quick.updateComponent(components.EdtrComp_64);\r\n(components.EdtrComp_64 as any).loadPanel = false;",
					"P": "message:string",
					"HL": "TS"
				}
			},
			"C": {},
			"_Editor": {
				"eID": "EdtrComp_1"
			},
			"O": {
				"cType": "slot"
			}
		},
		{
			"T": "DxTreeList",
			"P": {
				"ID": {
					"H": "EdtrComp_64",
					"T": "prop"
				},
				"columnAutoWidth": {
					"H": "false",
					"T": "prop"
				},
				"showColumnLines": {
					"H": "true",
					"T": "prop"
				},
				"showRowLines": {
					"H": "true",
					"T": "prop"
				},
				"itemsExpr": {
					"H": "'items'",
					"T": "prop"
				},
				"dataStructure": {
					"H": "'tree'",
					"T": "prop"
				},
				"highlightChanges": {
					"H": "true",
					"T": "prop"
				},
				"repaintChangesOnly": {
					"H": "true",
					"T": "prop"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "DxColumn",
							"P": {
								"cellTemplate": {
									"H": "product_id",
									"T": "prop"
								},
								"dataField": {
									"H": "'product_id'",
									"T": "prop"
								},
								"ID": {
									"H": "EdtrComp_3",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_3"
							},
							"O": {
								"cType": "slot"
							}
						},
						{
							"T": "DxColumn",
							"P": {
								"cellTemplate": {
									"H": "trade_id",
									"T": "prop"
								},
								"dataField": {
									"H": "'trade_id'",
									"T": "prop"
								},
								"ID": {
									"H": "EdtrComp_4",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_4"
							},
							"O": {
								"cType": "slot"
							}
						},
						{
							"T": "DxColumn",
							"P": {
								"cellTemplate": {
									"H": "price",
									"T": "prop"
								},
								"dataField": {
									"H": "'price'",
									"T": "prop"
								},
								"ID": {
									"H": "EdtrComp_5",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_5"
							},
							"O": {
								"cType": "slot"
							}
						},
						{
							"T": "DxColumn",
							"P": {
								"cellTemplate": {
									"H": "size",
									"T": "prop"
								},
								"dataField": {
									"H": "'size'",
									"T": "prop"
								},
								"ID": {
									"H": "EdtrComp_6",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_6"
							},
							"O": {
								"cType": "slot"
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_128"
			},
			"O": {
				"cType": "scopedSlot",
				"forceUpdateAfterPropertySetting": true
			}
		},
		{
			"T": "VBtn",
			"P": {
				"ID": {
					"H": "EdtrComp_18",
					"T": "prop"
				},
				"color": {
					"H": "'primary'",
					"T": "prop"
				},
				"depressed": {
					"H": "true",
					"T": "prop"
				},
				"elevation": {
					"H": "0",
					"T": "prop"
				},
				"height": {
					"H": "'40px'",
					"T": "prop"
				},
				"visible": {
					"H": "true",
					"T": "prop"
				}
			},
			"E": {
				"click": {
					"H": "//Send socket subscription message on button clicked\r\n//Send() method opens connection if closed and enqueues data to be transmitted.\r\n\r\nlet tradeSubscription = {};\r\n(tradeSubscription as any).type = 'subscribe';\r\n(tradeSubscription as any).product_ids = ['BTC-USD','ETH-USD','ETH-EUR'];\r\n\r\n(tradeSubscription as any).channels = ['matches'];\r\n\r\nlet tickerChannel = {};\r\n(tickerChannel as any).name = 'ticker';\r\n(tickerChannel as any).product_ids = ['BTC-USD','ETH-USD','ETH-EUR'];\r\n\r\ncomponents.EdtrComp_1.message = tradeSubscription;\r\n(components.EdtrComp_1 as any).Send();",
					"P": "mouseEvent:unknown | undefined",
					"HL": "TS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "QLabel",
							"C": {},
							"E": {},
							"P": {
								"ID": {
									"H": "EdtrComp_19",
									"T": "prop"
								},
								"text": {
									"H": "'Connect'",
									"T": "prop"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_19"
							},
							"O": {
								"cType": "child"
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_18"
			},
			"O": {
				"cType": "slot"
			}
		}
	],
	"cJson": [
		{
			"T": "Messaging",
			"P": {
				"ID": {
					"H": "EdtrComp_2",
					"T": "prop"
				}
			},
			"E": {
				"setArrayStore": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\nvar dxDataGridArray = [];\r\nvar dxDataGridArrayStore = null;\r\nif (!quick.store.get('dxDataGridArray')) {\r\n    dxDataGridArray = [\r\n        {\r\n            product_id: 'ETH-USD',\r\n            trade_id: 0,\r\n            price: 0,\r\n            size: 0,\r\n            items: [{\r\n                    product_id: 'BTC-USD',\r\n                    trade_id: 1,\r\n                    price: 1,\r\n                    size: 1,\r\n                }]\r\n        },\r\n    ];\r\n    quick.store.set('dxDataGridArray', dxDataGridArray);\r\n}\r\nelse {\r\n    dxDataGridArray = quick.store.get('dxDataGridArray');\r\n}\r\nif (!quick.store.get('dxDataGridArrayStore')) {\r\n    dxDataGridArrayStore = quick.devex.createArrayStore({\r\n        key: \"product_id\",\r\n        data: dxDataGridArray\r\n    });\r\n    quick.store.set('dxDataGridArrayStore', dxDataGridArrayStore);\r\n}\r\nelse {\r\n    dxDataGridArrayStore = quick.store.get('dxDataGridArrayStore');\r\n}\r\nquick.return({ dxDataGridArrayStore: dxDataGridArrayStore, dxDataGridArray: dxDataGridArray });\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRWR0ckNvbXBfMl9zZXRBcnJheVN0b3JlX0UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJFZHRyQ29tcF8yX3NldEFycmF5U3RvcmVfRS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQ0EsSUFBSSxlQUFlLEdBQXdELEVBQUUsQ0FBQztBQUM5RSxJQUFJLG9CQUFvQixHQUFRLElBQUksQ0FBQztBQUVyQyxJQUFJLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsaUJBQWlCLENBQUMsRUFBRTtJQUN2QyxlQUFlLEdBQUc7UUFDaEI7WUFDRSxVQUFVLEVBQUUsU0FBUztZQUNyQixRQUFRLEVBQUUsQ0FBQztZQUNYLEtBQUssRUFBRSxDQUFDO1lBQ1IsSUFBSSxFQUFFLENBQUM7WUFDUCxLQUFLLEVBQUUsQ0FBQztvQkFDTixVQUFVLEVBQUUsU0FBUztvQkFDckIsUUFBUSxFQUFFLENBQUM7b0JBQ1gsS0FBSyxFQUFFLENBQUM7b0JBQ1IsSUFBSSxFQUFFLENBQUM7aUJBQ1IsQ0FBQztTQUNIO0tBQ0YsQ0FBQztJQUNGLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLGlCQUFpQixFQUFFLGVBQWUsQ0FBQyxDQUFDO0NBQ3JEO0tBQ0k7SUFDSCxlQUFlLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsaUJBQWlCLENBQUMsQ0FBQztDQUN0RDtBQUVELElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxzQkFBc0IsQ0FBQyxFQUFFO0lBQzVDLG9CQUFvQixHQUFHLEtBQUssQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLENBQUM7UUFDbEQsR0FBRyxFQUFFLFlBQVk7UUFDakIsSUFBSSxFQUFFLGVBQWU7S0FDdEIsQ0FBQyxDQUFDO0lBQ0gsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsc0JBQXNCLEVBQUUsb0JBQW9CLENBQUMsQ0FBQztDQUMvRDtLQUNJO0lBQ0gsb0JBQW9CLEdBQUcsS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsc0JBQXNCLENBQUMsQ0FBQztDQUNoRTtBQUVELEtBQUssQ0FBQyxNQUFNLENBQUMsRUFBRSxvQkFBb0Isc0JBQUEsRUFBRSxlQUFlLGlCQUFBLEVBQUUsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiXG52YXIgZHhEYXRhR3JpZEFycmF5OiBBcnJheTx7IHByb2R1Y3RfaWQsIHRyYWRlX2lkLCBwcmljZSwgc2l6ZSwgaXRlbXMgfT4gPSBbXTtcclxudmFyIGR4RGF0YUdyaWRBcnJheVN0b3JlOiBhbnkgPSBudWxsO1xyXG5cclxuaWYgKCFxdWljay5zdG9yZS5nZXQoJ2R4RGF0YUdyaWRBcnJheScpKSB7XHJcbiAgZHhEYXRhR3JpZEFycmF5ID0gW1xyXG4gICAge1xyXG4gICAgICBwcm9kdWN0X2lkOiAnRVRILVVTRCcsXHJcbiAgICAgIHRyYWRlX2lkOiAwLCAgICAgIFxyXG4gICAgICBwcmljZTogMCxcclxuICAgICAgc2l6ZTogMCxcclxuICAgICAgaXRlbXM6IFt7XHJcbiAgICAgICAgcHJvZHVjdF9pZDogJ0JUQy1VU0QnLFxyXG4gICAgICAgIHRyYWRlX2lkOiAxLCAgICAgIFxyXG4gICAgICAgIHByaWNlOiAxLFxyXG4gICAgICAgIHNpemU6IDEsXHJcbiAgICAgIH1dXHJcbiAgICB9LFxyXG4gIF07XHJcbiAgcXVpY2suc3RvcmUuc2V0KCdkeERhdGFHcmlkQXJyYXknLCBkeERhdGFHcmlkQXJyYXkpO1xyXG59XHJcbmVsc2Uge1xyXG4gIGR4RGF0YUdyaWRBcnJheSA9IHF1aWNrLnN0b3JlLmdldCgnZHhEYXRhR3JpZEFycmF5Jyk7XHJcbn1cclxuXHJcbmlmICghcXVpY2suc3RvcmUuZ2V0KCdkeERhdGFHcmlkQXJyYXlTdG9yZScpKSB7XHJcbiAgZHhEYXRhR3JpZEFycmF5U3RvcmUgPSBxdWljay5kZXZleC5jcmVhdGVBcnJheVN0b3JlKHtcclxuICAgIGtleTogXCJwcm9kdWN0X2lkXCIsXHJcbiAgICBkYXRhOiBkeERhdGFHcmlkQXJyYXlcclxuICB9KTtcclxuICBxdWljay5zdG9yZS5zZXQoJ2R4RGF0YUdyaWRBcnJheVN0b3JlJywgZHhEYXRhR3JpZEFycmF5U3RvcmUpO1xyXG59XHJcbmVsc2Uge1xyXG4gIGR4RGF0YUdyaWRBcnJheVN0b3JlID0gcXVpY2suc3RvcmUuZ2V0KCdkeERhdGFHcmlkQXJyYXlTdG9yZScpO1xyXG59XHJcblxyXG5xdWljay5yZXR1cm4oeyBkeERhdGFHcmlkQXJyYXlTdG9yZSwgZHhEYXRhR3JpZEFycmF5IH0pO1xyXG5cbiBleHBvcnR7fTtcbiJdfQ==",
					"C": true,
					"HL": "JS"
				}
			},
			"C": {},
			"_Editor": {
				"eID": "EdtrComp_2"
			},
			"O": {
				"cType": "child",
				"compDomClasses": "newDropBorder"
			}
		},
		{
			"T": "LiveConnection",
			"P": {
				"ID": {
					"H": "EdtrComp_1",
					"T": "prop"
				},
				"autoConnect": {
					"H": "╬false╩╩",
					"T": "prop"
				},
				"enableIamAuth": {
					"H": "╬false╩╩",
					"T": "prop"
				},
				"reconnect": {
					"H": "╬false╩╩",
					"T": "prop"
				},
				"reconnectInterval": {
					"H": "╬60╩╩",
					"T": "prop"
				},
				"reconnectBackOff": {
					"H": "╬false╩╩",
					"T": "prop"
				},
				"url": {
					"H": "╬'/ws-feed.pro.coinbase.com'╩╩",
					"T": "prop"
				},
				"secure": {
					"H": "╬true╩╩",
					"T": "prop"
				}
			},
			"E": {
				"onMessageReceived": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\nvar retVal = quick.MM.trigger('setArrayStore');\r\nvar aStore = retVal.dxDataGridArrayStore;\r\nvar arr = retVal.dxDataGridArray;\r\nquick.EM.trace(message);\r\ncomponents.EdtrComp_64.dataSource = aStore;\r\naStore.push([{\r\n        type: 'update',\r\n        key: message.product_id,\r\n        data: {\r\n            product_id: message.product_id,\r\n            trade_id: message.trade_id,\r\n            price: message.price,\r\n            size: message.size,\r\n        },\r\n    }]);\r\nquick.Quick.updateComponent(components.EdtrComp_64);\r\ncomponents.EdtrComp_64.loadPanel = false;\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRWR0ckNvbXBfMV9vbk1lc3NhZ2VSZWNlaXZlZF9FLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiRWR0ckNvbXBfMV9vbk1lc3NhZ2VSZWNlaXZlZF9FLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxJQUFJLE1BQU0sR0FBOEMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxPQUFPLENBQUMsZUFBZSxDQUFDLENBQUM7QUFDMUYsSUFBSSxNQUFNLEdBQUcsTUFBTSxDQUFDLG9CQUFvQixDQUFDO0FBQ3pDLElBQUksR0FBRyxHQUFHLE1BQU0sQ0FBQyxlQUFlLENBQUM7QUFDakMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLENBQUM7QUFFeEIsVUFBVSxDQUFDLFdBQVcsQ0FBQyxVQUFVLEdBQUcsTUFBTSxDQUFDO0FBSzNDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQztRQUNYLElBQUksRUFBRSxRQUFRO1FBQ2QsR0FBRyxFQUFHLE9BQWUsQ0FBQyxVQUFVO1FBQ2hDLElBQUksRUFBRTtZQUNKLFVBQVUsRUFBRyxPQUFlLENBQUMsVUFBVTtZQUN2QyxRQUFRLEVBQUcsT0FBZSxDQUFDLFFBQVE7WUFDbkMsS0FBSyxFQUFHLE9BQWUsQ0FBQyxLQUFLO1lBQzdCLElBQUksRUFBRyxPQUFlLENBQUMsSUFBSTtTQUM1QjtLQUNBLENBQUMsQ0FBQyxDQUFDO0FBT04sS0FBSyxDQUFDLEtBQUssQ0FBQyxlQUFlLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ25ELFVBQVUsQ0FBQyxXQUFtQixDQUFDLFNBQVMsR0FBRyxLQUFLLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJkZWNsYXJlIHZhciBtZXNzYWdlOnN0cmluZ1xudmFyIHJldFZhbDogeyBkeERhdGFHcmlkQXJyYXlTdG9yZSwgZHhEYXRhR3JpZEFycmF5IH0gPSBxdWljay5NTS50cmlnZ2VyKCdzZXRBcnJheVN0b3JlJyk7XHJcbmxldCBhU3RvcmUgPSByZXRWYWwuZHhEYXRhR3JpZEFycmF5U3RvcmU7XHJcbmxldCBhcnIgPSByZXRWYWwuZHhEYXRhR3JpZEFycmF5O1xyXG5xdWljay5FTS50cmFjZShtZXNzYWdlKTtcclxuXHJcbmNvbXBvbmVudHMuRWR0ckNvbXBfNjQuZGF0YVNvdXJjZSA9IGFTdG9yZTtcclxuXHJcblxyXG5cclxuXHJcbmFTdG9yZS5wdXNoKFt7XHJcbiAgdHlwZTogJ3VwZGF0ZScsXHJcbiAga2V5OiAobWVzc2FnZSBhcyBhbnkpLnByb2R1Y3RfaWQsXHJcbiAgZGF0YToge1xyXG4gICAgcHJvZHVjdF9pZDogKG1lc3NhZ2UgYXMgYW55KS5wcm9kdWN0X2lkLFxyXG4gICAgdHJhZGVfaWQ6IChtZXNzYWdlIGFzIGFueSkudHJhZGVfaWQsICAgICAgXHJcbiAgICBwcmljZTogKG1lc3NhZ2UgYXMgYW55KS5wcmljZSxcclxuICAgIHNpemU6IChtZXNzYWdlIGFzIGFueSkuc2l6ZSxcclxuICB9LFxyXG4gIH1dKTtcclxuXHJcblxyXG5cclxuXHJcblxyXG5cclxucXVpY2suUXVpY2sudXBkYXRlQ29tcG9uZW50KGNvbXBvbmVudHMuRWR0ckNvbXBfNjQpO1xyXG4oY29tcG9uZW50cy5FZHRyQ29tcF82NCBhcyBhbnkpLmxvYWRQYW5lbCA9IGZhbHNlO1xuIGV4cG9ydHt9O1xuIl19",
					"P": "message:string",
					"HL": "JS"
				}
			},
			"C": {},
			"_Editor": {
				"eID": "EdtrComp_1"
			},
			"O": {
				"cType": "slot",
				"compDomClasses": "newDropBorder"
			}
		},
		{
			"T": "DxTreeList",
			"P": {
				"ID": {
					"H": "EdtrComp_64",
					"T": "prop"
				},
				"columnAutoWidth": {
					"H": "╬false╩╩",
					"T": "prop"
				},
				"showColumnLines": {
					"H": "╬true╩╩",
					"T": "prop"
				},
				"showRowLines": {
					"H": "╬true╩╩",
					"T": "prop"
				},
				"itemsExpr": {
					"H": "╬'items'╩╩",
					"T": "prop"
				},
				"dataStructure": {
					"H": "╬'tree'╩╩",
					"T": "prop"
				},
				"highlightChanges": {
					"H": "╬true╩╩",
					"T": "prop"
				},
				"repaintChangesOnly": {
					"H": "╬true╩╩",
					"T": "prop"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "DxColumn",
							"P": {
								"cellTemplate": {
									"H": "╬product_id╩╩",
									"T": "prop"
								},
								"dataField": {
									"H": "╬'product_id'╩╩",
									"T": "prop"
								},
								"ID": {
									"H": "EdtrComp_3",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_3"
							},
							"O": {
								"cType": "slot",
								"compDomClasses": ""
							}
						},
						{
							"T": "DxColumn",
							"P": {
								"cellTemplate": {
									"H": "╬trade_id╩╩",
									"T": "prop"
								},
								"dataField": {
									"H": "╬'trade_id'╩╩",
									"T": "prop"
								},
								"ID": {
									"H": "EdtrComp_4",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_4"
							},
							"O": {
								"cType": "slot",
								"compDomClasses": ""
							}
						},
						{
							"T": "DxColumn",
							"P": {
								"cellTemplate": {
									"H": "╬price╩╩",
									"T": "prop"
								},
								"dataField": {
									"H": "╬'price'╩╩",
									"T": "prop"
								},
								"ID": {
									"H": "EdtrComp_5",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_5"
							},
							"O": {
								"cType": "slot",
								"compDomClasses": ""
							}
						},
						{
							"T": "DxColumn",
							"P": {
								"cellTemplate": {
									"H": "╬size╩╩",
									"T": "prop"
								},
								"dataField": {
									"H": "╬'size'╩╩",
									"T": "prop"
								},
								"ID": {
									"H": "EdtrComp_6",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_6"
							},
							"O": {
								"cType": "slot",
								"compDomClasses": ""
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_128"
			},
			"O": {
				"cType": "scopedSlot",
				"forceUpdateAfterPropertySetting": true,
				"compDomClasses": "dx-widget dx-visibility-change-handler dx-treelist newDropBorder"
			}
		},
		{
			"T": "VBtn",
			"P": {
				"ID": {
					"H": "EdtrComp_18",
					"T": "prop"
				},
				"color": {
					"H": "╬'primary'╩╩",
					"T": "prop"
				},
				"depressed": {
					"H": "╬true╩╩",
					"T": "prop"
				},
				"elevation": {
					"H": "╬0╩╩",
					"T": "prop"
				},
				"height": {
					"H": "╬'40px'╩╩",
					"T": "prop"
				},
				"visible": {
					"H": "╬true╩╩",
					"T": "prop"
				}
			},
			"E": {
				"click": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n//Send socket subscription message on button clicked\r\n//Send() method opens connection if closed and enqueues data to be transmitted.\r\nvar tradeSubscription = {};\r\ntradeSubscription.type = 'subscribe';\r\ntradeSubscription.product_ids = ['BTC-USD', 'ETH-USD', 'ETH-EUR'];\r\ntradeSubscription.channels = ['matches'];\r\nvar tickerChannel = {};\r\ntickerChannel.name = 'ticker';\r\ntickerChannel.product_ids = ['BTC-USD', 'ETH-USD', 'ETH-EUR'];\r\ncomponents.EdtrComp_1.message = tradeSubscription;\r\ncomponents.EdtrComp_1.Send();\r\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRWR0ckNvbXBfMThfY2xpY2tfRS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIkVkdHJDb21wXzE4X2NsaWNrX0UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUNBLG9EQUFvRDtBQUNwRCwrRUFBK0U7QUFFL0UsSUFBSSxpQkFBaUIsR0FBRyxFQUFFLENBQUM7QUFDMUIsaUJBQXlCLENBQUMsSUFBSSxHQUFHLFdBQVcsQ0FBQztBQUM3QyxpQkFBeUIsQ0FBQyxXQUFXLEdBQUcsQ0FBQyxTQUFTLEVBQUMsU0FBUyxFQUFDLFNBQVMsQ0FBQyxDQUFDO0FBRXhFLGlCQUF5QixDQUFDLFFBQVEsR0FBRyxDQUFDLFNBQVMsQ0FBQyxDQUFDO0FBRWxELElBQUksYUFBYSxHQUFHLEVBQUUsQ0FBQztBQUN0QixhQUFxQixDQUFDLElBQUksR0FBRyxRQUFRLENBQUM7QUFDdEMsYUFBcUIsQ0FBQyxXQUFXLEdBQUcsQ0FBQyxTQUFTLEVBQUMsU0FBUyxFQUFDLFNBQVMsQ0FBQyxDQUFDO0FBRXJFLFVBQVUsQ0FBQyxVQUFVLENBQUMsT0FBTyxHQUFHLGlCQUFpQixDQUFDO0FBQ2pELFVBQVUsQ0FBQyxVQUFrQixDQUFDLElBQUksRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZGVjbGFyZSB2YXIgbW91c2VFdmVudDp1bmtub3duIHwgdW5kZWZpbmVkXG4vL1NlbmQgc29ja2V0IHN1YnNjcmlwdGlvbiBtZXNzYWdlIG9uIGJ1dHRvbiBjbGlja2VkXHJcbi8vU2VuZCgpIG1ldGhvZCBvcGVucyBjb25uZWN0aW9uIGlmIGNsb3NlZCBhbmQgZW5xdWV1ZXMgZGF0YSB0byBiZSB0cmFuc21pdHRlZC5cclxuXHJcbmxldCB0cmFkZVN1YnNjcmlwdGlvbiA9IHt9O1xyXG4odHJhZGVTdWJzY3JpcHRpb24gYXMgYW55KS50eXBlID0gJ3N1YnNjcmliZSc7XHJcbih0cmFkZVN1YnNjcmlwdGlvbiBhcyBhbnkpLnByb2R1Y3RfaWRzID0gWydCVEMtVVNEJywnRVRILVVTRCcsJ0VUSC1FVVInXTtcclxuXHJcbih0cmFkZVN1YnNjcmlwdGlvbiBhcyBhbnkpLmNoYW5uZWxzID0gWydtYXRjaGVzJ107XHJcblxyXG5sZXQgdGlja2VyQ2hhbm5lbCA9IHt9O1xyXG4odGlja2VyQ2hhbm5lbCBhcyBhbnkpLm5hbWUgPSAndGlja2VyJztcclxuKHRpY2tlckNoYW5uZWwgYXMgYW55KS5wcm9kdWN0X2lkcyA9IFsnQlRDLVVTRCcsJ0VUSC1VU0QnLCdFVEgtRVVSJ107XHJcblxyXG5jb21wb25lbnRzLkVkdHJDb21wXzEubWVzc2FnZSA9IHRyYWRlU3Vic2NyaXB0aW9uO1xyXG4oY29tcG9uZW50cy5FZHRyQ29tcF8xIGFzIGFueSkuU2VuZCgpO1xuIGV4cG9ydHt9O1xuIl19",
					"P": "mouseEvent:unknown | undefined",
					"HL": "JS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "QLabel",
							"C": {},
							"E": {},
							"P": {
								"ID": {
									"H": "EdtrComp_19",
									"T": "prop"
								},
								"text": {
									"H": "╬'Connect'╩╩",
									"T": "prop"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_19"
							},
							"O": {
								"cType": "child",
								"compDomClasses": "q-label newDropBorder"
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_18"
			},
			"O": {
				"cType": "slot",
				"compDomClasses": "v-btn v-btn--depressed theme--light elevation-0 v-size--default primary newDropBorder"
			}
		}
	],
	"lrids": {},
	"clrids": {}
};
export default pjson