let pjson = {
	"pJson": [
		{
			"T": "VDataTable",
			"P": {
				"ID": {
					"H": "EdtrComp_3",
					"T": "prop"
				},
				"headers": {
					"H": "[{ text = 'Dessert (100g serving)', align= 'start', sortable= false, value= 'name'},\n{ text = 'Calories', value= 'calories', sortable = true },\n{ text = 'Fat (g)', value= 'fat' },\n{ text = 'Carbs (g)', value= 'carbs' },\n{ text = 'Protein (g)', value= 'protein' },\n{ text = 'Iron (%)', value= 'iron' }]",
					"T": "prop"
				},
				"items": {
					"H": " [{name = 'Frozens Yogurt', calories = 159, fat = '6.0', carbs = 24, protein = '4.0', iron = '1%'},\n{name = 'Ice cream sandwich', calories = 237, fat = '9.0', carbs = 37, protein = '4.3', iron = '1%'}]",
					"T": "prop"
				},
				"itemsPerPage": {
					"H": "5",
					"T": "prop"
				},
				"showSelect": {
					"H": "true",
					"T": "prop"
				},
				"itemKey": {
					"H": "'name'",
					"T": "prop"
				}
			},
			"E": {
				"item-selected": {
					"H": "quick.EM.trace(rowObj)\r\n",
					"P": "rowObj:IVDataTableItemSelect",
					"HL": "TS"
				}
			},
			"C": {
				"items.protein": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_4",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_4"
							},
							"O": {
								"cType": "child"
							}
						}
					],
					"cType": "scopedSlot"
				},
				"item.protein": {
					"c": [
						{
							"T": "QLabel",
							"P": {
								"ID": {
									"H": "EdtrComp_6",
									"T": "prop"
								},
								"text": {
									"H": "'template -> '+item.protein",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_6"
							},
							"O": {
								"cType": "child"
							}
						}
					],
					"cType": "scopedSlot"
				},
				"item.fat": {
					"c": [
						{
							"T": "VTextField",
							"P": {
								"ID": {
									"H": "EdtrComp_8",
									"T": "prop"
								},
								"readonly": {
									"H": "!item.selected",
									"T": "prop"
								},
								"value": {
									"H": "item.fat",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_8"
							},
							"O": {
								"cType": "child"
							}
						}
					],
					"cType": "scopedSlot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_3"
			},
			"O": {
				"cType": "child"
			}
		}
	],
	"cJson": [
		{
			"T": "VDataTable",
			"P": {
				"ID": {
					"H": "EdtrComp_3",
					"T": "prop"
				},
				"headers": {
					"H": "╬[]╠{}╠=╣text╩╠'Dessert (100g serving)'╩╩╠=╣align╩╠'start'╩╩╠=╣sortable╩╠false╩╩╠=╣value╩╠'name'╩╩╩╠{}╠=╣text╩╠'Calories'╩╩╠=╣value╩╠'calories'╩╩╠=╣sortable╩╠true╩╩╩╠{}╠=╣text╩╠'Fat (g)'╩╩╠=╣value╩╠'fat'╩╩╩╠{}╠=╣text╩╠'Carbs (g)'╩╩╠=╣value╩╠'carbs'╩╩╩╠{}╠=╣text╩╠'Protein (g)'╩╩╠=╣value╩╠'protein'╩╩╩╠{}╠=╣text╩╠'Iron (%)'╩╩╠=╣value╩╠'iron'╩╩╩╩╩",
					"T": "prop"
				},
				"items": {
					"H": "╬[]╠{}╠=╣name╩╠'Frozens Yogurt'╩╩╠=╣calories╩╠159╩╩╠=╣fat╩╠'6.0'╩╩╠=╣carbs╩╠24╩╩╠=╣protein╩╠'4.0'╩╩╠=╣iron╩╠'1%'╩╩╩╠{}╠=╣name╩╠'Ice cream sandwich'╩╩╠=╣calories╩╠237╩╩╠=╣fat╩╠'9.0'╩╩╠=╣carbs╩╠37╩╩╠=╣protein╩╠'4.3'╩╩╠=╣iron╩╠'1%'╩╩╩╩╩",
					"T": "prop"
				},
				"itemsPerPage": {
					"H": "╬5╩╩",
					"T": "prop"
				},
				"showSelect": {
					"H": "╬true╩╩",
					"T": "prop"
				},
				"itemKey": {
					"H": "╬'name'╩╩",
					"T": "prop"
				}
			},
			"E": {
				"item-selected": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\nquick.EM.trace(rowObj);\r\n",
					"P": "rowObj:IVDataTableItemSelect",
					"HL": "JS"
				}
			},
			"C": {
				"items.protein": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_4",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_4"
							},
							"O": {
								"cType": "child"
							}
						}
					],
					"cType": "scopedSlot"
				},
				"item.protein": {
					"c": [
						{
							"T": "QLabel",
							"P": {
								"ID": {
									"H": "EdtrComp_6",
									"T": "prop"
								},
								"text": {
									"H": "╬+╣'template -> '╩╠.╣item╩╠protein╩╩╩╩",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_6"
							},
							"O": {
								"cType": "child",
								"compDomClasses": "q-label newDropBorder"
							}
						}
					],
					"cType": "scopedSlot"
				},
				"item.fat": {
					"c": [
						{
							"T": "VTextField",
							"P": {
								"ID": {
									"H": "EdtrComp_8",
									"T": "prop"
								},
								"readonly": {
									"H": "╬!╠.╣item╩╠selected╩╩╩╩",
									"T": "prop"
								},
								"value": {
									"H": "╬.╣item╩╠fat╩╩╩",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_8"
							},
							"O": {
								"cType": "child",
								"compDomClasses": "v-input v-input--is-label-active v-input--is-dirty v-input--is-readonly theme--light v-text-field v-text-field--is-booted undefined newDropBorder"
							}
						}
					],
					"cType": "scopedSlot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_3"
			},
			"O": {
				"cType": "child",
				"compDomClasses": "v-data-table v-data-table--has-bottom theme--light newDropBorder"
			}
		}
	],
	"lrids": {},
	"clrids": {
		"tr-TR": {
			"label_yes": "╬'Evet'╩╩",
			"label_no": "╬'Hayır'╩╩",
			"label_create": "╬'Takvim Oluşturma'╩╩",
			"label_code": "╬'Takvim Kodu'╩╩",
			"label_name": "╬'Takvim İsmi'╩╩",
			"day1": "╬'Pazartesi'╩╩",
			"day3": "╬'Çarşamba'╩╩",
			"day4": "╬'Perşembe'╩╩",
			"day5": "╬'Cuma'╩╩",
			"day6": "╬'Cumartesi'╩╩",
			"day7": "╬'Pazar'╩╩",
			"holidayList": "╬'Tatil Listesi'╩╩",
			"uploadEx": "╬'Excel Yükle'╩╩",
			"exportEx": "╬'Excele Aktar'╩╩",
			"addHoliday": "╬'Yeni Tatil Ekle'╩╩",
			"tblYear": "╬'Yıl'╩╩",
			"tblMonth": "╬'Ay'╩╩",
			"tblDay": "╬'Gün'╩╩",
			"tblPageText": "╬'Satır Sayısı'╩╩",
			"tblAllText": "╬'Hepsi'╩╩",
			"tblType": "╬'Tatil Tipi'╩╩",
			"tblName": "╬'Tatil Adı'╩╩",
			"tblStatus": "╬'Tatil Statü'╩╩",
			"tblNoData": "╬'Veri Yok'╩╩",
			"btnSave": "╬'Kaydet'╩╩",
			"calendarDef": "╬'Takvim Tanımı: Bu bölümde tanımlanacak olan takvimin kodu, ismi ve statüsü ile birlikte girilmelidir.'╩╩",
			"workDef": "╬'Çalışma Günleri Tanımı: Bu bölümde çalışma günleri işaretlenmelidir.'╩╩",
			"holidayDef": "╬'Tatil Tanımlamaları: Bu bölümde takvim içerisinde yer almasını istediğiniz tatil günlerinin tanımı yapılmaktadır.'╩╩",
			"popUpHolidayDef": "╬'Yeni Tatil Tanımı'╩╩",
			"halfDayText": "╬'Tatil Yarım Gün Mü?'╩╩",
			"btnKapat": "╬'Kapat'╩╩",
			"labelSuc": "╬'Kayıt başarılı.'╩╩",
			"labelFail": "╬'Servis çağrısı hatası.'╩╩",
			"workDay": "╬'Çalışma Günleri'╩╩",
			"PENDING": "╬'Beklemede'╩╩",
			"PASSIVE": "╬'Pasif'╩╩",
			"CANCELLED": "╬'İptal'╩╩",
			"READY": "╬'Hazır'╩╩",
			"BLOCKED": "╬'Bloke'╩╩",
			"ACTIVE": "╬'Aktif'╩╩",
			"label_status": "╬'Takvim Statü'╩╩",
			"CHANGING_AS_DAY": "╬'Yıla göre değişen tatil'╩╩",
			"FIXED_REOCCURING": "╬'Sabit tatiller'╩╩",
			"EXCEPTION_HOLIDAY_AS_WORKING_DAY": "╬'Çalışma günü olarak istisna tatil'╩╩",
			"day2": "╬'Salı'╩╩",
			"label_is_half_days_business_day": "╬'Yarım Günler İş Günü Mü?'╩╩",
			"label_METADATA_CODE_ALREADY_EXISTS": "╬'Verilen kod kullanılmaktadır. '╩╩",
			"label_delete": "╬'Sil'╩╩",
			"label_detail": "╬'Detay'╩╩"
		},
		"en-US": {
			"label_yes": "╬'Yes'╩╩",
			"label_no": "╬'No'╩╩",
			"label_create": "╬'Create Calendar'╩╩",
			"label_code": "╬'Calendar Code'╩╩",
			"label_name": "╬'Calendar Name'╩╩",
			"day1": "╬'Monday'╩╩",
			"day3": "╬'Wednesday'╩╩",
			"day4": "╬'Thursday'╩╩",
			"day5": "╬'Friday'╩╩",
			"day6": "╬'Saturday'╩╩",
			"day7": "╬'Sunday'╩╩",
			"holidayList": "╬'Holiday List'╩╩",
			"uploadEx": "╬'Upload Excel'╩╩",
			"exportEx": "╬'Export to Excel'╩╩",
			"addHoliday": "╬'Add New Holiday'╩╩",
			"tblYear": "╬'Year'╩╩",
			"tblMonth": "╬'Month'╩╩",
			"tblDay": "╬'Day'╩╩",
			"tblPageText": "╬'Row per page'╩╩",
			"tblAllText": "╬'All'╩╩",
			"tblType": "╬'Holiday Type'╩╩",
			"tblName": "╬'Holiday Name'╩╩",
			"tblStatus": "╬'Holiday Status'╩╩",
			"tblNoData": "╬'No Data Available'╩╩",
			"btnSave": "╬'Save'╩╩",
			"calendarDef": "╬'Calendar Definition: In this section, you need to enter the calendar code, name and status of the calendar that will be defined'╩╩",
			"workDef": "╬'Definition of Working Days: Working days should be marked in this section.'╩╩",
			"holidayDef": "╬'Holiday Definitions: This section defines the holidays that you want to be included in the calendar.'╩╩",
			"popUpHolidayDef": "╬'New Holiday Definition'╩╩",
			"halfDayText": "╬'Is the Holiday Half a Day?'╩╩",
			"btnKapat": "╬'Close'╩╩",
			"labelSuc": "╬'The registration is successful.'╩╩",
			"labelFail": "╬'Service call error.'╩╩",
			"workDay": "╬'Working Days'╩╩",
			"PENDING": "╬'Pending'╩╩",
			"PASSIVE": "╬'Passive'╩╩",
			"CANCELLED": "╬'Cancelled'╩╩",
			"READY": "╬'Ready'╩╩",
			"BLOCKED": "╬'Blocked'╩╩",
			"ACTIVE": "╬'Active'╩╩",
			"label_status": "╬'Calendar Status'╩╩",
			"CHANGING_AS_DAY": "╬'Changing as day'╩╩",
			"FIXED_REOCCURING": "╬'Fixed reoccuring'╩╩",
			"EXCEPTION_HOLIDAY_AS_WORKING_DAY": "╬'Exception holiday as working day'╩╩",
			"day2": "╬'Tuesday'╩╩",
			"label_is_half_days_business_day": "╬'Are Half Days Business Day?'╩╩",
			"label_METADATA_CODE_ALREADY_EXISTS": "╬'Given code already exists. '╩╩",
			"label_delete": "╬'Delete'╩╩",
			"label_detail": "╬'Detail'╩╩"
		}
	},
	"description": {},
	"opt": {}
};
export default pjson