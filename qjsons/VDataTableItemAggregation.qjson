let pjson = {
	"pJson": [
		{
			"T": "Messaging",
			"P": {
				"ID": {
					"H": "PageComp",
					"T": "prop"
				},
				"triggerOnRestored": {
					"H": "false",
					"T": "prop"
				}
			},
			"E": {
				"fillTable": {
					"H": "\r\n(<any>components.serviceCallerComp).serviceCall({requestData: {},requestServicePrefix:'', requestBlockRender:true, requestURL:'https://mocki.io/v1/d35d5368-1e1c-4146-bdfa-93beb79cbc64', requestHttpType:'get', responseField:'fillTable'});\r\n",
					"C": true,
					"HL": "TS"
				}
			},
			"C": {},
			"_Editor": {
				"eID": "EdtrComp_1"
			},
			"O": {
				"cType": "child"
			},
			"S": {
				"xs-xl": {
					"pageBackgroundColor": "#ffffff",
					"statusBarColor": "#ffffff"
				}
			}
		},
		{
			"T": "VContainer",
			"P": {
				"ID": {
					"H": "VContainerComp",
					"T": "prop"
				},
				"class": {
					"H": "'container'",
					"T": "class"
				},
				"visible": {
					"H": "true",
					"T": "prop"
				},
				"eager": {
					"H": "true",
					"T": "prop"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "VRow",
							"P": {
								"ID": {
									"H": "VRowComp",
									"T": "prop"
								}
							},
							"E": {},
							"C": {
								"default": {
									"c": [
										{
											"T": "VCol",
											"C": {
												"default": {
													"c": [
														{
															"T": "VDataTable",
															"P": {
																"ID": {
																	"H": "EdtrComp_12",
																	"T": "prop"
																},
																"footerProps": {
																	"H": "{showFirstLastPage = true,\nfirstIcon = 'mdi-arrow-collapse-left',\nlastIcon = 'mdi-arrow-collapse-right',\nprevIcon = 'mdi-minus',\nnextIcon = 'mdi-plus'}",
																	"T": "prop"
																},
																"headers": {
																	"H": "[{ text = 'Dessert (100g serving)', align= 'start', sortable= false, value= 'name'},\n{ text = 'Calories', value= 'calories', sortable = true },\n{ text = 'Fat (g)', value= 'fat' },\n{ text = 'Carbs (g)', value= 'carbs' },\n{ text = 'Protein (g)', value= 'protein' },\n{ text = 'Iron (%)', value= 'iron' }]",
																	"T": "prop"
																},
																"itemsPerPage": {
																	"H": "5",
																	"T": "prop"
																},
																"mobileBreakpoint": {
																	"H": "600",
																	"T": "prop"
																},
																"visible": {
																	"H": "true",
																	"T": "prop"
																}
															},
															"E": {},
															"C": {},
															"_Editor": {
																"eID": "EdtrComp_12"
															},
															"S": {
																"xs-xl": {
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "",
																	"paddingBottom": "",
																	"paddingLeft": "",
																	"paddingRight": "",
																	"width": "",
																	"height": "",
																	"maxWidth": "",
																	"maxHeight": "",
																	"minWidth": "",
																	"minHeight": "",
																	"unlink": "false",
																	"unlinkMax": "false",
																	"unlinkMin": "false",
																	"isSizeCollapsed": "false",
																	"dense": "",
																	"headerFontColor": "#686868",
																	"headerFontFamily": "Roboto",
																	"headerFontSize": "12px",
																	"headerFontStyle": "normal",
																	"headerFontWeight": "400",
																	"headerCombinedFont": "Roboto-Regular",
																	"headerThemeFont": "Custom",
																	"footerText": "#686868",
																	"footerFontFamily": "Roboto",
																	"footerFontSize": "12px",
																	"footerFontStyle": "normal",
																	"footerFontWeight": "400",
																	"footerCombinedFont": "Roboto-Regular",
																	"footerThemeFont": "Custom",
																	"textColor": "#010101",
																	"itemFontFamily": "Roboto",
																	"itemFontSize": "14px",
																	"itemFontStyle": "normal",
																	"itemFontWeight": "400",
																	"itemsCombinedFont": "Roboto-Regular",
																	"itemsThemeFont": "Custom",
																	"backgroundColor": "#ffffff",
																	"hoverColor": "#ffffff",
																	"footerColor": "#FFFFFF",
																	"headerColor": "#FFFFFF",
																	"selectedBackground": "#FFFFFF",
																	"expandedContent": "#010101",
																	"lineColor": "#0000001f",
																	"lineSize": "1",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "solid",
																	"borderRightStyle": "solid",
																	"borderBottomStyle": "solid",
																	"borderLeftStyle": "solid",
																	"borderTopLeftRadius": "4px",
																	"borderTopRightRadius": "4px",
																	"borderBottomLeftRadius": "4px",
																	"borderBottomRightRadius": "4px",
																	"borderTopWidth": "0px",
																	"borderRightWidth": "0px",
																	"borderBottomWidth": "0px",
																	"borderLeftWidth": "0px",
																	"defaultBorderColor": "",
																	"sides": "Top,Right,Bottom,Left"
																}
															},
															"O": {
																"cType": "scopedSlot"
															}
														}
													],
													"cType": "slot"
												}
											},
											"E": {},
											"P": {
												"ID": {
													"H": "VColComp",
													"T": "prop"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_3"
											},
											"O": {
												"cType": "slot"
											},
											"S": {
												"xs-xl": {
													"col": "",
													"flexDirection": "column",
													"alignItems": "",
													"justifyContent": "",
													"marginLeft": "",
													"marginRight": "",
													"marginBottom": "",
													"marginTop": "",
													"paddingTop": "12px",
													"paddingBottom": "12px",
													"paddingLeft": "12px",
													"paddingRight": "12px",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										}
									],
									"cType": "slot"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_4"
							},
							"O": {
								"cType": "slot"
							},
							"S": {
								"xs-xl": {
									"marginLeft": "0px",
									"marginRight": "0px",
									"marginBottom": "0px",
									"marginTop": "0px",
									"paddingTop": "",
									"paddingBottom": "",
									"paddingLeft": "",
									"paddingRight": "",
									"width": "",
									"height": "",
									"backgroundColor": "#ffffff",
									"boxShadow": ""
								}
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_5"
			},
			"O": {
				"cType": "slot"
			},
			"S": {
				"xs-xl": {
					"marginLeft": "",
					"marginRight": "",
					"marginBottom": "",
					"marginTop": "",
					"paddingTop": "12px",
					"paddingBottom": "12px",
					"paddingLeft": "12px",
					"paddingRight": "12px",
					"width": "",
					"height": "",
					"backgroundColor": "#ffffff",
					"boxShadow": ""
				}
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "serviceCallerComp",
					"T": "prop"
				},
				"QJsonPath": {
					"H": "'ServiceCallerCustomComp.js'",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"onLoad": {
					"H": "quick.MM.trigger(\"fillTable\");\r\nquick.MM.trigger(\"getcombo\");\r\n//quick.EM.trace(components.EdtrComp_12.items)\r\n//debugger\r\n//let tableItems =[]; \r\n//tableItems = components.EdtrComp_12.items;\r\n//components.EdtrComp_12.items = [];\r\n//let calori = 0;\r\n//for (let item of tableItems) {\r\n//    calori += item.calories;\r\n//}\r\n//let tableItem: any = {};\r\n//tableItem.calories = calori;\r\n//tableItem.name = 'toplam';\r\n//tableItems.push(tableItem);\r\n//components.EdtrComp_12.items.push(tableItems);\r\n////quick.Quick.reset('EdtrComp_12');\r\n//quick.EM.trace(\"calori\")\r\n//quick.EM.trace(calori)",
					"HL": "TS"
				},
				"onServiceSuccessCallBack": {
					"H": "//[{ text = 'Dessert (100g serving)', align= 'start', sortable= false, value= 'name'},\r\n//{ text = 'Calories', value= 'calories', sortable = true },\r\n//{ text = 'Fat (g)', value= 'fat' },\r\n//{ text = 'Carbs (g)', value= 'carbs' },\r\n//{ text = 'Protein (g)', value= 'protein' },\r\n//{ text = 'Iron (%)', value= 'iron' }]\r\n\r\nif (serviceResponse.fillTable != null) {\r\n    components.EdtrComp_12.items = [];\r\n    let calories = 0;\r\n    for (let i = 0; i <= serviceResponse.fillTable.length; i++) {\r\n        var tableItems: any = [];\r\n\r\n        if (i < serviceResponse.fillTable.length) {\r\n            calories += serviceResponse.fillTable[i].calories;\r\n            tableItems.name = serviceResponse.fillTable[i].name;\r\n            tableItems.calories = serviceResponse.fillTable[i].calories;\r\n            components.EdtrComp_12.items.push(tableItems);\r\n            quick.store.set('calories', calories)\r\n\r\n        }\r\n    }\r\n    serviceResponse.fillTable = null;\r\n}\r\n",
					"C": true,
					"P": "serviceResponse:any",
					"HL": "TS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_11",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_11"
							},
							"O": {
								"cType": "child"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_8"
			},
			"O": {
				"cType": "child",
				"dynProps": true
			}
		},
		{
			"T": "VBtn",
			"P": {
				"ID": {
					"H": "EdtrComp_165",
					"T": "prop"
				},
				"color": {
					"H": "'primary'",
					"T": "prop"
				},
				"depressed": {
					"H": "true",
					"T": "prop"
				},
				"elevation": {
					"H": "0",
					"T": "prop"
				},
				"height": {
					"H": "'40px'",
					"T": "prop"
				},
				"visible": {
					"H": "true",
					"T": "prop"
				}
			},
			"E": {
				"click": {
					"H": "\r\nlet tableItems: any=[];\r\ntableItems.name = \"Toplam\";\r\ntableItems.calories = quick.store.get('calories');\r\ncomponents.EdtrComp_12.items.push(tableItems);\r\n\r\n",
					"P": "mouseEvent:unknown | undefined",
					"HL": "TS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "QLabel",
							"C": {},
							"E": {},
							"P": {
								"ID": {
									"H": "EdtrComp_168",
									"T": "prop"
								},
								"text": {
									"H": "'Calories Toplam'",
									"T": "prop",
									"HL": "QS"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_168"
							},
							"O": {
								"cType": "child"
							},
							"S": {
								"xs-xl": {
									"marginTop": "",
									"marginRight": "",
									"marginBottom": "",
									"marginLeft": "",
									"paddingTop": "",
									"paddingRight": "",
									"paddingBottom": "",
									"paddingLeft": "",
									"fontColor": "#000000",
									"fontFamily": "Roboto",
									"fontSize": "16px",
									"fontStyle": "normal",
									"fontWeight": "400",
									"combinedFont": "Roboto-Regular",
									"ThemeFont": "Custom",
									"lineHeight": "20px"
								}
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_165"
			},
			"S": {
				"xs-xl": {
					"marginTop": "",
					"marginRight": "",
					"marginBottom": "",
					"marginLeft": "",
					"paddingTop": "",
					"paddingRight": "16px",
					"paddingBottom": "",
					"paddingLeft": "16px",
					"width": "",
					"height": "",
					"maxWidth": "",
					"maxHeight": "",
					"minWidth": "",
					"minHeight": "",
					"unlink": "false",
					"unlinkMax": "false",
					"unlinkMin": "false",
					"isSizeCollapsed": "false",
					"fontColor": "#ffffff",
					"fontFamily": "Roboto",
					"fontSize": "16px",
					"fontStyle": "normal",
					"fontWeight": "400",
					"combinedFont": "Roboto-Regular",
					"ThemeFont": "Custom",
					"lineHeight": "20px",
					"backgroundColor": "#1976D2",
					"disabledBackgroundColor": "rgba(0,0,0,.12)",
					"boxShadow": "",
					"boxSizing": "",
					"borderTopStyle": "solid",
					"borderRightStyle": "solid",
					"borderBottomStyle": "solid",
					"borderLeftStyle": "solid",
					"borderTopLeftRadius": "4px",
					"borderTopRightRadius": "4px",
					"borderBottomLeftRadius": "4px",
					"borderBottomRightRadius": "4px",
					"borderTopWidth": "0px",
					"borderRightWidth": "0px",
					"borderBottomWidth": "0px",
					"borderLeftWidth": "0px",
					"defaultBorderColor": "",
					"sides": "Top,Right,Bottom,Left"
				}
			},
			"SC": {
				"fontColor": {
					"VIcon": "iconColor",
					"QLabel": "fontColor"
				},
				"fontStyle": {
					"QLabel": "fontStyle"
				},
				"fontSize": {
					"QLabel": "fontSize"
				},
				"fontFamily": {
					"QLabel": "fontFamily"
				},
				"fontWeight": {
					"QLabel": "fontWeight"
				},
				"combinedFont": {
					"QLabel": "combinedFont"
				},
				"lineHeight": {
					"QLabel": "lineHeight"
				},
				"bacgroundColor": {
					"VIcon": "backgroundColor"
				}
			},
			"O": {
				"cType": "slot"
			}
		}
	],
	"cJson": [
		{
			"T": "Messaging",
			"P": {
				"ID": {
					"H": "PageComp",
					"T": "prop"
				},
				"triggerOnRestored": {
					"H": "╬false╩╩",
					"T": "prop"
				}
			},
			"E": {
				"fillTable": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\ncomponents.serviceCallerComp.serviceCall({ requestData: {}, requestServicePrefix: '', requestBlockRender: true, requestURL: 'https://mocki.io/v1/d35d5368-1e1c-4146-bdfa-93beb79cbc64', requestHttpType: 'get', responseField: 'fillTable' });\r\n",
					"C": true,
					"HL": "JS"
				}
			},
			"C": {},
			"_Editor": {
				"eID": "EdtrComp_1"
			},
			"O": {
				"cType": "child",
				"compDomClasses": "newDropBorder"
			},
			"S": {
				"xs-xl": {
					"pageBackgroundColor": "#ffffff",
					"statusBarColor": "#ffffff"
				}
			}
		},
		{
			"T": "VContainer",
			"P": {
				"ID": {
					"H": "VContainerComp",
					"T": "prop"
				},
				"class": {
					"H": "╬'container'╩╩",
					"T": "class"
				},
				"visible": {
					"H": "╬true╩╩",
					"T": "prop"
				},
				"eager": {
					"H": "╬true╩╩",
					"T": "prop"
				}
			},
			"E": {},
			"C": {
				"default": {
					"c": [
						{
							"T": "VRow",
							"P": {
								"ID": {
									"H": "VRowComp",
									"T": "prop"
								}
							},
							"E": {},
							"C": {
								"default": {
									"c": [
										{
											"T": "VCol",
											"C": {
												"default": {
													"c": [
														{
															"T": "VDataTable",
															"P": {
																"ID": {
																	"H": "EdtrComp_12",
																	"T": "prop"
																},
																"footerProps": {
																	"H": "╬{}╠=╣showFirstLastPage╩╠true╩╩╠=╣firstIcon╩╠'mdi-arrow-collapse-left'╩╩╠=╣lastIcon╩╠'mdi-arrow-collapse-right'╩╩╠=╣prevIcon╩╠'mdi-minus'╩╩╠=╣nextIcon╩╠'mdi-plus'╩╩╩╩",
																	"T": "prop"
																},
																"headers": {
																	"H": "╬[]╠{}╠=╣text╩╠'Dessert (100g serving)'╩╩╠=╣align╩╠'start'╩╩╠=╣sortable╩╠false╩╩╠=╣value╩╠'name'╩╩╩╠{}╠=╣text╩╠'Calories'╩╩╠=╣value╩╠'calories'╩╩╠=╣sortable╩╠true╩╩╩╠{}╠=╣text╩╠'Fat (g)'╩╩╠=╣value╩╠'fat'╩╩╩╠{}╠=╣text╩╠'Carbs (g)'╩╩╠=╣value╩╠'carbs'╩╩╩╠{}╠=╣text╩╠'Protein (g)'╩╩╠=╣value╩╠'protein'╩╩╩╠{}╠=╣text╩╠'Iron (%)'╩╩╠=╣value╩╠'iron'╩╩╩╩╩",
																	"T": "prop"
																},
																"itemsPerPage": {
																	"H": "╬5╩╩",
																	"T": "prop"
																},
																"mobileBreakpoint": {
																	"H": "╬600╩╩",
																	"T": "prop"
																},
																"visible": {
																	"H": "╬true╩╩",
																	"T": "prop"
																}
															},
															"E": {},
															"C": {},
															"_Editor": {
																"eID": "EdtrComp_12"
															},
															"S": {
																"xs-xl": {
																	"marginLeft": "",
																	"marginRight": "",
																	"marginBottom": "",
																	"marginTop": "",
																	"paddingTop": "",
																	"paddingBottom": "",
																	"paddingLeft": "",
																	"paddingRight": "",
																	"width": "",
																	"height": "",
																	"maxWidth": "",
																	"maxHeight": "",
																	"minWidth": "",
																	"minHeight": "",
																	"unlink": "false",
																	"unlinkMax": "false",
																	"unlinkMin": "false",
																	"isSizeCollapsed": "false",
																	"dense": "",
																	"headerFontColor": "#686868",
																	"headerFontFamily": "Roboto",
																	"headerFontSize": "12px",
																	"headerFontStyle": "normal",
																	"headerFontWeight": "400",
																	"headerCombinedFont": "Roboto-Regular",
																	"headerThemeFont": "Custom",
																	"footerText": "#686868",
																	"footerFontFamily": "Roboto",
																	"footerFontSize": "12px",
																	"footerFontStyle": "normal",
																	"footerFontWeight": "400",
																	"footerCombinedFont": "Roboto-Regular",
																	"footerThemeFont": "Custom",
																	"textColor": "#010101",
																	"itemFontFamily": "Roboto",
																	"itemFontSize": "14px",
																	"itemFontStyle": "normal",
																	"itemFontWeight": "400",
																	"itemsCombinedFont": "Roboto-Regular",
																	"itemsThemeFont": "Custom",
																	"backgroundColor": "#ffffff",
																	"hoverColor": "#ffffff",
																	"footerColor": "#FFFFFF",
																	"headerColor": "#FFFFFF",
																	"selectedBackground": "#FFFFFF",
																	"expandedContent": "#010101",
																	"lineColor": "#0000001f",
																	"lineSize": "1",
																	"boxShadow": "",
																	"boxSizing": "",
																	"borderTopStyle": "solid",
																	"borderRightStyle": "solid",
																	"borderBottomStyle": "solid",
																	"borderLeftStyle": "solid",
																	"borderTopLeftRadius": "4px",
																	"borderTopRightRadius": "4px",
																	"borderBottomLeftRadius": "4px",
																	"borderBottomRightRadius": "4px",
																	"borderTopWidth": "0px",
																	"borderRightWidth": "0px",
																	"borderBottomWidth": "0px",
																	"borderLeftWidth": "0px",
																	"defaultBorderColor": "",
																	"sides": "Top,Right,Bottom,Left"
																}
															},
															"O": {
																"cType": "scopedSlot",
																"compDomClasses": "v-data-table v-data-table--has-bottom theme--light newDropBorder"
															}
														}
													],
													"cType": "slot"
												}
											},
											"E": {},
											"P": {
												"ID": {
													"H": "VColComp",
													"T": "prop"
												}
											},
											"_Editor": {
												"eID": "EdtrComp_3"
											},
											"O": {
												"cType": "slot",
												"compDomClasses": "col newDropBorder"
											},
											"S": {
												"xs-xl": {
													"col": "",
													"flexDirection": "column",
													"alignItems": "",
													"justifyContent": "",
													"marginLeft": "",
													"marginRight": "",
													"marginBottom": "",
													"marginTop": "",
													"paddingTop": "12px",
													"paddingBottom": "12px",
													"paddingLeft": "12px",
													"paddingRight": "12px",
													"backgroundColor": "#ffffff",
													"boxShadow": ""
												}
											}
										}
									],
									"cType": "slot"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_4"
							},
							"O": {
								"cType": "slot",
								"compDomClasses": "row newDropBorder"
							},
							"S": {
								"xs-xl": {
									"marginLeft": "0px",
									"marginRight": "0px",
									"marginBottom": "0px",
									"marginTop": "0px",
									"paddingTop": "",
									"paddingBottom": "",
									"paddingLeft": "",
									"paddingRight": "",
									"width": "",
									"height": "",
									"backgroundColor": "#ffffff",
									"boxShadow": ""
								}
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_5"
			},
			"O": {
				"cType": "slot",
				"compDomClasses": "container newDropBorder"
			},
			"S": {
				"xs-xl": {
					"marginLeft": "",
					"marginRight": "",
					"marginBottom": "",
					"marginTop": "",
					"paddingTop": "12px",
					"paddingBottom": "12px",
					"paddingLeft": "12px",
					"paddingRight": "12px",
					"width": "",
					"height": "",
					"backgroundColor": "#ffffff",
					"boxShadow": ""
				}
			}
		},
		{
			"T": "CustomComponent",
			"P": {
				"ID": {
					"H": "serviceCallerComp",
					"T": "prop"
				},
				"QJsonPath": {
					"H": "╬'ServiceCallerCustomComp.js'╩╩",
					"T": "prop",
					"HL": "QS"
				}
			},
			"E": {
				"onLoad": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\nquick.MM.trigger(\"fillTable\");\r\nquick.MM.trigger(\"getcombo\");\r\n",
					"HL": "JS"
				},
				"onServiceSuccessCallBack": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\n//[{ text = 'Dessert (100g serving)', align= 'start', sortable= false, value= 'name'},\r\n//{ text = 'Calories', value= 'calories', sortable = true },\r\n//{ text = 'Fat (g)', value= 'fat' },\r\n//{ text = 'Carbs (g)', value= 'carbs' },\r\n//{ text = 'Protein (g)', value= 'protein' },\r\n//{ text = 'Iron (%)', value= 'iron' }]\r\nif (serviceResponse.fillTable != null) {\r\n    components.EdtrComp_12.items = [];\r\n    var calories = 0;\r\n    for (var i = 0; i <= serviceResponse.fillTable.length; i++) {\r\n        var tableItems = [];\r\n        if (i < serviceResponse.fillTable.length) {\r\n            calories += serviceResponse.fillTable[i].calories;\r\n            tableItems.name = serviceResponse.fillTable[i].name;\r\n            tableItems.calories = serviceResponse.fillTable[i].calories;\r\n            components.EdtrComp_12.items.push(tableItems);\r\n            quick.store.set('calories', calories);\r\n        }\r\n    }\r\n    serviceResponse.fillTable = null;\r\n}\r\n",
					"C": true,
					"P": "serviceResponse:any",
					"HL": "JS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "Ghost",
							"P": {
								"ID": {
									"H": "EdtrComp_11",
									"T": "prop"
								}
							},
							"E": {},
							"C": {},
							"_Editor": {
								"eID": "EdtrComp_11"
							},
							"O": {
								"cType": "child",
								"compDomClasses": "editor-ghost-comp"
							}
						}
					],
					"cType": "child"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_8"
			},
			"O": {
				"cType": "child",
				"dynProps": true,
				"compDomClasses": ""
			}
		},
		{
			"T": "VBtn",
			"P": {
				"ID": {
					"H": "EdtrComp_165",
					"T": "prop"
				},
				"color": {
					"H": "╬'primary'╩╩",
					"T": "prop"
				},
				"depressed": {
					"H": "╬true╩╩",
					"T": "prop"
				},
				"elevation": {
					"H": "╬0╩╩",
					"T": "prop"
				},
				"height": {
					"H": "╬'40px'╩╩",
					"T": "prop"
				},
				"visible": {
					"H": "╬true╩╩",
					"T": "prop"
				}
			},
			"E": {
				"click": {
					"H": "Object.defineProperty(exports, \"__esModule\", { value: true });\r\nvar tableItems = [];\r\ntableItems.name = \"Toplam\";\r\ntableItems.calories = quick.store.get('calories');\r\ncomponents.EdtrComp_12.items.push(tableItems);\r\n",
					"P": "mouseEvent:unknown | undefined",
					"HL": "JS"
				}
			},
			"C": {
				"default": {
					"c": [
						{
							"T": "QLabel",
							"C": {},
							"E": {},
							"P": {
								"ID": {
									"H": "EdtrComp_168",
									"T": "prop"
								},
								"text": {
									"H": "╬'Calories Toplam'╩╩",
									"T": "prop",
									"HL": "QS"
								}
							},
							"_Editor": {
								"eID": "EdtrComp_168"
							},
							"O": {
								"cType": "child",
								"compDomClasses": "q-label newDropBorder"
							},
							"S": {
								"xs-xl": {
									"marginTop": "",
									"marginRight": "",
									"marginBottom": "",
									"marginLeft": "",
									"paddingTop": "",
									"paddingRight": "",
									"paddingBottom": "",
									"paddingLeft": "",
									"fontColor": "#000000",
									"fontFamily": "Roboto",
									"fontSize": "16px",
									"fontStyle": "normal",
									"fontWeight": "400",
									"combinedFont": "Roboto-Regular",
									"ThemeFont": "Custom",
									"lineHeight": "20px"
								}
							}
						}
					],
					"cType": "slot"
				}
			},
			"_Editor": {
				"eID": "EdtrComp_165"
			},
			"S": {
				"xs-xl": {
					"marginTop": "",
					"marginRight": "",
					"marginBottom": "",
					"marginLeft": "",
					"paddingTop": "",
					"paddingRight": "16px",
					"paddingBottom": "",
					"paddingLeft": "16px",
					"width": "",
					"height": "",
					"maxWidth": "",
					"maxHeight": "",
					"minWidth": "",
					"minHeight": "",
					"unlink": "false",
					"unlinkMax": "false",
					"unlinkMin": "false",
					"isSizeCollapsed": "false",
					"fontColor": "#ffffff",
					"fontFamily": "Roboto",
					"fontSize": "16px",
					"fontStyle": "normal",
					"fontWeight": "400",
					"combinedFont": "Roboto-Regular",
					"ThemeFont": "Custom",
					"lineHeight": "20px",
					"backgroundColor": "#1976D2",
					"disabledBackgroundColor": "rgba(0,0,0,.12)",
					"boxShadow": "",
					"boxSizing": "",
					"borderTopStyle": "solid",
					"borderRightStyle": "solid",
					"borderBottomStyle": "solid",
					"borderLeftStyle": "solid",
					"borderTopLeftRadius": "4px",
					"borderTopRightRadius": "4px",
					"borderBottomLeftRadius": "4px",
					"borderBottomRightRadius": "4px",
					"borderTopWidth": "0px",
					"borderRightWidth": "0px",
					"borderBottomWidth": "0px",
					"borderLeftWidth": "0px",
					"defaultBorderColor": "",
					"sides": "Top,Right,Bottom,Left"
				}
			},
			"SC": {
				"fontColor": {
					"VIcon": "iconColor",
					"QLabel": "fontColor"
				},
				"fontStyle": {
					"QLabel": "fontStyle"
				},
				"fontSize": {
					"QLabel": "fontSize"
				},
				"fontFamily": {
					"QLabel": "fontFamily"
				},
				"fontWeight": {
					"QLabel": "fontWeight"
				},
				"combinedFont": {
					"QLabel": "combinedFont"
				},
				"lineHeight": {
					"QLabel": "lineHeight"
				},
				"bacgroundColor": {
					"VIcon": "backgroundColor"
				}
			},
			"O": {
				"cType": "slot",
				"compDomClasses": "v-btn v-btn--depressed theme--light elevation-0 v-size--default primary newDropBorder"
			}
		}
	],
	"lrids": {},
	"clrids": {},
	"opt": {}
};
export default pjson